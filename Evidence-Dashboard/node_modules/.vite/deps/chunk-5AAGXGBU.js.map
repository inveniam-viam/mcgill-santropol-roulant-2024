{
  "version": 3,
  "sources": ["../../@evidence-dev/component-utilities/src/stores.js"],
  "sourcesContent": ["import { dev } from '$app/environment';\nimport { browser } from '$app/environment';\nimport { writable } from 'svelte/store';\n\nexport const pageHasQueries = writable(true);\nexport const routeHash = writable('');\n\nfunction createToastsObject() {\n\tconst { subscribe, update } = writable([]);\n\n\tconst timeoutMap = new Map();\n\n\tconst removeToast = (id) => {\n\t\tupdate(($toasts) => $toasts.filter((existing) => existing.id !== id));\n\t};\n\n\treturn {\n\t\tsubscribe,\n\t\t/**\n\t\t *\n\t\t * @param {Toast} toast\n\t\t * @param {number} [timeout]\n\t\t */\n\t\tadd: (toast, timeout = 2000) => {\n\t\t\t// Totally safe ids\n\t\t\ttoast.id = toast.id ?? Math.random().toString();\n\t\t\tupdate(($toasts) => {\n\t\t\t\tconst existing = $toasts.find((t) => t.id === toast.id);\n\t\t\t\tif (existing) {\n\t\t\t\t\tObject.assign(existing, toast);\n\t\t\t\t\tif (timeoutMap.has(toast.id)) {\n\t\t\t\t\t\tclearTimeout(timeoutMap.get(toast.id));\n\t\t\t\t\t\ttimeoutMap.delete(toast.id);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$toasts.push(toast);\n\t\t\t\t}\n\t\t\t\treturn $toasts;\n\t\t\t});\n\t\t\tif (timeout) {\n\t\t\t\tconst timeoutId = setTimeout(() => {\n\t\t\t\t\tremoveToast(toast.id);\n\t\t\t\t\ttimeoutMap.delete(toast.id);\n\t\t\t\t}, timeout);\n\t\t\t\ttimeoutMap.set(toast.id, timeoutId);\n\t\t\t}\n\t\t},\n\t\tdismiss: (toastId) => {\n\t\t\tremoveToast(toastId);\n\t\t\tif (timeoutMap.has(toastId)) {\n\t\t\t\tclearTimeout(timeoutMap.get(toastId));\n\t\t\t\ttimeoutMap.delete[toastId];\n\t\t\t}\n\t\t}\n\t};\n}\n\n/** @typedef {\"error\" | \"warning\" | \"success\" | \"info\"} ToastStatus */\n/** @typedef {{ id: string; status?: ToastStatus; title: string; message: string; }} Toast */\n/** @type {import('svelte/store').Readable<Toast[]> & { add: (toast: Toast, timeout: number) => void }} */\nexport const toasts = createToastsObject();\n\n/**\n * @template T\n * @param {import('svelte/store').Readable<T>} store\n * @returns {T}\n */\nconst getStoreVal = (store) => {\n\tlet v;\n\tstore.subscribe((x) => (v = x))();\n\treturn v;\n};\n\n/**\n * Implementation of a writable store that also saves it's values to localStorage\n * @template T\n * @param {string} key localStorage key\n * @param {T} init\n * @returns {Writable<T>}\n */\nexport const localStorageStore = (key, init) => {\n\tconst store = writable(browser ? JSON.parse(localStorage.getItem(key)) ?? init : init);\n\tconst { subscribe, set } = store;\n\n\t/** @type {(v: T) => void} */\n\tconst flush = (v) => {\n\t\tif (browser) {\n\t\t\tif (typeof v === 'undefined' || v === null) {\n\t\t\t\tlocalStorage.removeItem(key);\n\t\t\t} else {\n\t\t\t\tlocalStorage.setItem(key, JSON.stringify(v));\n\t\t\t}\n\t\t}\n\t};\n\n\tflush(getStoreVal(store));\n\n\t/** @type {Writable<T>} */\n\treturn {\n\t\tsubscribe,\n\t\tset: (v) => {\n\t\t\tset(v);\n\t\t\tflush(v);\n\t\t},\n\t\tupdate: (cb) => {\n\t\t\tconst updatedStore = cb(getStoreVal(store));\n\t\t\tset(updatedStore);\n\t\t\tflush(updatedStore);\n\t\t}\n\t};\n};\n\n// Persist ShowQueries user choice\nexport const showQueries = localStorageStore('showQueries', dev && browser);\n"],
  "mappings": ";;;;;AAAA,SAAS,WAAW;AACpB,SAAS,eAAe;AAGjB,IAAM,iBAAiB,SAAS,IAAI;AACpC,IAAM,YAAY,SAAS,EAAE;AAEpC,SAAS,qBAAqB;AAC7B,QAAM,EAAE,WAAW,OAAO,IAAI,SAAS,CAAC,CAAC;AAEzC,QAAM,aAAa,oBAAI,IAAI;AAE3B,QAAM,cAAc,CAAC,OAAO;AAC3B,WAAO,CAAC,YAAY,QAAQ,OAAO,CAAC,aAAa,SAAS,OAAO,EAAE,CAAC;AAAA,EACrE;AAEA,SAAO;AAAA,IACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,KAAK,CAAC,OAAO,UAAU,QAAS;AAE/B,YAAM,KAAK,MAAM,MAAM,KAAK,OAAO,EAAE,SAAS;AAC9C,aAAO,CAAC,YAAY;AACnB,cAAM,WAAW,QAAQ,KAAK,CAAC,MAAM,EAAE,OAAO,MAAM,EAAE;AACtD,YAAI,UAAU;AACb,iBAAO,OAAO,UAAU,KAAK;AAC7B,cAAI,WAAW,IAAI,MAAM,EAAE,GAAG;AAC7B,yBAAa,WAAW,IAAI,MAAM,EAAE,CAAC;AACrC,uBAAW,OAAO,MAAM,EAAE;AAAA,UAC3B;AAAA,QACD,OAAO;AACN,kBAAQ,KAAK,KAAK;AAAA,QACnB;AACA,eAAO;AAAA,MACR,CAAC;AACD,UAAI,SAAS;AACZ,cAAM,YAAY,WAAW,MAAM;AAClC,sBAAY,MAAM,EAAE;AACpB,qBAAW,OAAO,MAAM,EAAE;AAAA,QAC3B,GAAG,OAAO;AACV,mBAAW,IAAI,MAAM,IAAI,SAAS;AAAA,MACnC;AAAA,IACD;AAAA,IACA,SAAS,CAAC,YAAY;AACrB,kBAAY,OAAO;AACnB,UAAI,WAAW,IAAI,OAAO,GAAG;AAC5B,qBAAa,WAAW,IAAI,OAAO,CAAC;AACpC,mBAAW,OAAO,OAAO;AAAA,MAC1B;AAAA,IACD;AAAA,EACD;AACD;AAKO,IAAM,SAAS,mBAAmB;AAOzC,IAAM,cAAc,CAAC,UAAU;AAC9B,MAAI;AACJ,QAAM,UAAU,CAAC,MAAO,IAAI,CAAE,EAAE;AAChC,SAAO;AACR;AASO,IAAM,oBAAoB,CAAC,KAAK,SAAS;AAC/C,QAAM,QAAQ,SAAS,UAAU,KAAK,MAAM,aAAa,QAAQ,GAAG,CAAC,KAAK,OAAO,IAAI;AACrF,QAAM,EAAE,WAAW,IAAI,IAAI;AAG3B,QAAM,QAAQ,CAAC,MAAM;AACpB,QAAI,SAAS;AACZ,UAAI,OAAO,MAAM,eAAe,MAAM,MAAM;AAC3C,qBAAa,WAAW,GAAG;AAAA,MAC5B,OAAO;AACN,qBAAa,QAAQ,KAAK,KAAK,UAAU,CAAC,CAAC;AAAA,MAC5C;AAAA,IACD;AAAA,EACD;AAEA,QAAM,YAAY,KAAK,CAAC;AAGxB,SAAO;AAAA,IACN;AAAA,IACA,KAAK,CAAC,MAAM;AACX,UAAI,CAAC;AACL,YAAM,CAAC;AAAA,IACR;AAAA,IACA,QAAQ,CAAC,OAAO;AACf,YAAM,eAAe,GAAG,YAAY,KAAK,CAAC;AAC1C,UAAI,YAAY;AAChB,YAAM,YAAY;AAAA,IACnB;AAAA,EACD;AACD;AAGO,IAAM,cAAc,kBAAkB,eAAe,OAAO,OAAO;",
  "names": []
}
