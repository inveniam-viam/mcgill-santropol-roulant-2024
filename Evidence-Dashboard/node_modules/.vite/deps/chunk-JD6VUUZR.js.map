{
  "version": 3,
  "sources": ["../../static-eval/node_modules/estraverse/package.json", "../../static-eval/node_modules/estraverse/estraverse.js", "../../esutils/lib/ast.js", "../../esutils/lib/code.js", "../../esutils/lib/keyword.js", "../../esutils/lib/utils.js", "../../source-map/lib/base64.js", "../../source-map/lib/base64-vlq.js", "../../source-map/lib/util.js", "../../source-map/lib/array-set.js", "../../source-map/lib/mapping-list.js", "../../source-map/lib/source-map-generator.js", "../../source-map/lib/binary-search.js", "../../source-map/lib/quick-sort.js", "../../source-map/lib/source-map-consumer.js", "../../source-map/lib/source-node.js", "../../source-map/source-map.js", "../../static-eval/node_modules/escodegen/package.json", "../../static-eval/node_modules/escodegen/escodegen.js", "../../static-eval/index.js", "../../@astronautlabs/jsonpath/generated/parser.js", "../../@astronautlabs/jsonpath/src/esprima.ts", "../../@astronautlabs/jsonpath/src/slice.ts", "../../@astronautlabs/jsonpath/src/handlers.ts", "../../@astronautlabs/jsonpath/src/tokens.ts", "../../@astronautlabs/jsonpath/src/parser.ts", "../../@astronautlabs/jsonpath/src/assert.ts", "../../@astronautlabs/jsonpath/src/jsonpath.ts"],
  "sourcesContent": ["{\n  \"name\": \"estraverse\",\n  \"description\": \"ECMAScript JS AST traversal functions\",\n  \"homepage\": \"https://github.com/estools/estraverse\",\n  \"main\": \"estraverse.js\",\n  \"version\": \"4.3.0\",\n  \"engines\": {\n    \"node\": \">=4.0\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"Yusuke Suzuki\",\n      \"email\": \"utatane.tea@gmail.com\",\n      \"web\": \"http://github.com/Constellation\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"http://github.com/estools/estraverse.git\"\n  },\n  \"devDependencies\": {\n    \"babel-preset-env\": \"^1.6.1\",\n    \"babel-register\": \"^6.3.13\",\n    \"chai\": \"^2.1.1\",\n    \"espree\": \"^1.11.0\",\n    \"gulp\": \"^3.8.10\",\n    \"gulp-bump\": \"^0.2.2\",\n    \"gulp-filter\": \"^2.0.0\",\n    \"gulp-git\": \"^1.0.1\",\n    \"gulp-tag-version\": \"^1.3.0\",\n    \"jshint\": \"^2.5.6\",\n    \"mocha\": \"^2.1.0\"\n  },\n  \"license\": \"BSD-2-Clause\",\n  \"scripts\": {\n    \"test\": \"npm run-script lint && npm run-script unit-test\",\n    \"lint\": \"jshint estraverse.js\",\n    \"unit-test\": \"mocha --compilers js:babel-register\"\n  }\n}\n", "/*\n  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*jslint vars:false, bitwise:true*/\n/*jshint indent:4*/\n/*global exports:true*/\n(function clone(exports) {\n    'use strict';\n\n    var Syntax,\n        VisitorOption,\n        VisitorKeys,\n        BREAK,\n        SKIP,\n        REMOVE;\n\n    function deepCopy(obj) {\n        var ret = {}, key, val;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                val = obj[key];\n                if (typeof val === 'object' && val !== null) {\n                    ret[key] = deepCopy(val);\n                } else {\n                    ret[key] = val;\n                }\n            }\n        }\n        return ret;\n    }\n\n    // based on LLVM libc++ upper_bound / lower_bound\n    // MIT License\n\n    function upperBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                len = diff;\n            } else {\n                i = current + 1;\n                len -= diff + 1;\n            }\n        }\n        return i;\n    }\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        AssignmentPattern: 'AssignmentPattern',\n        ArrayExpression: 'ArrayExpression',\n        ArrayPattern: 'ArrayPattern',\n        ArrowFunctionExpression: 'ArrowFunctionExpression',\n        AwaitExpression: 'AwaitExpression', // CAUTION: It's deferred to ES7.\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ClassBody: 'ClassBody',\n        ClassDeclaration: 'ClassDeclaration',\n        ClassExpression: 'ClassExpression',\n        ComprehensionBlock: 'ComprehensionBlock',  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: 'ComprehensionExpression',  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        DirectiveStatement: 'DirectiveStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExportAllDeclaration: 'ExportAllDeclaration',\n        ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n        ExportNamedDeclaration: 'ExportNamedDeclaration',\n        ExportSpecifier: 'ExportSpecifier',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        ForOfStatement: 'ForOfStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        GeneratorExpression: 'GeneratorExpression',  // CAUTION: It's deferred to ES7.\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        ImportExpression: 'ImportExpression',\n        ImportDeclaration: 'ImportDeclaration',\n        ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n        ImportSpecifier: 'ImportSpecifier',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        MetaProperty: 'MetaProperty',\n        MethodDefinition: 'MethodDefinition',\n        ModuleSpecifier: 'ModuleSpecifier',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        ObjectPattern: 'ObjectPattern',\n        Program: 'Program',\n        Property: 'Property',\n        RestElement: 'RestElement',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SpreadElement: 'SpreadElement',\n        Super: 'Super',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        TaggedTemplateExpression: 'TaggedTemplateExpression',\n        TemplateElement: 'TemplateElement',\n        TemplateLiteral: 'TemplateLiteral',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement',\n        YieldExpression: 'YieldExpression'\n    };\n\n    VisitorKeys = {\n        AssignmentExpression: ['left', 'right'],\n        AssignmentPattern: ['left', 'right'],\n        ArrayExpression: ['elements'],\n        ArrayPattern: ['elements'],\n        ArrowFunctionExpression: ['params', 'body'],\n        AwaitExpression: ['argument'], // CAUTION: It's deferred to ES7.\n        BlockStatement: ['body'],\n        BinaryExpression: ['left', 'right'],\n        BreakStatement: ['label'],\n        CallExpression: ['callee', 'arguments'],\n        CatchClause: ['param', 'body'],\n        ClassBody: ['body'],\n        ClassDeclaration: ['id', 'superClass', 'body'],\n        ClassExpression: ['id', 'superClass', 'body'],\n        ComprehensionBlock: ['left', 'right'],  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: ['test', 'consequent', 'alternate'],\n        ContinueStatement: ['label'],\n        DebuggerStatement: [],\n        DirectiveStatement: [],\n        DoWhileStatement: ['body', 'test'],\n        EmptyStatement: [],\n        ExportAllDeclaration: ['source'],\n        ExportDefaultDeclaration: ['declaration'],\n        ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],\n        ExportSpecifier: ['exported', 'local'],\n        ExpressionStatement: ['expression'],\n        ForStatement: ['init', 'test', 'update', 'body'],\n        ForInStatement: ['left', 'right', 'body'],\n        ForOfStatement: ['left', 'right', 'body'],\n        FunctionDeclaration: ['id', 'params', 'body'],\n        FunctionExpression: ['id', 'params', 'body'],\n        GeneratorExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        Identifier: [],\n        IfStatement: ['test', 'consequent', 'alternate'],\n        ImportExpression: ['source'],\n        ImportDeclaration: ['specifiers', 'source'],\n        ImportDefaultSpecifier: ['local'],\n        ImportNamespaceSpecifier: ['local'],\n        ImportSpecifier: ['imported', 'local'],\n        Literal: [],\n        LabeledStatement: ['label', 'body'],\n        LogicalExpression: ['left', 'right'],\n        MemberExpression: ['object', 'property'],\n        MetaProperty: ['meta', 'property'],\n        MethodDefinition: ['key', 'value'],\n        ModuleSpecifier: [],\n        NewExpression: ['callee', 'arguments'],\n        ObjectExpression: ['properties'],\n        ObjectPattern: ['properties'],\n        Program: ['body'],\n        Property: ['key', 'value'],\n        RestElement: [ 'argument' ],\n        ReturnStatement: ['argument'],\n        SequenceExpression: ['expressions'],\n        SpreadElement: ['argument'],\n        Super: [],\n        SwitchStatement: ['discriminant', 'cases'],\n        SwitchCase: ['test', 'consequent'],\n        TaggedTemplateExpression: ['tag', 'quasi'],\n        TemplateElement: [],\n        TemplateLiteral: ['quasis', 'expressions'],\n        ThisExpression: [],\n        ThrowStatement: ['argument'],\n        TryStatement: ['block', 'handler', 'finalizer'],\n        UnaryExpression: ['argument'],\n        UpdateExpression: ['argument'],\n        VariableDeclaration: ['declarations'],\n        VariableDeclarator: ['id', 'init'],\n        WhileStatement: ['test', 'body'],\n        WithStatement: ['object', 'body'],\n        YieldExpression: ['argument']\n    };\n\n    // unique id\n    BREAK = {};\n    SKIP = {};\n    REMOVE = {};\n\n    VisitorOption = {\n        Break: BREAK,\n        Skip: SKIP,\n        Remove: REMOVE\n    };\n\n    function Reference(parent, key) {\n        this.parent = parent;\n        this.key = key;\n    }\n\n    Reference.prototype.replace = function replace(node) {\n        this.parent[this.key] = node;\n    };\n\n    Reference.prototype.remove = function remove() {\n        if (Array.isArray(this.parent)) {\n            this.parent.splice(this.key, 1);\n            return true;\n        } else {\n            this.replace(null);\n            return false;\n        }\n    };\n\n    function Element(node, path, wrap, ref) {\n        this.node = node;\n        this.path = path;\n        this.wrap = wrap;\n        this.ref = ref;\n    }\n\n    function Controller() { }\n\n    // API:\n    // return property path array from root to current node\n    Controller.prototype.path = function path() {\n        var i, iz, j, jz, result, element;\n\n        function addToPath(result, path) {\n            if (Array.isArray(path)) {\n                for (j = 0, jz = path.length; j < jz; ++j) {\n                    result.push(path[j]);\n                }\n            } else {\n                result.push(path);\n            }\n        }\n\n        // root node\n        if (!this.__current.path) {\n            return null;\n        }\n\n        // first node is sentinel, second node is root element\n        result = [];\n        for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {\n            element = this.__leavelist[i];\n            addToPath(result, element.path);\n        }\n        addToPath(result, this.__current.path);\n        return result;\n    };\n\n    // API:\n    // return type of current node\n    Controller.prototype.type = function () {\n        var node = this.current();\n        return node.type || this.__current.wrap;\n    };\n\n    // API:\n    // return array of parent elements\n    Controller.prototype.parents = function parents() {\n        var i, iz, result;\n\n        // first node is sentinel\n        result = [];\n        for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {\n            result.push(this.__leavelist[i].node);\n        }\n\n        return result;\n    };\n\n    // API:\n    // return current node\n    Controller.prototype.current = function current() {\n        return this.__current.node;\n    };\n\n    Controller.prototype.__execute = function __execute(callback, element) {\n        var previous, result;\n\n        result = undefined;\n\n        previous  = this.__current;\n        this.__current = element;\n        this.__state = null;\n        if (callback) {\n            result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);\n        }\n        this.__current = previous;\n\n        return result;\n    };\n\n    // API:\n    // notify control skip / break\n    Controller.prototype.notify = function notify(flag) {\n        this.__state = flag;\n    };\n\n    // API:\n    // skip child nodes of current node\n    Controller.prototype.skip = function () {\n        this.notify(SKIP);\n    };\n\n    // API:\n    // break traversals\n    Controller.prototype['break'] = function () {\n        this.notify(BREAK);\n    };\n\n    // API:\n    // remove node\n    Controller.prototype.remove = function () {\n        this.notify(REMOVE);\n    };\n\n    Controller.prototype.__initialize = function(root, visitor) {\n        this.visitor = visitor;\n        this.root = root;\n        this.__worklist = [];\n        this.__leavelist = [];\n        this.__current = null;\n        this.__state = null;\n        this.__fallback = null;\n        if (visitor.fallback === 'iteration') {\n            this.__fallback = Object.keys;\n        } else if (typeof visitor.fallback === 'function') {\n            this.__fallback = visitor.fallback;\n        }\n\n        this.__keys = VisitorKeys;\n        if (visitor.keys) {\n            this.__keys = Object.assign(Object.create(this.__keys), visitor.keys);\n        }\n    };\n\n    function isNode(node) {\n        if (node == null) {\n            return false;\n        }\n        return typeof node === 'object' && typeof node.type === 'string';\n    }\n\n    function isProperty(nodeType, key) {\n        return (nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === key;\n    }\n\n    Controller.prototype.traverse = function traverse(root, visitor) {\n        var worklist,\n            leavelist,\n            element,\n            node,\n            nodeType,\n            ret,\n            key,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        worklist.push(new Element(root, null, null, null));\n        leavelist.push(new Element(null, null, null, null));\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                ret = this.__execute(visitor.leave, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n                continue;\n            }\n\n            if (element.node) {\n\n                ret = this.__execute(visitor.enter, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n\n                worklist.push(sentinel);\n                leavelist.push(element);\n\n                if (this.__state === SKIP || ret === SKIP) {\n                    continue;\n                }\n\n                node = element.node;\n                nodeType = node.type || element.wrap;\n                candidates = this.__keys[nodeType];\n                if (!candidates) {\n                    if (this.__fallback) {\n                        candidates = this.__fallback(node);\n                    } else {\n                        throw new Error('Unknown node type ' + nodeType + '.');\n                    }\n                }\n\n                current = candidates.length;\n                while ((current -= 1) >= 0) {\n                    key = candidates[current];\n                    candidate = node[key];\n                    if (!candidate) {\n                        continue;\n                    }\n\n                    if (Array.isArray(candidate)) {\n                        current2 = candidate.length;\n                        while ((current2 -= 1) >= 0) {\n                            if (!candidate[current2]) {\n                                continue;\n                            }\n                            if (isProperty(nodeType, candidates[current])) {\n                                element = new Element(candidate[current2], [key, current2], 'Property', null);\n                            } else if (isNode(candidate[current2])) {\n                                element = new Element(candidate[current2], [key, current2], null, null);\n                            } else {\n                                continue;\n                            }\n                            worklist.push(element);\n                        }\n                    } else if (isNode(candidate)) {\n                        worklist.push(new Element(candidate, key, null, null));\n                    }\n                }\n            }\n        }\n    };\n\n    Controller.prototype.replace = function replace(root, visitor) {\n        var worklist,\n            leavelist,\n            node,\n            nodeType,\n            target,\n            element,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel,\n            outer,\n            key;\n\n        function removeElem(element) {\n            var i,\n                key,\n                nextElem,\n                parent;\n\n            if (element.ref.remove()) {\n                // When the reference is an element of an array.\n                key = element.ref.key;\n                parent = element.ref.parent;\n\n                // If removed from array, then decrease following items' keys.\n                i = worklist.length;\n                while (i--) {\n                    nextElem = worklist[i];\n                    if (nextElem.ref && nextElem.ref.parent === parent) {\n                        if  (nextElem.ref.key < key) {\n                            break;\n                        }\n                        --nextElem.ref.key;\n                    }\n                }\n            }\n        }\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        outer = {\n            root: root\n        };\n        element = new Element(root, null, null, new Reference(outer, 'root'));\n        worklist.push(element);\n        leavelist.push(element);\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                target = this.__execute(visitor.leave, element);\n\n                // node may be replaced with null,\n                // so distinguish between undefined and null in this place\n                if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                    // replace\n                    element.ref.replace(target);\n                }\n\n                if (this.__state === REMOVE || target === REMOVE) {\n                    removeElem(element);\n                }\n\n                if (this.__state === BREAK || target === BREAK) {\n                    return outer.root;\n                }\n                continue;\n            }\n\n            target = this.__execute(visitor.enter, element);\n\n            // node may be replaced with null,\n            // so distinguish between undefined and null in this place\n            if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                // replace\n                element.ref.replace(target);\n                element.node = target;\n            }\n\n            if (this.__state === REMOVE || target === REMOVE) {\n                removeElem(element);\n                element.node = null;\n            }\n\n            if (this.__state === BREAK || target === BREAK) {\n                return outer.root;\n            }\n\n            // node may be null\n            node = element.node;\n            if (!node) {\n                continue;\n            }\n\n            worklist.push(sentinel);\n            leavelist.push(element);\n\n            if (this.__state === SKIP || target === SKIP) {\n                continue;\n            }\n\n            nodeType = node.type || element.wrap;\n            candidates = this.__keys[nodeType];\n            if (!candidates) {\n                if (this.__fallback) {\n                    candidates = this.__fallback(node);\n                } else {\n                    throw new Error('Unknown node type ' + nodeType + '.');\n                }\n            }\n\n            current = candidates.length;\n            while ((current -= 1) >= 0) {\n                key = candidates[current];\n                candidate = node[key];\n                if (!candidate) {\n                    continue;\n                }\n\n                if (Array.isArray(candidate)) {\n                    current2 = candidate.length;\n                    while ((current2 -= 1) >= 0) {\n                        if (!candidate[current2]) {\n                            continue;\n                        }\n                        if (isProperty(nodeType, candidates[current])) {\n                            element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));\n                        } else if (isNode(candidate[current2])) {\n                            element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));\n                        } else {\n                            continue;\n                        }\n                        worklist.push(element);\n                    }\n                } else if (isNode(candidate)) {\n                    worklist.push(new Element(candidate, key, null, new Reference(node, key)));\n                }\n            }\n        }\n\n        return outer.root;\n    };\n\n    function traverse(root, visitor) {\n        var controller = new Controller();\n        return controller.traverse(root, visitor);\n    }\n\n    function replace(root, visitor) {\n        var controller = new Controller();\n        return controller.replace(root, visitor);\n    }\n\n    function extendCommentRange(comment, tokens) {\n        var target;\n\n        target = upperBound(tokens, function search(token) {\n            return token.range[0] > comment.range[0];\n        });\n\n        comment.extendedRange = [comment.range[0], comment.range[1]];\n\n        if (target !== tokens.length) {\n            comment.extendedRange[1] = tokens[target].range[0];\n        }\n\n        target -= 1;\n        if (target >= 0) {\n            comment.extendedRange[0] = tokens[target].range[1];\n        }\n\n        return comment;\n    }\n\n    function attachComments(tree, providedComments, tokens) {\n        // At first, we should calculate extended comment ranges.\n        var comments = [], comment, len, i, cursor;\n\n        if (!tree.range) {\n            throw new Error('attachComments needs range information');\n        }\n\n        // tokens array is empty, we attach comments to tree as 'leadingComments'\n        if (!tokens.length) {\n            if (providedComments.length) {\n                for (i = 0, len = providedComments.length; i < len; i += 1) {\n                    comment = deepCopy(providedComments[i]);\n                    comment.extendedRange = [0, tree.range[0]];\n                    comments.push(comment);\n                }\n                tree.leadingComments = comments;\n            }\n            return tree;\n        }\n\n        for (i = 0, len = providedComments.length; i < len; i += 1) {\n            comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));\n        }\n\n        // This is based on John Freeman's implementation.\n        cursor = 0;\n        traverse(tree, {\n            enter: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (comment.extendedRange[1] > node.range[0]) {\n                        break;\n                    }\n\n                    if (comment.extendedRange[1] === node.range[0]) {\n                        if (!node.leadingComments) {\n                            node.leadingComments = [];\n                        }\n                        node.leadingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        cursor = 0;\n        traverse(tree, {\n            leave: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (node.range[1] < comment.extendedRange[0]) {\n                        break;\n                    }\n\n                    if (node.range[1] === comment.extendedRange[0]) {\n                        if (!node.trailingComments) {\n                            node.trailingComments = [];\n                        }\n                        node.trailingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        return tree;\n    }\n\n    exports.version = require('./package.json').version;\n    exports.Syntax = Syntax;\n    exports.traverse = traverse;\n    exports.replace = replace;\n    exports.attachComments = attachComments;\n    exports.VisitorKeys = VisitorKeys;\n    exports.VisitorOption = VisitorOption;\n    exports.Controller = Controller;\n    exports.cloneEnvironment = function () { return clone({}); };\n\n    return exports;\n}(exports));\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    function isExpression(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'ArrayExpression':\n            case 'AssignmentExpression':\n            case 'BinaryExpression':\n            case 'CallExpression':\n            case 'ConditionalExpression':\n            case 'FunctionExpression':\n            case 'Identifier':\n            case 'Literal':\n            case 'LogicalExpression':\n            case 'MemberExpression':\n            case 'NewExpression':\n            case 'ObjectExpression':\n            case 'SequenceExpression':\n            case 'ThisExpression':\n            case 'UnaryExpression':\n            case 'UpdateExpression':\n                return true;\n        }\n        return false;\n    }\n\n    function isIterationStatement(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'DoWhileStatement':\n            case 'ForInStatement':\n            case 'ForStatement':\n            case 'WhileStatement':\n                return true;\n        }\n        return false;\n    }\n\n    function isStatement(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'BlockStatement':\n            case 'BreakStatement':\n            case 'ContinueStatement':\n            case 'DebuggerStatement':\n            case 'DoWhileStatement':\n            case 'EmptyStatement':\n            case 'ExpressionStatement':\n            case 'ForInStatement':\n            case 'ForStatement':\n            case 'IfStatement':\n            case 'LabeledStatement':\n            case 'ReturnStatement':\n            case 'SwitchStatement':\n            case 'ThrowStatement':\n            case 'TryStatement':\n            case 'VariableDeclaration':\n            case 'WhileStatement':\n            case 'WithStatement':\n                return true;\n        }\n        return false;\n    }\n\n    function isSourceElement(node) {\n      return isStatement(node) || node != null && node.type === 'FunctionDeclaration';\n    }\n\n    function trailingStatement(node) {\n        switch (node.type) {\n        case 'IfStatement':\n            if (node.alternate != null) {\n                return node.alternate;\n            }\n            return node.consequent;\n\n        case 'LabeledStatement':\n        case 'ForStatement':\n        case 'ForInStatement':\n        case 'WhileStatement':\n        case 'WithStatement':\n            return node.body;\n        }\n        return null;\n    }\n\n    function isProblematicIfStatement(node) {\n        var current;\n\n        if (node.type !== 'IfStatement') {\n            return false;\n        }\n        if (node.alternate == null) {\n            return false;\n        }\n        current = node.consequent;\n        do {\n            if (current.type === 'IfStatement') {\n                if (current.alternate == null)  {\n                    return true;\n                }\n            }\n            current = trailingStatement(current);\n        } while (current);\n\n        return false;\n    }\n\n    module.exports = {\n        isExpression: isExpression,\n        isStatement: isStatement,\n        isIterationStatement: isIterationStatement,\n        isSourceElement: isSourceElement,\n        isProblematicIfStatement: isProblematicIfStatement,\n\n        trailingStatement: trailingStatement\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n  Copyright (C) 2013-2014 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    var ES6Regex, ES5Regex, NON_ASCII_WHITESPACES, IDENTIFIER_START, IDENTIFIER_PART, ch;\n\n    // See `tools/generate-identifier-regex.js`.\n    ES5Regex = {\n        // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierStart:\n        NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n        // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierPart:\n        NonAsciiIdentifierPart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/\n    };\n\n    ES6Regex = {\n        // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierStart:\n        NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n        // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierPart:\n        NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n    };\n\n    function isDecimalDigit(ch) {\n        return 0x30 <= ch && ch <= 0x39;  // 0..9\n    }\n\n    function isHexDigit(ch) {\n        return 0x30 <= ch && ch <= 0x39 ||  // 0..9\n            0x61 <= ch && ch <= 0x66 ||     // a..f\n            0x41 <= ch && ch <= 0x46;       // A..F\n    }\n\n    function isOctalDigit(ch) {\n        return ch >= 0x30 && ch <= 0x37;  // 0..7\n    }\n\n    // 7.2 White Space\n\n    NON_ASCII_WHITESPACES = [\n        0x1680,\n        0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A,\n        0x202F, 0x205F,\n        0x3000,\n        0xFEFF\n    ];\n\n    function isWhiteSpace(ch) {\n        return ch === 0x20 || ch === 0x09 || ch === 0x0B || ch === 0x0C || ch === 0xA0 ||\n            ch >= 0x1680 && NON_ASCII_WHITESPACES.indexOf(ch) >= 0;\n    }\n\n    // 7.3 Line Terminators\n\n    function isLineTerminator(ch) {\n        return ch === 0x0A || ch === 0x0D || ch === 0x2028 || ch === 0x2029;\n    }\n\n    // 7.6 Identifier Names and Identifiers\n\n    function fromCodePoint(cp) {\n        if (cp <= 0xFFFF) { return String.fromCharCode(cp); }\n        var cu1 = String.fromCharCode(Math.floor((cp - 0x10000) / 0x400) + 0xD800);\n        var cu2 = String.fromCharCode(((cp - 0x10000) % 0x400) + 0xDC00);\n        return cu1 + cu2;\n    }\n\n    IDENTIFIER_START = new Array(0x80);\n    for(ch = 0; ch < 0x80; ++ch) {\n        IDENTIFIER_START[ch] =\n            ch >= 0x61 && ch <= 0x7A ||  // a..z\n            ch >= 0x41 && ch <= 0x5A ||  // A..Z\n            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)\n    }\n\n    IDENTIFIER_PART = new Array(0x80);\n    for(ch = 0; ch < 0x80; ++ch) {\n        IDENTIFIER_PART[ch] =\n            ch >= 0x61 && ch <= 0x7A ||  // a..z\n            ch >= 0x41 && ch <= 0x5A ||  // A..Z\n            ch >= 0x30 && ch <= 0x39 ||  // 0..9\n            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)\n    }\n\n    function isIdentifierStartES5(ch) {\n        return ch < 0x80 ? IDENTIFIER_START[ch] : ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierPartES5(ch) {\n        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierStartES6(ch) {\n        return ch < 0x80 ? IDENTIFIER_START[ch] : ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierPartES6(ch) {\n        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));\n    }\n\n    module.exports = {\n        isDecimalDigit: isDecimalDigit,\n        isHexDigit: isHexDigit,\n        isOctalDigit: isOctalDigit,\n        isWhiteSpace: isWhiteSpace,\n        isLineTerminator: isLineTerminator,\n        isIdentifierStartES5: isIdentifierStartES5,\n        isIdentifierPartES5: isIdentifierPartES5,\n        isIdentifierStartES6: isIdentifierStartES6,\n        isIdentifierPartES6: isIdentifierPartES6\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    var code = require('./code');\n\n    function isStrictModeReservedWordES6(id) {\n        switch (id) {\n        case 'implements':\n        case 'interface':\n        case 'package':\n        case 'private':\n        case 'protected':\n        case 'public':\n        case 'static':\n        case 'let':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isKeywordES5(id, strict) {\n        // yield should not be treated as keyword under non-strict mode.\n        if (!strict && id === 'yield') {\n            return false;\n        }\n        return isKeywordES6(id, strict);\n    }\n\n    function isKeywordES6(id, strict) {\n        if (strict && isStrictModeReservedWordES6(id)) {\n            return true;\n        }\n\n        switch (id.length) {\n        case 2:\n            return (id === 'if') || (id === 'in') || (id === 'do');\n        case 3:\n            return (id === 'var') || (id === 'for') || (id === 'new') || (id === 'try');\n        case 4:\n            return (id === 'this') || (id === 'else') || (id === 'case') ||\n                (id === 'void') || (id === 'with') || (id === 'enum');\n        case 5:\n            return (id === 'while') || (id === 'break') || (id === 'catch') ||\n                (id === 'throw') || (id === 'const') || (id === 'yield') ||\n                (id === 'class') || (id === 'super');\n        case 6:\n            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n                (id === 'switch') || (id === 'export') || (id === 'import');\n        case 7:\n            return (id === 'default') || (id === 'finally') || (id === 'extends');\n        case 8:\n            return (id === 'function') || (id === 'continue') || (id === 'debugger');\n        case 10:\n            return (id === 'instanceof');\n        default:\n            return false;\n        }\n    }\n\n    function isReservedWordES5(id, strict) {\n        return id === 'null' || id === 'true' || id === 'false' || isKeywordES5(id, strict);\n    }\n\n    function isReservedWordES6(id, strict) {\n        return id === 'null' || id === 'true' || id === 'false' || isKeywordES6(id, strict);\n    }\n\n    function isRestrictedWord(id) {\n        return id === 'eval' || id === 'arguments';\n    }\n\n    function isIdentifierNameES5(id) {\n        var i, iz, ch;\n\n        if (id.length === 0) { return false; }\n\n        ch = id.charCodeAt(0);\n        if (!code.isIdentifierStartES5(ch)) {\n            return false;\n        }\n\n        for (i = 1, iz = id.length; i < iz; ++i) {\n            ch = id.charCodeAt(i);\n            if (!code.isIdentifierPartES5(ch)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function decodeUtf16(lead, trail) {\n        return (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n    }\n\n    function isIdentifierNameES6(id) {\n        var i, iz, ch, lowCh, check;\n\n        if (id.length === 0) { return false; }\n\n        check = code.isIdentifierStartES6;\n        for (i = 0, iz = id.length; i < iz; ++i) {\n            ch = id.charCodeAt(i);\n            if (0xD800 <= ch && ch <= 0xDBFF) {\n                ++i;\n                if (i >= iz) { return false; }\n                lowCh = id.charCodeAt(i);\n                if (!(0xDC00 <= lowCh && lowCh <= 0xDFFF)) {\n                    return false;\n                }\n                ch = decodeUtf16(ch, lowCh);\n            }\n            if (!check(ch)) {\n                return false;\n            }\n            check = code.isIdentifierPartES6;\n        }\n        return true;\n    }\n\n    function isIdentifierES5(id, strict) {\n        return isIdentifierNameES5(id) && !isReservedWordES5(id, strict);\n    }\n\n    function isIdentifierES6(id, strict) {\n        return isIdentifierNameES6(id) && !isReservedWordES6(id, strict);\n    }\n\n    module.exports = {\n        isKeywordES5: isKeywordES5,\n        isKeywordES6: isKeywordES6,\n        isReservedWordES5: isReservedWordES5,\n        isReservedWordES6: isReservedWordES6,\n        isRestrictedWord: isRestrictedWord,\n        isIdentifierNameES5: isIdentifierNameES5,\n        isIdentifierNameES6: isIdentifierNameES6,\n        isIdentifierES5: isIdentifierES5,\n        isIdentifierES6: isIdentifierES6\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\n(function () {\n    'use strict';\n\n    exports.ast = require('./ast');\n    exports.code = require('./code');\n    exports.keyword = require('./keyword');\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n", "/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n", "{\n    \"name\": \"escodegen\",\n    \"description\": \"ECMAScript code generator\",\n    \"homepage\": \"http://github.com/estools/escodegen\",\n    \"main\": \"escodegen.js\",\n    \"bin\": {\n        \"esgenerate\": \"./bin/esgenerate.js\",\n        \"escodegen\": \"./bin/escodegen.js\"\n    },\n    \"files\": [\n        \"LICENSE.BSD\",\n        \"README.md\",\n        \"bin\",\n        \"escodegen.js\",\n        \"package.json\"\n    ],\n    \"version\": \"1.14.3\",\n    \"engines\": {\n        \"node\": \">=4.0\"\n    },\n    \"maintainers\": [\n        {\n            \"name\": \"Yusuke Suzuki\",\n            \"email\": \"utatane.tea@gmail.com\",\n            \"web\": \"http://github.com/Constellation\"\n        }\n    ],\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"http://github.com/estools/escodegen.git\"\n    },\n    \"dependencies\": {\n        \"estraverse\": \"^4.2.0\",\n        \"esutils\": \"^2.0.2\",\n        \"esprima\": \"^4.0.1\",\n        \"optionator\": \"^0.8.1\"\n    },\n    \"optionalDependencies\": {\n        \"source-map\": \"~0.6.1\"\n    },\n    \"devDependencies\": {\n        \"acorn\": \"^7.1.0\",\n        \"bluebird\": \"^3.4.7\",\n        \"bower-registry-client\": \"^1.0.0\",\n        \"chai\": \"^3.5.0\",\n        \"commonjs-everywhere\": \"^0.9.7\",\n        \"gulp\": \"^3.8.10\",\n        \"gulp-eslint\": \"^3.0.1\",\n        \"gulp-mocha\": \"^3.0.1\",\n        \"semver\": \"^5.1.0\"\n    },\n    \"license\": \"BSD-2-Clause\",\n    \"scripts\": {\n        \"test\": \"gulp travis\",\n        \"unit-test\": \"gulp test\",\n        \"lint\": \"gulp lint\",\n        \"release\": \"node tools/release.js\",\n        \"build-min\": \"./node_modules/.bin/cjsify -ma path: tools/entry-point.js > escodegen.browser.min.js\",\n        \"build\": \"./node_modules/.bin/cjsify -a path: tools/entry-point.js > escodegen.browser.js\"\n    }\n}\n", "/*\n  Copyright (C) 2012-2014 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2015 Ingvar Stepanyan <me@rreverser.com>\n  Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>\n  Copyright (C) 2012-2013 Michael Ficarra <escodegen.copyright@michael.ficarra.me>\n  Copyright (C) 2012-2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2013 Irakli Gozalishvili <rfobic@gmail.com>\n  Copyright (C) 2012 Robert Gust-Bardon <donate@robert.gust-bardon.org>\n  Copyright (C) 2012 John Freeman <jfreeman08@gmail.com>\n  Copyright (C) 2011-2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/*global exports:true, require:true, global:true*/\n(function () {\n    'use strict';\n\n    var Syntax,\n        Precedence,\n        BinaryPrecedence,\n        SourceNode,\n        estraverse,\n        esutils,\n        base,\n        indent,\n        json,\n        renumber,\n        hexadecimal,\n        quotes,\n        escapeless,\n        newline,\n        space,\n        parentheses,\n        semicolons,\n        safeConcatenation,\n        directive,\n        extra,\n        parse,\n        sourceMap,\n        sourceCode,\n        preserveBlankLines,\n        FORMAT_MINIFY,\n        FORMAT_DEFAULTS;\n\n    estraverse = require('estraverse');\n    esutils = require('esutils');\n\n    Syntax = estraverse.Syntax;\n\n    // Generation is done by generateExpression.\n    function isExpression(node) {\n        return CodeGenerator.Expression.hasOwnProperty(node.type);\n    }\n\n    // Generation is done by generateStatement.\n    function isStatement(node) {\n        return CodeGenerator.Statement.hasOwnProperty(node.type);\n    }\n\n    Precedence = {\n        Sequence: 0,\n        Yield: 1,\n        Assignment: 1,\n        Conditional: 2,\n        ArrowFunction: 2,\n        LogicalOR: 3,\n        LogicalAND: 4,\n        BitwiseOR: 5,\n        BitwiseXOR: 6,\n        BitwiseAND: 7,\n        Equality: 8,\n        Relational: 9,\n        BitwiseSHIFT: 10,\n        Additive: 11,\n        Multiplicative: 12,\n        Exponentiation: 13,\n        Await: 14,\n        Unary: 14,\n        Postfix: 15,\n        Call: 16,\n        New: 17,\n        TaggedTemplate: 18,\n        Member: 19,\n        Primary: 20\n    };\n\n    BinaryPrecedence = {\n        '||': Precedence.LogicalOR,\n        '&&': Precedence.LogicalAND,\n        '|': Precedence.BitwiseOR,\n        '^': Precedence.BitwiseXOR,\n        '&': Precedence.BitwiseAND,\n        '==': Precedence.Equality,\n        '!=': Precedence.Equality,\n        '===': Precedence.Equality,\n        '!==': Precedence.Equality,\n        'is': Precedence.Equality,\n        'isnt': Precedence.Equality,\n        '<': Precedence.Relational,\n        '>': Precedence.Relational,\n        '<=': Precedence.Relational,\n        '>=': Precedence.Relational,\n        'in': Precedence.Relational,\n        'instanceof': Precedence.Relational,\n        '<<': Precedence.BitwiseSHIFT,\n        '>>': Precedence.BitwiseSHIFT,\n        '>>>': Precedence.BitwiseSHIFT,\n        '+': Precedence.Additive,\n        '-': Precedence.Additive,\n        '*': Precedence.Multiplicative,\n        '%': Precedence.Multiplicative,\n        '/': Precedence.Multiplicative,\n        '**': Precedence.Exponentiation\n    };\n\n    //Flags\n    var F_ALLOW_IN = 1,\n        F_ALLOW_CALL = 1 << 1,\n        F_ALLOW_UNPARATH_NEW = 1 << 2,\n        F_FUNC_BODY = 1 << 3,\n        F_DIRECTIVE_CTX = 1 << 4,\n        F_SEMICOLON_OPT = 1 << 5;\n\n    //Expression flag sets\n    //NOTE: Flag order:\n    // F_ALLOW_IN\n    // F_ALLOW_CALL\n    // F_ALLOW_UNPARATH_NEW\n    var E_FTT = F_ALLOW_CALL | F_ALLOW_UNPARATH_NEW,\n        E_TTF = F_ALLOW_IN | F_ALLOW_CALL,\n        E_TTT = F_ALLOW_IN | F_ALLOW_CALL | F_ALLOW_UNPARATH_NEW,\n        E_TFF = F_ALLOW_IN,\n        E_FFT = F_ALLOW_UNPARATH_NEW,\n        E_TFT = F_ALLOW_IN | F_ALLOW_UNPARATH_NEW;\n\n    //Statement flag sets\n    //NOTE: Flag order:\n    // F_ALLOW_IN\n    // F_FUNC_BODY\n    // F_DIRECTIVE_CTX\n    // F_SEMICOLON_OPT\n    var S_TFFF = F_ALLOW_IN,\n        S_TFFT = F_ALLOW_IN | F_SEMICOLON_OPT,\n        S_FFFF = 0x00,\n        S_TFTF = F_ALLOW_IN | F_DIRECTIVE_CTX,\n        S_TTFF = F_ALLOW_IN | F_FUNC_BODY;\n\n    function getDefaultOptions() {\n        // default options\n        return {\n            indent: null,\n            base: null,\n            parse: null,\n            comment: false,\n            format: {\n                indent: {\n                    style: '    ',\n                    base: 0,\n                    adjustMultilineComment: false\n                },\n                newline: '\\n',\n                space: ' ',\n                json: false,\n                renumber: false,\n                hexadecimal: false,\n                quotes: 'single',\n                escapeless: false,\n                compact: false,\n                parentheses: true,\n                semicolons: true,\n                safeConcatenation: false,\n                preserveBlankLines: false\n            },\n            moz: {\n                comprehensionExpressionStartsWithAssignment: false,\n                starlessGenerator: false\n            },\n            sourceMap: null,\n            sourceMapRoot: null,\n            sourceMapWithCode: false,\n            directive: false,\n            raw: true,\n            verbatim: null,\n            sourceCode: null\n        };\n    }\n\n    function stringRepeat(str, num) {\n        var result = '';\n\n        for (num |= 0; num > 0; num >>>= 1, str += str) {\n            if (num & 1) {\n                result += str;\n            }\n        }\n\n        return result;\n    }\n\n    function hasLineTerminator(str) {\n        return (/[\\r\\n]/g).test(str);\n    }\n\n    function endsWithLineTerminator(str) {\n        var len = str.length;\n        return len && esutils.code.isLineTerminator(str.charCodeAt(len - 1));\n    }\n\n    function merge(target, override) {\n        var key;\n        for (key in override) {\n            if (override.hasOwnProperty(key)) {\n                target[key] = override[key];\n            }\n        }\n        return target;\n    }\n\n    function updateDeeply(target, override) {\n        var key, val;\n\n        function isHashObject(target) {\n            return typeof target === 'object' && target instanceof Object && !(target instanceof RegExp);\n        }\n\n        for (key in override) {\n            if (override.hasOwnProperty(key)) {\n                val = override[key];\n                if (isHashObject(val)) {\n                    if (isHashObject(target[key])) {\n                        updateDeeply(target[key], val);\n                    } else {\n                        target[key] = updateDeeply({}, val);\n                    }\n                } else {\n                    target[key] = val;\n                }\n            }\n        }\n        return target;\n    }\n\n    function generateNumber(value) {\n        var result, point, temp, exponent, pos;\n\n        if (value !== value) {\n            throw new Error('Numeric literal whose value is NaN');\n        }\n        if (value < 0 || (value === 0 && 1 / value < 0)) {\n            throw new Error('Numeric literal whose value is negative');\n        }\n\n        if (value === 1 / 0) {\n            return json ? 'null' : renumber ? '1e400' : '1e+400';\n        }\n\n        result = '' + value;\n        if (!renumber || result.length < 3) {\n            return result;\n        }\n\n        point = result.indexOf('.');\n        if (!json && result.charCodeAt(0) === 0x30  /* 0 */ && point === 1) {\n            point = 0;\n            result = result.slice(1);\n        }\n        temp = result;\n        result = result.replace('e+', 'e');\n        exponent = 0;\n        if ((pos = temp.indexOf('e')) > 0) {\n            exponent = +temp.slice(pos + 1);\n            temp = temp.slice(0, pos);\n        }\n        if (point >= 0) {\n            exponent -= temp.length - point - 1;\n            temp = +(temp.slice(0, point) + temp.slice(point + 1)) + '';\n        }\n        pos = 0;\n        while (temp.charCodeAt(temp.length + pos - 1) === 0x30  /* 0 */) {\n            --pos;\n        }\n        if (pos !== 0) {\n            exponent -= pos;\n            temp = temp.slice(0, pos);\n        }\n        if (exponent !== 0) {\n            temp += 'e' + exponent;\n        }\n        if ((temp.length < result.length ||\n                    (hexadecimal && value > 1e12 && Math.floor(value) === value && (temp = '0x' + value.toString(16)).length < result.length)) &&\n                +temp === value) {\n            result = temp;\n        }\n\n        return result;\n    }\n\n    // Generate valid RegExp expression.\n    // This function is based on https://github.com/Constellation/iv Engine\n\n    function escapeRegExpCharacter(ch, previousIsBackslash) {\n        // not handling '\\' and handling \\u2028 or \\u2029 to unicode escape sequence\n        if ((ch & ~1) === 0x2028) {\n            return (previousIsBackslash ? 'u' : '\\\\u') + ((ch === 0x2028) ? '2028' : '2029');\n        } else if (ch === 10 || ch === 13) {  // \\n, \\r\n            return (previousIsBackslash ? '' : '\\\\') + ((ch === 10) ? 'n' : 'r');\n        }\n        return String.fromCharCode(ch);\n    }\n\n    function generateRegExp(reg) {\n        var match, result, flags, i, iz, ch, characterInBrack, previousIsBackslash;\n\n        result = reg.toString();\n\n        if (reg.source) {\n            // extract flag from toString result\n            match = result.match(/\\/([^/]*)$/);\n            if (!match) {\n                return result;\n            }\n\n            flags = match[1];\n            result = '';\n\n            characterInBrack = false;\n            previousIsBackslash = false;\n            for (i = 0, iz = reg.source.length; i < iz; ++i) {\n                ch = reg.source.charCodeAt(i);\n\n                if (!previousIsBackslash) {\n                    if (characterInBrack) {\n                        if (ch === 93) {  // ]\n                            characterInBrack = false;\n                        }\n                    } else {\n                        if (ch === 47) {  // /\n                            result += '\\\\';\n                        } else if (ch === 91) {  // [\n                            characterInBrack = true;\n                        }\n                    }\n                    result += escapeRegExpCharacter(ch, previousIsBackslash);\n                    previousIsBackslash = ch === 92;  // \\\n                } else {\n                    // if new RegExp(\"\\\\\\n') is provided, create /\\n/\n                    result += escapeRegExpCharacter(ch, previousIsBackslash);\n                    // prevent like /\\\\[/]/\n                    previousIsBackslash = false;\n                }\n            }\n\n            return '/' + result + '/' + flags;\n        }\n\n        return result;\n    }\n\n    function escapeAllowedCharacter(code, next) {\n        var hex;\n\n        if (code === 0x08  /* \\b */) {\n            return '\\\\b';\n        }\n\n        if (code === 0x0C  /* \\f */) {\n            return '\\\\f';\n        }\n\n        if (code === 0x09  /* \\t */) {\n            return '\\\\t';\n        }\n\n        hex = code.toString(16).toUpperCase();\n        if (json || code > 0xFF) {\n            return '\\\\u' + '0000'.slice(hex.length) + hex;\n        } else if (code === 0x0000 && !esutils.code.isDecimalDigit(next)) {\n            return '\\\\0';\n        } else if (code === 0x000B  /* \\v */) { // '\\v'\n            return '\\\\x0B';\n        } else {\n            return '\\\\x' + '00'.slice(hex.length) + hex;\n        }\n    }\n\n    function escapeDisallowedCharacter(code) {\n        if (code === 0x5C  /* \\ */) {\n            return '\\\\\\\\';\n        }\n\n        if (code === 0x0A  /* \\n */) {\n            return '\\\\n';\n        }\n\n        if (code === 0x0D  /* \\r */) {\n            return '\\\\r';\n        }\n\n        if (code === 0x2028) {\n            return '\\\\u2028';\n        }\n\n        if (code === 0x2029) {\n            return '\\\\u2029';\n        }\n\n        throw new Error('Incorrectly classified character');\n    }\n\n    function escapeDirective(str) {\n        var i, iz, code, quote;\n\n        quote = quotes === 'double' ? '\"' : '\\'';\n        for (i = 0, iz = str.length; i < iz; ++i) {\n            code = str.charCodeAt(i);\n            if (code === 0x27  /* ' */) {\n                quote = '\"';\n                break;\n            } else if (code === 0x22  /* \" */) {\n                quote = '\\'';\n                break;\n            } else if (code === 0x5C  /* \\ */) {\n                ++i;\n            }\n        }\n\n        return quote + str + quote;\n    }\n\n    function escapeString(str) {\n        var result = '', i, len, code, singleQuotes = 0, doubleQuotes = 0, single, quote;\n\n        for (i = 0, len = str.length; i < len; ++i) {\n            code = str.charCodeAt(i);\n            if (code === 0x27  /* ' */) {\n                ++singleQuotes;\n            } else if (code === 0x22  /* \" */) {\n                ++doubleQuotes;\n            } else if (code === 0x2F  /* / */ && json) {\n                result += '\\\\';\n            } else if (esutils.code.isLineTerminator(code) || code === 0x5C  /* \\ */) {\n                result += escapeDisallowedCharacter(code);\n                continue;\n            } else if (!esutils.code.isIdentifierPartES5(code) && (json && code < 0x20  /* SP */ || !json && !escapeless && (code < 0x20  /* SP */ || code > 0x7E  /* ~ */))) {\n                result += escapeAllowedCharacter(code, str.charCodeAt(i + 1));\n                continue;\n            }\n            result += String.fromCharCode(code);\n        }\n\n        single = !(quotes === 'double' || (quotes === 'auto' && doubleQuotes < singleQuotes));\n        quote = single ? '\\'' : '\"';\n\n        if (!(single ? singleQuotes : doubleQuotes)) {\n            return quote + result + quote;\n        }\n\n        str = result;\n        result = quote;\n\n        for (i = 0, len = str.length; i < len; ++i) {\n            code = str.charCodeAt(i);\n            if ((code === 0x27  /* ' */ && single) || (code === 0x22  /* \" */ && !single)) {\n                result += '\\\\';\n            }\n            result += String.fromCharCode(code);\n        }\n\n        return result + quote;\n    }\n\n    /**\n     * flatten an array to a string, where the array can contain\n     * either strings or nested arrays\n     */\n    function flattenToString(arr) {\n        var i, iz, elem, result = '';\n        for (i = 0, iz = arr.length; i < iz; ++i) {\n            elem = arr[i];\n            result += Array.isArray(elem) ? flattenToString(elem) : elem;\n        }\n        return result;\n    }\n\n    /**\n     * convert generated to a SourceNode when source maps are enabled.\n     */\n    function toSourceNodeWhenNeeded(generated, node) {\n        if (!sourceMap) {\n            // with no source maps, generated is either an\n            // array or a string.  if an array, flatten it.\n            // if a string, just return it\n            if (Array.isArray(generated)) {\n                return flattenToString(generated);\n            } else {\n                return generated;\n            }\n        }\n        if (node == null) {\n            if (generated instanceof SourceNode) {\n                return generated;\n            } else {\n                node = {};\n            }\n        }\n        if (node.loc == null) {\n            return new SourceNode(null, null, sourceMap, generated, node.name || null);\n        }\n        return new SourceNode(node.loc.start.line, node.loc.start.column, (sourceMap === true ? node.loc.source || null : sourceMap), generated, node.name || null);\n    }\n\n    function noEmptySpace() {\n        return (space) ? space : ' ';\n    }\n\n    function join(left, right) {\n        var leftSource,\n            rightSource,\n            leftCharCode,\n            rightCharCode;\n\n        leftSource = toSourceNodeWhenNeeded(left).toString();\n        if (leftSource.length === 0) {\n            return [right];\n        }\n\n        rightSource = toSourceNodeWhenNeeded(right).toString();\n        if (rightSource.length === 0) {\n            return [left];\n        }\n\n        leftCharCode = leftSource.charCodeAt(leftSource.length - 1);\n        rightCharCode = rightSource.charCodeAt(0);\n\n        if ((leftCharCode === 0x2B  /* + */ || leftCharCode === 0x2D  /* - */) && leftCharCode === rightCharCode ||\n            esutils.code.isIdentifierPartES5(leftCharCode) && esutils.code.isIdentifierPartES5(rightCharCode) ||\n            leftCharCode === 0x2F  /* / */ && rightCharCode === 0x69  /* i */) { // infix word operators all start with `i`\n            return [left, noEmptySpace(), right];\n        } else if (esutils.code.isWhiteSpace(leftCharCode) || esutils.code.isLineTerminator(leftCharCode) ||\n                esutils.code.isWhiteSpace(rightCharCode) || esutils.code.isLineTerminator(rightCharCode)) {\n            return [left, right];\n        }\n        return [left, space, right];\n    }\n\n    function addIndent(stmt) {\n        return [base, stmt];\n    }\n\n    function withIndent(fn) {\n        var previousBase;\n        previousBase = base;\n        base += indent;\n        fn(base);\n        base = previousBase;\n    }\n\n    function calculateSpaces(str) {\n        var i;\n        for (i = str.length - 1; i >= 0; --i) {\n            if (esutils.code.isLineTerminator(str.charCodeAt(i))) {\n                break;\n            }\n        }\n        return (str.length - 1) - i;\n    }\n\n    function adjustMultilineComment(value, specialBase) {\n        var array, i, len, line, j, spaces, previousBase, sn;\n\n        array = value.split(/\\r\\n|[\\r\\n]/);\n        spaces = Number.MAX_VALUE;\n\n        // first line doesn't have indentation\n        for (i = 1, len = array.length; i < len; ++i) {\n            line = array[i];\n            j = 0;\n            while (j < line.length && esutils.code.isWhiteSpace(line.charCodeAt(j))) {\n                ++j;\n            }\n            if (spaces > j) {\n                spaces = j;\n            }\n        }\n\n        if (typeof specialBase !== 'undefined') {\n            // pattern like\n            // {\n            //   var t = 20;  /*\n            //                 * this is comment\n            //                 */\n            // }\n            previousBase = base;\n            if (array[1][spaces] === '*') {\n                specialBase += ' ';\n            }\n            base = specialBase;\n        } else {\n            if (spaces & 1) {\n                // /*\n                //  *\n                //  */\n                // If spaces are odd number, above pattern is considered.\n                // We waste 1 space.\n                --spaces;\n            }\n            previousBase = base;\n        }\n\n        for (i = 1, len = array.length; i < len; ++i) {\n            sn = toSourceNodeWhenNeeded(addIndent(array[i].slice(spaces)));\n            array[i] = sourceMap ? sn.join('') : sn;\n        }\n\n        base = previousBase;\n\n        return array.join('\\n');\n    }\n\n    function generateComment(comment, specialBase) {\n        if (comment.type === 'Line') {\n            if (endsWithLineTerminator(comment.value)) {\n                return '//' + comment.value;\n            } else {\n                // Always use LineTerminator\n                var result = '//' + comment.value;\n                if (!preserveBlankLines) {\n                    result += '\\n';\n                }\n                return result;\n            }\n        }\n        if (extra.format.indent.adjustMultilineComment && /[\\n\\r]/.test(comment.value)) {\n            return adjustMultilineComment('/*' + comment.value + '*/', specialBase);\n        }\n        return '/*' + comment.value + '*/';\n    }\n\n    function addComments(stmt, result) {\n        var i, len, comment, save, tailingToStatement, specialBase, fragment,\n            extRange, range, prevRange, prefix, infix, suffix, count;\n\n        if (stmt.leadingComments && stmt.leadingComments.length > 0) {\n            save = result;\n\n            if (preserveBlankLines) {\n                comment = stmt.leadingComments[0];\n                result = [];\n\n                extRange = comment.extendedRange;\n                range = comment.range;\n\n                prefix = sourceCode.substring(extRange[0], range[0]);\n                count = (prefix.match(/\\n/g) || []).length;\n                if (count > 0) {\n                    result.push(stringRepeat('\\n', count));\n                    result.push(addIndent(generateComment(comment)));\n                } else {\n                    result.push(prefix);\n                    result.push(generateComment(comment));\n                }\n\n                prevRange = range;\n\n                for (i = 1, len = stmt.leadingComments.length; i < len; i++) {\n                    comment = stmt.leadingComments[i];\n                    range = comment.range;\n\n                    infix = sourceCode.substring(prevRange[1], range[0]);\n                    count = (infix.match(/\\n/g) || []).length;\n                    result.push(stringRepeat('\\n', count));\n                    result.push(addIndent(generateComment(comment)));\n\n                    prevRange = range;\n                }\n\n                suffix = sourceCode.substring(range[1], extRange[1]);\n                count = (suffix.match(/\\n/g) || []).length;\n                result.push(stringRepeat('\\n', count));\n            } else {\n                comment = stmt.leadingComments[0];\n                result = [];\n                if (safeConcatenation && stmt.type === Syntax.Program && stmt.body.length === 0) {\n                    result.push('\\n');\n                }\n                result.push(generateComment(comment));\n                if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {\n                    result.push('\\n');\n                }\n\n                for (i = 1, len = stmt.leadingComments.length; i < len; ++i) {\n                    comment = stmt.leadingComments[i];\n                    fragment = [generateComment(comment)];\n                    if (!endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {\n                        fragment.push('\\n');\n                    }\n                    result.push(addIndent(fragment));\n                }\n            }\n\n            result.push(addIndent(save));\n        }\n\n        if (stmt.trailingComments) {\n\n            if (preserveBlankLines) {\n                comment = stmt.trailingComments[0];\n                extRange = comment.extendedRange;\n                range = comment.range;\n\n                prefix = sourceCode.substring(extRange[0], range[0]);\n                count = (prefix.match(/\\n/g) || []).length;\n\n                if (count > 0) {\n                    result.push(stringRepeat('\\n', count));\n                    result.push(addIndent(generateComment(comment)));\n                } else {\n                    result.push(prefix);\n                    result.push(generateComment(comment));\n                }\n            } else {\n                tailingToStatement = !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString());\n                specialBase = stringRepeat(' ', calculateSpaces(toSourceNodeWhenNeeded([base, result, indent]).toString()));\n                for (i = 0, len = stmt.trailingComments.length; i < len; ++i) {\n                    comment = stmt.trailingComments[i];\n                    if (tailingToStatement) {\n                        // We assume target like following script\n                        //\n                        // var t = 20;  /**\n                        //               * This is comment of t\n                        //               */\n                        if (i === 0) {\n                            // first case\n                            result = [result, indent];\n                        } else {\n                            result = [result, specialBase];\n                        }\n                        result.push(generateComment(comment, specialBase));\n                    } else {\n                        result = [result, addIndent(generateComment(comment))];\n                    }\n                    if (i !== len - 1 && !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {\n                        result = [result, '\\n'];\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n    function generateBlankLines(start, end, result) {\n        var j, newlineCount = 0;\n\n        for (j = start; j < end; j++) {\n            if (sourceCode[j] === '\\n') {\n                newlineCount++;\n            }\n        }\n\n        for (j = 1; j < newlineCount; j++) {\n            result.push(newline);\n        }\n    }\n\n    function parenthesize(text, current, should) {\n        if (current < should) {\n            return ['(', text, ')'];\n        }\n        return text;\n    }\n\n    function generateVerbatimString(string) {\n        var i, iz, result;\n        result = string.split(/\\r\\n|\\n/);\n        for (i = 1, iz = result.length; i < iz; i++) {\n            result[i] = newline + base + result[i];\n        }\n        return result;\n    }\n\n    function generateVerbatim(expr, precedence) {\n        var verbatim, result, prec;\n        verbatim = expr[extra.verbatim];\n\n        if (typeof verbatim === 'string') {\n            result = parenthesize(generateVerbatimString(verbatim), Precedence.Sequence, precedence);\n        } else {\n            // verbatim is object\n            result = generateVerbatimString(verbatim.content);\n            prec = (verbatim.precedence != null) ? verbatim.precedence : Precedence.Sequence;\n            result = parenthesize(result, prec, precedence);\n        }\n\n        return toSourceNodeWhenNeeded(result, expr);\n    }\n\n    function CodeGenerator() {\n    }\n\n    // Helpers.\n\n    CodeGenerator.prototype.maybeBlock = function(stmt, flags) {\n        var result, noLeadingComment, that = this;\n\n        noLeadingComment = !extra.comment || !stmt.leadingComments;\n\n        if (stmt.type === Syntax.BlockStatement && noLeadingComment) {\n            return [space, this.generateStatement(stmt, flags)];\n        }\n\n        if (stmt.type === Syntax.EmptyStatement && noLeadingComment) {\n            return ';';\n        }\n\n        withIndent(function () {\n            result = [\n                newline,\n                addIndent(that.generateStatement(stmt, flags))\n            ];\n        });\n\n        return result;\n    };\n\n    CodeGenerator.prototype.maybeBlockSuffix = function (stmt, result) {\n        var ends = endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString());\n        if (stmt.type === Syntax.BlockStatement && (!extra.comment || !stmt.leadingComments) && !ends) {\n            return [result, space];\n        }\n        if (ends) {\n            return [result, base];\n        }\n        return [result, newline, base];\n    };\n\n    function generateIdentifier(node) {\n        return toSourceNodeWhenNeeded(node.name, node);\n    }\n\n    function generateAsyncPrefix(node, spaceRequired) {\n        return node.async ? 'async' + (spaceRequired ? noEmptySpace() : space) : '';\n    }\n\n    function generateStarSuffix(node) {\n        var isGenerator = node.generator && !extra.moz.starlessGenerator;\n        return isGenerator ? '*' + space : '';\n    }\n\n    function generateMethodPrefix(prop) {\n        var func = prop.value, prefix = '';\n        if (func.async) {\n            prefix += generateAsyncPrefix(func, !prop.computed);\n        }\n        if (func.generator) {\n            // avoid space before method name\n            prefix += generateStarSuffix(func) ? '*' : '';\n        }\n        return prefix;\n    }\n\n    CodeGenerator.prototype.generatePattern = function (node, precedence, flags) {\n        if (node.type === Syntax.Identifier) {\n            return generateIdentifier(node);\n        }\n        return this.generateExpression(node, precedence, flags);\n    };\n\n    CodeGenerator.prototype.generateFunctionParams = function (node) {\n        var i, iz, result, hasDefault;\n\n        hasDefault = false;\n\n        if (node.type === Syntax.ArrowFunctionExpression &&\n                !node.rest && (!node.defaults || node.defaults.length === 0) &&\n                node.params.length === 1 && node.params[0].type === Syntax.Identifier) {\n            // arg => { } case\n            result = [generateAsyncPrefix(node, true), generateIdentifier(node.params[0])];\n        } else {\n            result = node.type === Syntax.ArrowFunctionExpression ? [generateAsyncPrefix(node, false)] : [];\n            result.push('(');\n            if (node.defaults) {\n                hasDefault = true;\n            }\n            for (i = 0, iz = node.params.length; i < iz; ++i) {\n                if (hasDefault && node.defaults[i]) {\n                    // Handle default values.\n                    result.push(this.generateAssignment(node.params[i], node.defaults[i], '=', Precedence.Assignment, E_TTT));\n                } else {\n                    result.push(this.generatePattern(node.params[i], Precedence.Assignment, E_TTT));\n                }\n                if (i + 1 < iz) {\n                    result.push(',' + space);\n                }\n            }\n\n            if (node.rest) {\n                if (node.params.length) {\n                    result.push(',' + space);\n                }\n                result.push('...');\n                result.push(generateIdentifier(node.rest));\n            }\n\n            result.push(')');\n        }\n\n        return result;\n    };\n\n    CodeGenerator.prototype.generateFunctionBody = function (node) {\n        var result, expr;\n\n        result = this.generateFunctionParams(node);\n\n        if (node.type === Syntax.ArrowFunctionExpression) {\n            result.push(space);\n            result.push('=>');\n        }\n\n        if (node.expression) {\n            result.push(space);\n            expr = this.generateExpression(node.body, Precedence.Assignment, E_TTT);\n            if (expr.toString().charAt(0) === '{') {\n                expr = ['(', expr, ')'];\n            }\n            result.push(expr);\n        } else {\n            result.push(this.maybeBlock(node.body, S_TTFF));\n        }\n\n        return result;\n    };\n\n    CodeGenerator.prototype.generateIterationForStatement = function (operator, stmt, flags) {\n        var result = ['for' + (stmt.await ? noEmptySpace() + 'await' : '') + space + '('], that = this;\n        withIndent(function () {\n            if (stmt.left.type === Syntax.VariableDeclaration) {\n                withIndent(function () {\n                    result.push(stmt.left.kind + noEmptySpace());\n                    result.push(that.generateStatement(stmt.left.declarations[0], S_FFFF));\n                });\n            } else {\n                result.push(that.generateExpression(stmt.left, Precedence.Call, E_TTT));\n            }\n\n            result = join(result, operator);\n            result = [join(\n                result,\n                that.generateExpression(stmt.right, Precedence.Assignment, E_TTT)\n            ), ')'];\n        });\n        result.push(this.maybeBlock(stmt.body, flags));\n        return result;\n    };\n\n    CodeGenerator.prototype.generatePropertyKey = function (expr, computed) {\n        var result = [];\n\n        if (computed) {\n            result.push('[');\n        }\n\n        result.push(this.generateExpression(expr, Precedence.Assignment, E_TTT));\n\n        if (computed) {\n            result.push(']');\n        }\n\n        return result;\n    };\n\n    CodeGenerator.prototype.generateAssignment = function (left, right, operator, precedence, flags) {\n        if (Precedence.Assignment < precedence) {\n            flags |= F_ALLOW_IN;\n        }\n\n        return parenthesize(\n            [\n                this.generateExpression(left, Precedence.Call, flags),\n                space + operator + space,\n                this.generateExpression(right, Precedence.Assignment, flags)\n            ],\n            Precedence.Assignment,\n            precedence\n        );\n    };\n\n    CodeGenerator.prototype.semicolon = function (flags) {\n        if (!semicolons && flags & F_SEMICOLON_OPT) {\n            return '';\n        }\n        return ';';\n    };\n\n    // Statements.\n\n    CodeGenerator.Statement = {\n\n        BlockStatement: function (stmt, flags) {\n            var range, content, result = ['{', newline], that = this;\n\n            withIndent(function () {\n                // handle functions without any code\n                if (stmt.body.length === 0 && preserveBlankLines) {\n                    range = stmt.range;\n                    if (range[1] - range[0] > 2) {\n                        content = sourceCode.substring(range[0] + 1, range[1] - 1);\n                        if (content[0] === '\\n') {\n                            result = ['{'];\n                        }\n                        result.push(content);\n                    }\n                }\n\n                var i, iz, fragment, bodyFlags;\n                bodyFlags = S_TFFF;\n                if (flags & F_FUNC_BODY) {\n                    bodyFlags |= F_DIRECTIVE_CTX;\n                }\n\n                for (i = 0, iz = stmt.body.length; i < iz; ++i) {\n                    if (preserveBlankLines) {\n                        // handle spaces before the first line\n                        if (i === 0) {\n                            if (stmt.body[0].leadingComments) {\n                                range = stmt.body[0].leadingComments[0].extendedRange;\n                                content = sourceCode.substring(range[0], range[1]);\n                                if (content[0] === '\\n') {\n                                    result = ['{'];\n                                }\n                            }\n                            if (!stmt.body[0].leadingComments) {\n                                generateBlankLines(stmt.range[0], stmt.body[0].range[0], result);\n                            }\n                        }\n\n                        // handle spaces between lines\n                        if (i > 0) {\n                            if (!stmt.body[i - 1].trailingComments  && !stmt.body[i].leadingComments) {\n                                generateBlankLines(stmt.body[i - 1].range[1], stmt.body[i].range[0], result);\n                            }\n                        }\n                    }\n\n                    if (i === iz - 1) {\n                        bodyFlags |= F_SEMICOLON_OPT;\n                    }\n\n                    if (stmt.body[i].leadingComments && preserveBlankLines) {\n                        fragment = that.generateStatement(stmt.body[i], bodyFlags);\n                    } else {\n                        fragment = addIndent(that.generateStatement(stmt.body[i], bodyFlags));\n                    }\n\n                    result.push(fragment);\n                    if (!endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {\n                        if (preserveBlankLines && i < iz - 1) {\n                            // don't add a new line if there are leading coments\n                            // in the next statement\n                            if (!stmt.body[i + 1].leadingComments) {\n                                result.push(newline);\n                            }\n                        } else {\n                            result.push(newline);\n                        }\n                    }\n\n                    if (preserveBlankLines) {\n                        // handle spaces after the last line\n                        if (i === iz - 1) {\n                            if (!stmt.body[i].trailingComments) {\n                                generateBlankLines(stmt.body[i].range[1], stmt.range[1], result);\n                            }\n                        }\n                    }\n                }\n            });\n\n            result.push(addIndent('}'));\n            return result;\n        },\n\n        BreakStatement: function (stmt, flags) {\n            if (stmt.label) {\n                return 'break ' + stmt.label.name + this.semicolon(flags);\n            }\n            return 'break' + this.semicolon(flags);\n        },\n\n        ContinueStatement: function (stmt, flags) {\n            if (stmt.label) {\n                return 'continue ' + stmt.label.name + this.semicolon(flags);\n            }\n            return 'continue' + this.semicolon(flags);\n        },\n\n        ClassBody: function (stmt, flags) {\n            var result = [ '{', newline], that = this;\n\n            withIndent(function (indent) {\n                var i, iz;\n\n                for (i = 0, iz = stmt.body.length; i < iz; ++i) {\n                    result.push(indent);\n                    result.push(that.generateExpression(stmt.body[i], Precedence.Sequence, E_TTT));\n                    if (i + 1 < iz) {\n                        result.push(newline);\n                    }\n                }\n            });\n\n            if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {\n                result.push(newline);\n            }\n            result.push(base);\n            result.push('}');\n            return result;\n        },\n\n        ClassDeclaration: function (stmt, flags) {\n            var result, fragment;\n            result  = ['class'];\n            if (stmt.id) {\n                result = join(result, this.generateExpression(stmt.id, Precedence.Sequence, E_TTT));\n            }\n            if (stmt.superClass) {\n                fragment = join('extends', this.generateExpression(stmt.superClass, Precedence.Unary, E_TTT));\n                result = join(result, fragment);\n            }\n            result.push(space);\n            result.push(this.generateStatement(stmt.body, S_TFFT));\n            return result;\n        },\n\n        DirectiveStatement: function (stmt, flags) {\n            if (extra.raw && stmt.raw) {\n                return stmt.raw + this.semicolon(flags);\n            }\n            return escapeDirective(stmt.directive) + this.semicolon(flags);\n        },\n\n        DoWhileStatement: function (stmt, flags) {\n            // Because `do 42 while (cond)` is Syntax Error. We need semicolon.\n            var result = join('do', this.maybeBlock(stmt.body, S_TFFF));\n            result = this.maybeBlockSuffix(stmt.body, result);\n            return join(result, [\n                'while' + space + '(',\n                this.generateExpression(stmt.test, Precedence.Sequence, E_TTT),\n                ')' + this.semicolon(flags)\n            ]);\n        },\n\n        CatchClause: function (stmt, flags) {\n            var result, that = this;\n            withIndent(function () {\n                var guard;\n\n                if (stmt.param) {\n                    result = [\n                        'catch' + space + '(',\n                        that.generateExpression(stmt.param, Precedence.Sequence, E_TTT),\n                        ')'\n                    ];\n\n                    if (stmt.guard) {\n                        guard = that.generateExpression(stmt.guard, Precedence.Sequence, E_TTT);\n                        result.splice(2, 0, ' if ', guard);\n                    }\n                } else {\n                    result = ['catch'];\n                }\n            });\n            result.push(this.maybeBlock(stmt.body, S_TFFF));\n            return result;\n        },\n\n        DebuggerStatement: function (stmt, flags) {\n            return 'debugger' + this.semicolon(flags);\n        },\n\n        EmptyStatement: function (stmt, flags) {\n            return ';';\n        },\n\n        ExportDefaultDeclaration: function (stmt, flags) {\n            var result = [ 'export' ], bodyFlags;\n\n            bodyFlags = (flags & F_SEMICOLON_OPT) ? S_TFFT : S_TFFF;\n\n            // export default HoistableDeclaration[Default]\n            // export default AssignmentExpression[In] ;\n            result = join(result, 'default');\n            if (isStatement(stmt.declaration)) {\n                result = join(result, this.generateStatement(stmt.declaration, bodyFlags));\n            } else {\n                result = join(result, this.generateExpression(stmt.declaration, Precedence.Assignment, E_TTT) + this.semicolon(flags));\n            }\n            return result;\n        },\n\n        ExportNamedDeclaration: function (stmt, flags) {\n            var result = [ 'export' ], bodyFlags, that = this;\n\n            bodyFlags = (flags & F_SEMICOLON_OPT) ? S_TFFT : S_TFFF;\n\n            // export VariableStatement\n            // export Declaration[Default]\n            if (stmt.declaration) {\n                return join(result, this.generateStatement(stmt.declaration, bodyFlags));\n            }\n\n            // export ExportClause[NoReference] FromClause ;\n            // export ExportClause ;\n            if (stmt.specifiers) {\n                if (stmt.specifiers.length === 0) {\n                    result = join(result, '{' + space + '}');\n                } else if (stmt.specifiers[0].type === Syntax.ExportBatchSpecifier) {\n                    result = join(result, this.generateExpression(stmt.specifiers[0], Precedence.Sequence, E_TTT));\n                } else {\n                    result = join(result, '{');\n                    withIndent(function (indent) {\n                        var i, iz;\n                        result.push(newline);\n                        for (i = 0, iz = stmt.specifiers.length; i < iz; ++i) {\n                            result.push(indent);\n                            result.push(that.generateExpression(stmt.specifiers[i], Precedence.Sequence, E_TTT));\n                            if (i + 1 < iz) {\n                                result.push(',' + newline);\n                            }\n                        }\n                    });\n                    if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {\n                        result.push(newline);\n                    }\n                    result.push(base + '}');\n                }\n\n                if (stmt.source) {\n                    result = join(result, [\n                        'from' + space,\n                        // ModuleSpecifier\n                        this.generateExpression(stmt.source, Precedence.Sequence, E_TTT),\n                        this.semicolon(flags)\n                    ]);\n                } else {\n                    result.push(this.semicolon(flags));\n                }\n            }\n            return result;\n        },\n\n        ExportAllDeclaration: function (stmt, flags) {\n            // export * FromClause ;\n            return [\n                'export' + space,\n                '*' + space,\n                'from' + space,\n                // ModuleSpecifier\n                this.generateExpression(stmt.source, Precedence.Sequence, E_TTT),\n                this.semicolon(flags)\n            ];\n        },\n\n        ExpressionStatement: function (stmt, flags) {\n            var result, fragment;\n\n            function isClassPrefixed(fragment) {\n                var code;\n                if (fragment.slice(0, 5) !== 'class') {\n                    return false;\n                }\n                code = fragment.charCodeAt(5);\n                return code === 0x7B  /* '{' */ || esutils.code.isWhiteSpace(code) || esutils.code.isLineTerminator(code);\n            }\n\n            function isFunctionPrefixed(fragment) {\n                var code;\n                if (fragment.slice(0, 8) !== 'function') {\n                    return false;\n                }\n                code = fragment.charCodeAt(8);\n                return code === 0x28 /* '(' */ || esutils.code.isWhiteSpace(code) || code === 0x2A  /* '*' */ || esutils.code.isLineTerminator(code);\n            }\n\n            function isAsyncPrefixed(fragment) {\n                var code, i, iz;\n                if (fragment.slice(0, 5) !== 'async') {\n                    return false;\n                }\n                if (!esutils.code.isWhiteSpace(fragment.charCodeAt(5))) {\n                    return false;\n                }\n                for (i = 6, iz = fragment.length; i < iz; ++i) {\n                    if (!esutils.code.isWhiteSpace(fragment.charCodeAt(i))) {\n                        break;\n                    }\n                }\n                if (i === iz) {\n                    return false;\n                }\n                if (fragment.slice(i, i + 8) !== 'function') {\n                    return false;\n                }\n                code = fragment.charCodeAt(i + 8);\n                return code === 0x28 /* '(' */ || esutils.code.isWhiteSpace(code) || code === 0x2A  /* '*' */ || esutils.code.isLineTerminator(code);\n            }\n\n            result = [this.generateExpression(stmt.expression, Precedence.Sequence, E_TTT)];\n            // 12.4 '{', 'function', 'class' is not allowed in this position.\n            // wrap expression with parentheses\n            fragment = toSourceNodeWhenNeeded(result).toString();\n            if (fragment.charCodeAt(0) === 0x7B  /* '{' */ ||  // ObjectExpression\n                    isClassPrefixed(fragment) ||\n                    isFunctionPrefixed(fragment) ||\n                    isAsyncPrefixed(fragment) ||\n                    (directive && (flags & F_DIRECTIVE_CTX) && stmt.expression.type === Syntax.Literal && typeof stmt.expression.value === 'string')) {\n                result = ['(', result, ')' + this.semicolon(flags)];\n            } else {\n                result.push(this.semicolon(flags));\n            }\n            return result;\n        },\n\n        ImportDeclaration: function (stmt, flags) {\n            // ES6: 15.2.1 valid import declarations:\n            //     - import ImportClause FromClause ;\n            //     - import ModuleSpecifier ;\n            var result, cursor, that = this;\n\n            // If no ImportClause is present,\n            // this should be `import ModuleSpecifier` so skip `from`\n            // ModuleSpecifier is StringLiteral.\n            if (stmt.specifiers.length === 0) {\n                // import ModuleSpecifier ;\n                return [\n                    'import',\n                    space,\n                    // ModuleSpecifier\n                    this.generateExpression(stmt.source, Precedence.Sequence, E_TTT),\n                    this.semicolon(flags)\n                ];\n            }\n\n            // import ImportClause FromClause ;\n            result = [\n                'import'\n            ];\n            cursor = 0;\n\n            // ImportedBinding\n            if (stmt.specifiers[cursor].type === Syntax.ImportDefaultSpecifier) {\n                result = join(result, [\n                        this.generateExpression(stmt.specifiers[cursor], Precedence.Sequence, E_TTT)\n                ]);\n                ++cursor;\n            }\n\n            if (stmt.specifiers[cursor]) {\n                if (cursor !== 0) {\n                    result.push(',');\n                }\n\n                if (stmt.specifiers[cursor].type === Syntax.ImportNamespaceSpecifier) {\n                    // NameSpaceImport\n                    result = join(result, [\n                            space,\n                            this.generateExpression(stmt.specifiers[cursor], Precedence.Sequence, E_TTT)\n                    ]);\n                } else {\n                    // NamedImports\n                    result.push(space + '{');\n\n                    if ((stmt.specifiers.length - cursor) === 1) {\n                        // import { ... } from \"...\";\n                        result.push(space);\n                        result.push(this.generateExpression(stmt.specifiers[cursor], Precedence.Sequence, E_TTT));\n                        result.push(space + '}' + space);\n                    } else {\n                        // import {\n                        //    ...,\n                        //    ...,\n                        // } from \"...\";\n                        withIndent(function (indent) {\n                            var i, iz;\n                            result.push(newline);\n                            for (i = cursor, iz = stmt.specifiers.length; i < iz; ++i) {\n                                result.push(indent);\n                                result.push(that.generateExpression(stmt.specifiers[i], Precedence.Sequence, E_TTT));\n                                if (i + 1 < iz) {\n                                    result.push(',' + newline);\n                                }\n                            }\n                        });\n                        if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {\n                            result.push(newline);\n                        }\n                        result.push(base + '}' + space);\n                    }\n                }\n            }\n\n            result = join(result, [\n                'from' + space,\n                // ModuleSpecifier\n                this.generateExpression(stmt.source, Precedence.Sequence, E_TTT),\n                this.semicolon(flags)\n            ]);\n            return result;\n        },\n\n        VariableDeclarator: function (stmt, flags) {\n            var itemFlags = (flags & F_ALLOW_IN) ? E_TTT : E_FTT;\n            if (stmt.init) {\n                return [\n                    this.generateExpression(stmt.id, Precedence.Assignment, itemFlags),\n                    space,\n                    '=',\n                    space,\n                    this.generateExpression(stmt.init, Precedence.Assignment, itemFlags)\n                ];\n            }\n            return this.generatePattern(stmt.id, Precedence.Assignment, itemFlags);\n        },\n\n        VariableDeclaration: function (stmt, flags) {\n            // VariableDeclarator is typed as Statement,\n            // but joined with comma (not LineTerminator).\n            // So if comment is attached to target node, we should specialize.\n            var result, i, iz, node, bodyFlags, that = this;\n\n            result = [ stmt.kind ];\n\n            bodyFlags = (flags & F_ALLOW_IN) ? S_TFFF : S_FFFF;\n\n            function block() {\n                node = stmt.declarations[0];\n                if (extra.comment && node.leadingComments) {\n                    result.push('\\n');\n                    result.push(addIndent(that.generateStatement(node, bodyFlags)));\n                } else {\n                    result.push(noEmptySpace());\n                    result.push(that.generateStatement(node, bodyFlags));\n                }\n\n                for (i = 1, iz = stmt.declarations.length; i < iz; ++i) {\n                    node = stmt.declarations[i];\n                    if (extra.comment && node.leadingComments) {\n                        result.push(',' + newline);\n                        result.push(addIndent(that.generateStatement(node, bodyFlags)));\n                    } else {\n                        result.push(',' + space);\n                        result.push(that.generateStatement(node, bodyFlags));\n                    }\n                }\n            }\n\n            if (stmt.declarations.length > 1) {\n                withIndent(block);\n            } else {\n                block();\n            }\n\n            result.push(this.semicolon(flags));\n\n            return result;\n        },\n\n        ThrowStatement: function (stmt, flags) {\n            return [join(\n                'throw',\n                this.generateExpression(stmt.argument, Precedence.Sequence, E_TTT)\n            ), this.semicolon(flags)];\n        },\n\n        TryStatement: function (stmt, flags) {\n            var result, i, iz, guardedHandlers;\n\n            result = ['try', this.maybeBlock(stmt.block, S_TFFF)];\n            result = this.maybeBlockSuffix(stmt.block, result);\n\n            if (stmt.handlers) {\n                // old interface\n                for (i = 0, iz = stmt.handlers.length; i < iz; ++i) {\n                    result = join(result, this.generateStatement(stmt.handlers[i], S_TFFF));\n                    if (stmt.finalizer || i + 1 !== iz) {\n                        result = this.maybeBlockSuffix(stmt.handlers[i].body, result);\n                    }\n                }\n            } else {\n                guardedHandlers = stmt.guardedHandlers || [];\n\n                for (i = 0, iz = guardedHandlers.length; i < iz; ++i) {\n                    result = join(result, this.generateStatement(guardedHandlers[i], S_TFFF));\n                    if (stmt.finalizer || i + 1 !== iz) {\n                        result = this.maybeBlockSuffix(guardedHandlers[i].body, result);\n                    }\n                }\n\n                // new interface\n                if (stmt.handler) {\n                    if (Array.isArray(stmt.handler)) {\n                        for (i = 0, iz = stmt.handler.length; i < iz; ++i) {\n                            result = join(result, this.generateStatement(stmt.handler[i], S_TFFF));\n                            if (stmt.finalizer || i + 1 !== iz) {\n                                result = this.maybeBlockSuffix(stmt.handler[i].body, result);\n                            }\n                        }\n                    } else {\n                        result = join(result, this.generateStatement(stmt.handler, S_TFFF));\n                        if (stmt.finalizer) {\n                            result = this.maybeBlockSuffix(stmt.handler.body, result);\n                        }\n                    }\n                }\n            }\n            if (stmt.finalizer) {\n                result = join(result, ['finally', this.maybeBlock(stmt.finalizer, S_TFFF)]);\n            }\n            return result;\n        },\n\n        SwitchStatement: function (stmt, flags) {\n            var result, fragment, i, iz, bodyFlags, that = this;\n            withIndent(function () {\n                result = [\n                    'switch' + space + '(',\n                    that.generateExpression(stmt.discriminant, Precedence.Sequence, E_TTT),\n                    ')' + space + '{' + newline\n                ];\n            });\n            if (stmt.cases) {\n                bodyFlags = S_TFFF;\n                for (i = 0, iz = stmt.cases.length; i < iz; ++i) {\n                    if (i === iz - 1) {\n                        bodyFlags |= F_SEMICOLON_OPT;\n                    }\n                    fragment = addIndent(this.generateStatement(stmt.cases[i], bodyFlags));\n                    result.push(fragment);\n                    if (!endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {\n                        result.push(newline);\n                    }\n                }\n            }\n            result.push(addIndent('}'));\n            return result;\n        },\n\n        SwitchCase: function (stmt, flags) {\n            var result, fragment, i, iz, bodyFlags, that = this;\n            withIndent(function () {\n                if (stmt.test) {\n                    result = [\n                        join('case', that.generateExpression(stmt.test, Precedence.Sequence, E_TTT)),\n                        ':'\n                    ];\n                } else {\n                    result = ['default:'];\n                }\n\n                i = 0;\n                iz = stmt.consequent.length;\n                if (iz && stmt.consequent[0].type === Syntax.BlockStatement) {\n                    fragment = that.maybeBlock(stmt.consequent[0], S_TFFF);\n                    result.push(fragment);\n                    i = 1;\n                }\n\n                if (i !== iz && !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {\n                    result.push(newline);\n                }\n\n                bodyFlags = S_TFFF;\n                for (; i < iz; ++i) {\n                    if (i === iz - 1 && flags & F_SEMICOLON_OPT) {\n                        bodyFlags |= F_SEMICOLON_OPT;\n                    }\n                    fragment = addIndent(that.generateStatement(stmt.consequent[i], bodyFlags));\n                    result.push(fragment);\n                    if (i + 1 !== iz && !endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {\n                        result.push(newline);\n                    }\n                }\n            });\n            return result;\n        },\n\n        IfStatement: function (stmt, flags) {\n            var result, bodyFlags, semicolonOptional, that = this;\n            withIndent(function () {\n                result = [\n                    'if' + space + '(',\n                    that.generateExpression(stmt.test, Precedence.Sequence, E_TTT),\n                    ')'\n                ];\n            });\n            semicolonOptional = flags & F_SEMICOLON_OPT;\n            bodyFlags = S_TFFF;\n            if (semicolonOptional) {\n                bodyFlags |= F_SEMICOLON_OPT;\n            }\n            if (stmt.alternate) {\n                result.push(this.maybeBlock(stmt.consequent, S_TFFF));\n                result = this.maybeBlockSuffix(stmt.consequent, result);\n                if (stmt.alternate.type === Syntax.IfStatement) {\n                    result = join(result, ['else ', this.generateStatement(stmt.alternate, bodyFlags)]);\n                } else {\n                    result = join(result, join('else', this.maybeBlock(stmt.alternate, bodyFlags)));\n                }\n            } else {\n                result.push(this.maybeBlock(stmt.consequent, bodyFlags));\n            }\n            return result;\n        },\n\n        ForStatement: function (stmt, flags) {\n            var result, that = this;\n            withIndent(function () {\n                result = ['for' + space + '('];\n                if (stmt.init) {\n                    if (stmt.init.type === Syntax.VariableDeclaration) {\n                        result.push(that.generateStatement(stmt.init, S_FFFF));\n                    } else {\n                        // F_ALLOW_IN becomes false.\n                        result.push(that.generateExpression(stmt.init, Precedence.Sequence, E_FTT));\n                        result.push(';');\n                    }\n                } else {\n                    result.push(';');\n                }\n\n                if (stmt.test) {\n                    result.push(space);\n                    result.push(that.generateExpression(stmt.test, Precedence.Sequence, E_TTT));\n                    result.push(';');\n                } else {\n                    result.push(';');\n                }\n\n                if (stmt.update) {\n                    result.push(space);\n                    result.push(that.generateExpression(stmt.update, Precedence.Sequence, E_TTT));\n                    result.push(')');\n                } else {\n                    result.push(')');\n                }\n            });\n\n            result.push(this.maybeBlock(stmt.body, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF));\n            return result;\n        },\n\n        ForInStatement: function (stmt, flags) {\n            return this.generateIterationForStatement('in', stmt, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF);\n        },\n\n        ForOfStatement: function (stmt, flags) {\n            return this.generateIterationForStatement('of', stmt, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF);\n        },\n\n        LabeledStatement: function (stmt, flags) {\n            return [stmt.label.name + ':', this.maybeBlock(stmt.body, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF)];\n        },\n\n        Program: function (stmt, flags) {\n            var result, fragment, i, iz, bodyFlags;\n            iz = stmt.body.length;\n            result = [safeConcatenation && iz > 0 ? '\\n' : ''];\n            bodyFlags = S_TFTF;\n            for (i = 0; i < iz; ++i) {\n                if (!safeConcatenation && i === iz - 1) {\n                    bodyFlags |= F_SEMICOLON_OPT;\n                }\n\n                if (preserveBlankLines) {\n                    // handle spaces before the first line\n                    if (i === 0) {\n                        if (!stmt.body[0].leadingComments) {\n                            generateBlankLines(stmt.range[0], stmt.body[i].range[0], result);\n                        }\n                    }\n\n                    // handle spaces between lines\n                    if (i > 0) {\n                        if (!stmt.body[i - 1].trailingComments && !stmt.body[i].leadingComments) {\n                            generateBlankLines(stmt.body[i - 1].range[1], stmt.body[i].range[0], result);\n                        }\n                    }\n                }\n\n                fragment = addIndent(this.generateStatement(stmt.body[i], bodyFlags));\n                result.push(fragment);\n                if (i + 1 < iz && !endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {\n                    if (preserveBlankLines) {\n                        if (!stmt.body[i + 1].leadingComments) {\n                            result.push(newline);\n                        }\n                    } else {\n                        result.push(newline);\n                    }\n                }\n\n                if (preserveBlankLines) {\n                    // handle spaces after the last line\n                    if (i === iz - 1) {\n                        if (!stmt.body[i].trailingComments) {\n                            generateBlankLines(stmt.body[i].range[1], stmt.range[1], result);\n                        }\n                    }\n                }\n            }\n            return result;\n        },\n\n        FunctionDeclaration: function (stmt, flags) {\n            return [\n                generateAsyncPrefix(stmt, true),\n                'function',\n                generateStarSuffix(stmt) || noEmptySpace(),\n                stmt.id ? generateIdentifier(stmt.id) : '',\n                this.generateFunctionBody(stmt)\n            ];\n        },\n\n        ReturnStatement: function (stmt, flags) {\n            if (stmt.argument) {\n                return [join(\n                    'return',\n                    this.generateExpression(stmt.argument, Precedence.Sequence, E_TTT)\n                ), this.semicolon(flags)];\n            }\n            return ['return' + this.semicolon(flags)];\n        },\n\n        WhileStatement: function (stmt, flags) {\n            var result, that = this;\n            withIndent(function () {\n                result = [\n                    'while' + space + '(',\n                    that.generateExpression(stmt.test, Precedence.Sequence, E_TTT),\n                    ')'\n                ];\n            });\n            result.push(this.maybeBlock(stmt.body, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF));\n            return result;\n        },\n\n        WithStatement: function (stmt, flags) {\n            var result, that = this;\n            withIndent(function () {\n                result = [\n                    'with' + space + '(',\n                    that.generateExpression(stmt.object, Precedence.Sequence, E_TTT),\n                    ')'\n                ];\n            });\n            result.push(this.maybeBlock(stmt.body, flags & F_SEMICOLON_OPT ? S_TFFT : S_TFFF));\n            return result;\n        }\n\n    };\n\n    merge(CodeGenerator.prototype, CodeGenerator.Statement);\n\n    // Expressions.\n\n    CodeGenerator.Expression = {\n\n        SequenceExpression: function (expr, precedence, flags) {\n            var result, i, iz;\n            if (Precedence.Sequence < precedence) {\n                flags |= F_ALLOW_IN;\n            }\n            result = [];\n            for (i = 0, iz = expr.expressions.length; i < iz; ++i) {\n                result.push(this.generateExpression(expr.expressions[i], Precedence.Assignment, flags));\n                if (i + 1 < iz) {\n                    result.push(',' + space);\n                }\n            }\n            return parenthesize(result, Precedence.Sequence, precedence);\n        },\n\n        AssignmentExpression: function (expr, precedence, flags) {\n            return this.generateAssignment(expr.left, expr.right, expr.operator, precedence, flags);\n        },\n\n        ArrowFunctionExpression: function (expr, precedence, flags) {\n            return parenthesize(this.generateFunctionBody(expr), Precedence.ArrowFunction, precedence);\n        },\n\n        ConditionalExpression: function (expr, precedence, flags) {\n            if (Precedence.Conditional < precedence) {\n                flags |= F_ALLOW_IN;\n            }\n            return parenthesize(\n                [\n                    this.generateExpression(expr.test, Precedence.LogicalOR, flags),\n                    space + '?' + space,\n                    this.generateExpression(expr.consequent, Precedence.Assignment, flags),\n                    space + ':' + space,\n                    this.generateExpression(expr.alternate, Precedence.Assignment, flags)\n                ],\n                Precedence.Conditional,\n                precedence\n            );\n        },\n\n        LogicalExpression: function (expr, precedence, flags) {\n            return this.BinaryExpression(expr, precedence, flags);\n        },\n\n        BinaryExpression: function (expr, precedence, flags) {\n            var result, leftPrecedence, rightPrecedence, currentPrecedence, fragment, leftSource;\n            currentPrecedence = BinaryPrecedence[expr.operator];\n            leftPrecedence = expr.operator === '**' ? Precedence.Postfix : currentPrecedence;\n            rightPrecedence = expr.operator === '**' ? currentPrecedence : currentPrecedence + 1;\n\n            if (currentPrecedence < precedence) {\n                flags |= F_ALLOW_IN;\n            }\n\n            fragment = this.generateExpression(expr.left, leftPrecedence, flags);\n\n            leftSource = fragment.toString();\n\n            if (leftSource.charCodeAt(leftSource.length - 1) === 0x2F /* / */ && esutils.code.isIdentifierPartES5(expr.operator.charCodeAt(0))) {\n                result = [fragment, noEmptySpace(), expr.operator];\n            } else {\n                result = join(fragment, expr.operator);\n            }\n\n            fragment = this.generateExpression(expr.right, rightPrecedence, flags);\n\n            if (expr.operator === '/' && fragment.toString().charAt(0) === '/' ||\n            expr.operator.slice(-1) === '<' && fragment.toString().slice(0, 3) === '!--') {\n                // If '/' concats with '/' or `<` concats with `!--`, it is interpreted as comment start\n                result.push(noEmptySpace());\n                result.push(fragment);\n            } else {\n                result = join(result, fragment);\n            }\n\n            if (expr.operator === 'in' && !(flags & F_ALLOW_IN)) {\n                return ['(', result, ')'];\n            }\n            return parenthesize(result, currentPrecedence, precedence);\n        },\n\n        CallExpression: function (expr, precedence, flags) {\n            var result, i, iz;\n            // F_ALLOW_UNPARATH_NEW becomes false.\n            result = [this.generateExpression(expr.callee, Precedence.Call, E_TTF)];\n            result.push('(');\n            for (i = 0, iz = expr['arguments'].length; i < iz; ++i) {\n                result.push(this.generateExpression(expr['arguments'][i], Precedence.Assignment, E_TTT));\n                if (i + 1 < iz) {\n                    result.push(',' + space);\n                }\n            }\n            result.push(')');\n\n            if (!(flags & F_ALLOW_CALL)) {\n                return ['(', result, ')'];\n            }\n            return parenthesize(result, Precedence.Call, precedence);\n        },\n\n        NewExpression: function (expr, precedence, flags) {\n            var result, length, i, iz, itemFlags;\n            length = expr['arguments'].length;\n\n            // F_ALLOW_CALL becomes false.\n            // F_ALLOW_UNPARATH_NEW may become false.\n            itemFlags = (flags & F_ALLOW_UNPARATH_NEW && !parentheses && length === 0) ? E_TFT : E_TFF;\n\n            result = join(\n                'new',\n                this.generateExpression(expr.callee, Precedence.New, itemFlags)\n            );\n\n            if (!(flags & F_ALLOW_UNPARATH_NEW) || parentheses || length > 0) {\n                result.push('(');\n                for (i = 0, iz = length; i < iz; ++i) {\n                    result.push(this.generateExpression(expr['arguments'][i], Precedence.Assignment, E_TTT));\n                    if (i + 1 < iz) {\n                        result.push(',' + space);\n                    }\n                }\n                result.push(')');\n            }\n\n            return parenthesize(result, Precedence.New, precedence);\n        },\n\n        MemberExpression: function (expr, precedence, flags) {\n            var result, fragment;\n\n            // F_ALLOW_UNPARATH_NEW becomes false.\n            result = [this.generateExpression(expr.object, Precedence.Call, (flags & F_ALLOW_CALL) ? E_TTF : E_TFF)];\n\n            if (expr.computed) {\n                result.push('[');\n                result.push(this.generateExpression(expr.property, Precedence.Sequence, flags & F_ALLOW_CALL ? E_TTT : E_TFT));\n                result.push(']');\n            } else {\n                if (expr.object.type === Syntax.Literal && typeof expr.object.value === 'number') {\n                    fragment = toSourceNodeWhenNeeded(result).toString();\n                    // When the following conditions are all true,\n                    //   1. No floating point\n                    //   2. Don't have exponents\n                    //   3. The last character is a decimal digit\n                    //   4. Not hexadecimal OR octal number literal\n                    // we should add a floating point.\n                    if (\n                            fragment.indexOf('.') < 0 &&\n                            !/[eExX]/.test(fragment) &&\n                            esutils.code.isDecimalDigit(fragment.charCodeAt(fragment.length - 1)) &&\n                            !(fragment.length >= 2 && fragment.charCodeAt(0) === 48)  // '0'\n                            ) {\n                        result.push(' ');\n                    }\n                }\n                result.push('.');\n                result.push(generateIdentifier(expr.property));\n            }\n\n            return parenthesize(result, Precedence.Member, precedence);\n        },\n\n        MetaProperty: function (expr, precedence, flags) {\n            var result;\n            result = [];\n            result.push(typeof expr.meta === \"string\" ? expr.meta : generateIdentifier(expr.meta));\n            result.push('.');\n            result.push(typeof expr.property === \"string\" ? expr.property : generateIdentifier(expr.property));\n            return parenthesize(result, Precedence.Member, precedence);\n        },\n\n        UnaryExpression: function (expr, precedence, flags) {\n            var result, fragment, rightCharCode, leftSource, leftCharCode;\n            fragment = this.generateExpression(expr.argument, Precedence.Unary, E_TTT);\n\n            if (space === '') {\n                result = join(expr.operator, fragment);\n            } else {\n                result = [expr.operator];\n                if (expr.operator.length > 2) {\n                    // delete, void, typeof\n                    // get `typeof []`, not `typeof[]`\n                    result = join(result, fragment);\n                } else {\n                    // Prevent inserting spaces between operator and argument if it is unnecessary\n                    // like, `!cond`\n                    leftSource = toSourceNodeWhenNeeded(result).toString();\n                    leftCharCode = leftSource.charCodeAt(leftSource.length - 1);\n                    rightCharCode = fragment.toString().charCodeAt(0);\n\n                    if (((leftCharCode === 0x2B  /* + */ || leftCharCode === 0x2D  /* - */) && leftCharCode === rightCharCode) ||\n                            (esutils.code.isIdentifierPartES5(leftCharCode) && esutils.code.isIdentifierPartES5(rightCharCode))) {\n                        result.push(noEmptySpace());\n                        result.push(fragment);\n                    } else {\n                        result.push(fragment);\n                    }\n                }\n            }\n            return parenthesize(result, Precedence.Unary, precedence);\n        },\n\n        YieldExpression: function (expr, precedence, flags) {\n            var result;\n            if (expr.delegate) {\n                result = 'yield*';\n            } else {\n                result = 'yield';\n            }\n            if (expr.argument) {\n                result = join(\n                    result,\n                    this.generateExpression(expr.argument, Precedence.Yield, E_TTT)\n                );\n            }\n            return parenthesize(result, Precedence.Yield, precedence);\n        },\n\n        AwaitExpression: function (expr, precedence, flags) {\n            var result = join(\n                expr.all ? 'await*' : 'await',\n                this.generateExpression(expr.argument, Precedence.Await, E_TTT)\n            );\n            return parenthesize(result, Precedence.Await, precedence);\n        },\n\n        UpdateExpression: function (expr, precedence, flags) {\n            if (expr.prefix) {\n                return parenthesize(\n                    [\n                        expr.operator,\n                        this.generateExpression(expr.argument, Precedence.Unary, E_TTT)\n                    ],\n                    Precedence.Unary,\n                    precedence\n                );\n            }\n            return parenthesize(\n                [\n                    this.generateExpression(expr.argument, Precedence.Postfix, E_TTT),\n                    expr.operator\n                ],\n                Precedence.Postfix,\n                precedence\n            );\n        },\n\n        FunctionExpression: function (expr, precedence, flags) {\n            var result = [\n                generateAsyncPrefix(expr, true),\n                'function'\n            ];\n            if (expr.id) {\n                result.push(generateStarSuffix(expr) || noEmptySpace());\n                result.push(generateIdentifier(expr.id));\n            } else {\n                result.push(generateStarSuffix(expr) || space);\n            }\n            result.push(this.generateFunctionBody(expr));\n            return result;\n        },\n\n        ArrayPattern: function (expr, precedence, flags) {\n            return this.ArrayExpression(expr, precedence, flags, true);\n        },\n\n        ArrayExpression: function (expr, precedence, flags, isPattern) {\n            var result, multiline, that = this;\n            if (!expr.elements.length) {\n                return '[]';\n            }\n            multiline = isPattern ? false : expr.elements.length > 1;\n            result = ['[', multiline ? newline : ''];\n            withIndent(function (indent) {\n                var i, iz;\n                for (i = 0, iz = expr.elements.length; i < iz; ++i) {\n                    if (!expr.elements[i]) {\n                        if (multiline) {\n                            result.push(indent);\n                        }\n                        if (i + 1 === iz) {\n                            result.push(',');\n                        }\n                    } else {\n                        result.push(multiline ? indent : '');\n                        result.push(that.generateExpression(expr.elements[i], Precedence.Assignment, E_TTT));\n                    }\n                    if (i + 1 < iz) {\n                        result.push(',' + (multiline ? newline : space));\n                    }\n                }\n            });\n            if (multiline && !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {\n                result.push(newline);\n            }\n            result.push(multiline ? base : '');\n            result.push(']');\n            return result;\n        },\n\n        RestElement: function(expr, precedence, flags) {\n            return '...' + this.generatePattern(expr.argument);\n        },\n\n        ClassExpression: function (expr, precedence, flags) {\n            var result, fragment;\n            result = ['class'];\n            if (expr.id) {\n                result = join(result, this.generateExpression(expr.id, Precedence.Sequence, E_TTT));\n            }\n            if (expr.superClass) {\n                fragment = join('extends', this.generateExpression(expr.superClass, Precedence.Unary, E_TTT));\n                result = join(result, fragment);\n            }\n            result.push(space);\n            result.push(this.generateStatement(expr.body, S_TFFT));\n            return result;\n        },\n\n        MethodDefinition: function (expr, precedence, flags) {\n            var result, fragment;\n            if (expr['static']) {\n                result = ['static' + space];\n            } else {\n                result = [];\n            }\n            if (expr.kind === 'get' || expr.kind === 'set') {\n                fragment = [\n                    join(expr.kind, this.generatePropertyKey(expr.key, expr.computed)),\n                    this.generateFunctionBody(expr.value)\n                ];\n            } else {\n                fragment = [\n                    generateMethodPrefix(expr),\n                    this.generatePropertyKey(expr.key, expr.computed),\n                    this.generateFunctionBody(expr.value)\n                ];\n            }\n            return join(result, fragment);\n        },\n\n        Property: function (expr, precedence, flags) {\n            if (expr.kind === 'get' || expr.kind === 'set') {\n                return [\n                    expr.kind, noEmptySpace(),\n                    this.generatePropertyKey(expr.key, expr.computed),\n                    this.generateFunctionBody(expr.value)\n                ];\n            }\n\n            if (expr.shorthand) {\n                if (expr.value.type === \"AssignmentPattern\") {\n                    return this.AssignmentPattern(expr.value, Precedence.Sequence, E_TTT);\n                }\n                return this.generatePropertyKey(expr.key, expr.computed);\n            }\n\n            if (expr.method) {\n                return [\n                    generateMethodPrefix(expr),\n                    this.generatePropertyKey(expr.key, expr.computed),\n                    this.generateFunctionBody(expr.value)\n                ];\n            }\n\n            return [\n                this.generatePropertyKey(expr.key, expr.computed),\n                ':' + space,\n                this.generateExpression(expr.value, Precedence.Assignment, E_TTT)\n            ];\n        },\n\n        ObjectExpression: function (expr, precedence, flags) {\n            var multiline, result, fragment, that = this;\n\n            if (!expr.properties.length) {\n                return '{}';\n            }\n            multiline = expr.properties.length > 1;\n\n            withIndent(function () {\n                fragment = that.generateExpression(expr.properties[0], Precedence.Sequence, E_TTT);\n            });\n\n            if (!multiline) {\n                // issues 4\n                // Do not transform from\n                //   dejavu.Class.declare({\n                //       method2: function () {}\n                //   });\n                // to\n                //   dejavu.Class.declare({method2: function () {\n                //       }});\n                if (!hasLineTerminator(toSourceNodeWhenNeeded(fragment).toString())) {\n                    return [ '{', space, fragment, space, '}' ];\n                }\n            }\n\n            withIndent(function (indent) {\n                var i, iz;\n                result = [ '{', newline, indent, fragment ];\n\n                if (multiline) {\n                    result.push(',' + newline);\n                    for (i = 1, iz = expr.properties.length; i < iz; ++i) {\n                        result.push(indent);\n                        result.push(that.generateExpression(expr.properties[i], Precedence.Sequence, E_TTT));\n                        if (i + 1 < iz) {\n                            result.push(',' + newline);\n                        }\n                    }\n                }\n            });\n\n            if (!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {\n                result.push(newline);\n            }\n            result.push(base);\n            result.push('}');\n            return result;\n        },\n\n        AssignmentPattern: function(expr, precedence, flags) {\n            return this.generateAssignment(expr.left, expr.right, '=', precedence, flags);\n        },\n\n        ObjectPattern: function (expr, precedence, flags) {\n            var result, i, iz, multiline, property, that = this;\n            if (!expr.properties.length) {\n                return '{}';\n            }\n\n            multiline = false;\n            if (expr.properties.length === 1) {\n                property = expr.properties[0];\n                if (\n                    property.type === Syntax.Property\n                    && property.value.type !== Syntax.Identifier\n                ) {\n                    multiline = true;\n                }\n            } else {\n                for (i = 0, iz = expr.properties.length; i < iz; ++i) {\n                    property = expr.properties[i];\n                    if (\n                        property.type === Syntax.Property\n                        && !property.shorthand\n                    ) {\n                        multiline = true;\n                        break;\n                    }\n                }\n            }\n            result = ['{', multiline ? newline : '' ];\n\n            withIndent(function (indent) {\n                var i, iz;\n                for (i = 0, iz = expr.properties.length; i < iz; ++i) {\n                    result.push(multiline ? indent : '');\n                    result.push(that.generateExpression(expr.properties[i], Precedence.Sequence, E_TTT));\n                    if (i + 1 < iz) {\n                        result.push(',' + (multiline ? newline : space));\n                    }\n                }\n            });\n\n            if (multiline && !endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())) {\n                result.push(newline);\n            }\n            result.push(multiline ? base : '');\n            result.push('}');\n            return result;\n        },\n\n        ThisExpression: function (expr, precedence, flags) {\n            return 'this';\n        },\n\n        Super: function (expr, precedence, flags) {\n            return 'super';\n        },\n\n        Identifier: function (expr, precedence, flags) {\n            return generateIdentifier(expr);\n        },\n\n        ImportDefaultSpecifier: function (expr, precedence, flags) {\n            return generateIdentifier(expr.id || expr.local);\n        },\n\n        ImportNamespaceSpecifier: function (expr, precedence, flags) {\n            var result = ['*'];\n            var id = expr.id || expr.local;\n            if (id) {\n                result.push(space + 'as' + noEmptySpace() + generateIdentifier(id));\n            }\n            return result;\n        },\n\n        ImportSpecifier: function (expr, precedence, flags) {\n            var imported = expr.imported;\n            var result = [ imported.name ];\n            var local = expr.local;\n            if (local && local.name !== imported.name) {\n                result.push(noEmptySpace() + 'as' + noEmptySpace() + generateIdentifier(local));\n            }\n            return result;\n        },\n\n        ExportSpecifier: function (expr, precedence, flags) {\n            var local = expr.local;\n            var result = [ local.name ];\n            var exported = expr.exported;\n            if (exported && exported.name !== local.name) {\n                result.push(noEmptySpace() + 'as' + noEmptySpace() + generateIdentifier(exported));\n            }\n            return result;\n        },\n\n        Literal: function (expr, precedence, flags) {\n            var raw;\n            if (expr.hasOwnProperty('raw') && parse && extra.raw) {\n                try {\n                    raw = parse(expr.raw).body[0].expression;\n                    if (raw.type === Syntax.Literal) {\n                        if (raw.value === expr.value) {\n                            return expr.raw;\n                        }\n                    }\n                } catch (e) {\n                    // not use raw property\n                }\n            }\n\n            if (expr.regex) {\n              return '/' + expr.regex.pattern + '/' + expr.regex.flags;\n            }\n\n            if (expr.value === null) {\n                return 'null';\n            }\n\n            if (typeof expr.value === 'string') {\n                return escapeString(expr.value);\n            }\n\n            if (typeof expr.value === 'number') {\n                return generateNumber(expr.value);\n            }\n\n            if (typeof expr.value === 'boolean') {\n                return expr.value ? 'true' : 'false';\n            }\n\n            return generateRegExp(expr.value);\n        },\n\n        GeneratorExpression: function (expr, precedence, flags) {\n            return this.ComprehensionExpression(expr, precedence, flags);\n        },\n\n        ComprehensionExpression: function (expr, precedence, flags) {\n            // GeneratorExpression should be parenthesized with (...), ComprehensionExpression with [...]\n            // Due to https://bugzilla.mozilla.org/show_bug.cgi?id=883468 position of expr.body can differ in Spidermonkey and ES6\n\n            var result, i, iz, fragment, that = this;\n            result = (expr.type === Syntax.GeneratorExpression) ? ['('] : ['['];\n\n            if (extra.moz.comprehensionExpressionStartsWithAssignment) {\n                fragment = this.generateExpression(expr.body, Precedence.Assignment, E_TTT);\n                result.push(fragment);\n            }\n\n            if (expr.blocks) {\n                withIndent(function () {\n                    for (i = 0, iz = expr.blocks.length; i < iz; ++i) {\n                        fragment = that.generateExpression(expr.blocks[i], Precedence.Sequence, E_TTT);\n                        if (i > 0 || extra.moz.comprehensionExpressionStartsWithAssignment) {\n                            result = join(result, fragment);\n                        } else {\n                            result.push(fragment);\n                        }\n                    }\n                });\n            }\n\n            if (expr.filter) {\n                result = join(result, 'if' + space);\n                fragment = this.generateExpression(expr.filter, Precedence.Sequence, E_TTT);\n                result = join(result, [ '(', fragment, ')' ]);\n            }\n\n            if (!extra.moz.comprehensionExpressionStartsWithAssignment) {\n                fragment = this.generateExpression(expr.body, Precedence.Assignment, E_TTT);\n\n                result = join(result, fragment);\n            }\n\n            result.push((expr.type === Syntax.GeneratorExpression) ? ')' : ']');\n            return result;\n        },\n\n        ComprehensionBlock: function (expr, precedence, flags) {\n            var fragment;\n            if (expr.left.type === Syntax.VariableDeclaration) {\n                fragment = [\n                    expr.left.kind, noEmptySpace(),\n                    this.generateStatement(expr.left.declarations[0], S_FFFF)\n                ];\n            } else {\n                fragment = this.generateExpression(expr.left, Precedence.Call, E_TTT);\n            }\n\n            fragment = join(fragment, expr.of ? 'of' : 'in');\n            fragment = join(fragment, this.generateExpression(expr.right, Precedence.Sequence, E_TTT));\n\n            return [ 'for' + space + '(', fragment, ')' ];\n        },\n\n        SpreadElement: function (expr, precedence, flags) {\n            return [\n                '...',\n                this.generateExpression(expr.argument, Precedence.Assignment, E_TTT)\n            ];\n        },\n\n        TaggedTemplateExpression: function (expr, precedence, flags) {\n            var itemFlags = E_TTF;\n            if (!(flags & F_ALLOW_CALL)) {\n                itemFlags = E_TFF;\n            }\n            var result = [\n                this.generateExpression(expr.tag, Precedence.Call, itemFlags),\n                this.generateExpression(expr.quasi, Precedence.Primary, E_FFT)\n            ];\n            return parenthesize(result, Precedence.TaggedTemplate, precedence);\n        },\n\n        TemplateElement: function (expr, precedence, flags) {\n            // Don't use \"cooked\". Since tagged template can use raw template\n            // representation. So if we do so, it breaks the script semantics.\n            return expr.value.raw;\n        },\n\n        TemplateLiteral: function (expr, precedence, flags) {\n            var result, i, iz;\n            result = [ '`' ];\n            for (i = 0, iz = expr.quasis.length; i < iz; ++i) {\n                result.push(this.generateExpression(expr.quasis[i], Precedence.Primary, E_TTT));\n                if (i + 1 < iz) {\n                    result.push('${' + space);\n                    result.push(this.generateExpression(expr.expressions[i], Precedence.Sequence, E_TTT));\n                    result.push(space + '}');\n                }\n            }\n            result.push('`');\n            return result;\n        },\n\n        ModuleSpecifier: function (expr, precedence, flags) {\n            return this.Literal(expr, precedence, flags);\n        },\n\n        ImportExpression: function(expr, precedence, flag) {\n            return parenthesize([\n                'import(',\n                this.generateExpression(expr.source, Precedence.Assignment, E_TTT),\n                ')'\n            ], Precedence.Call, precedence);\n        },\n\n    };\n\n    merge(CodeGenerator.prototype, CodeGenerator.Expression);\n\n    CodeGenerator.prototype.generateExpression = function (expr, precedence, flags) {\n        var result, type;\n\n        type = expr.type || Syntax.Property;\n\n        if (extra.verbatim && expr.hasOwnProperty(extra.verbatim)) {\n            return generateVerbatim(expr, precedence);\n        }\n\n        result = this[type](expr, precedence, flags);\n\n\n        if (extra.comment) {\n            result = addComments(expr, result);\n        }\n        return toSourceNodeWhenNeeded(result, expr);\n    };\n\n    CodeGenerator.prototype.generateStatement = function (stmt, flags) {\n        var result,\n            fragment;\n\n        result = this[stmt.type](stmt, flags);\n\n        // Attach comments\n\n        if (extra.comment) {\n            result = addComments(stmt, result);\n        }\n\n        fragment = toSourceNodeWhenNeeded(result).toString();\n        if (stmt.type === Syntax.Program && !safeConcatenation && newline === '' &&  fragment.charAt(fragment.length - 1) === '\\n') {\n            result = sourceMap ? toSourceNodeWhenNeeded(result).replaceRight(/\\s+$/, '') : fragment.replace(/\\s+$/, '');\n        }\n\n        return toSourceNodeWhenNeeded(result, stmt);\n    };\n\n    function generateInternal(node) {\n        var codegen;\n\n        codegen = new CodeGenerator();\n        if (isStatement(node)) {\n            return codegen.generateStatement(node, S_TFFF);\n        }\n\n        if (isExpression(node)) {\n            return codegen.generateExpression(node, Precedence.Sequence, E_TTT);\n        }\n\n        throw new Error('Unknown node type: ' + node.type);\n    }\n\n    function generate(node, options) {\n        var defaultOptions = getDefaultOptions(), result, pair;\n\n        if (options != null) {\n            // Obsolete options\n            //\n            //   `options.indent`\n            //   `options.base`\n            //\n            // Instead of them, we can use `option.format.indent`.\n            if (typeof options.indent === 'string') {\n                defaultOptions.format.indent.style = options.indent;\n            }\n            if (typeof options.base === 'number') {\n                defaultOptions.format.indent.base = options.base;\n            }\n            options = updateDeeply(defaultOptions, options);\n            indent = options.format.indent.style;\n            if (typeof options.base === 'string') {\n                base = options.base;\n            } else {\n                base = stringRepeat(indent, options.format.indent.base);\n            }\n        } else {\n            options = defaultOptions;\n            indent = options.format.indent.style;\n            base = stringRepeat(indent, options.format.indent.base);\n        }\n        json = options.format.json;\n        renumber = options.format.renumber;\n        hexadecimal = json ? false : options.format.hexadecimal;\n        quotes = json ? 'double' : options.format.quotes;\n        escapeless = options.format.escapeless;\n        newline = options.format.newline;\n        space = options.format.space;\n        if (options.format.compact) {\n            newline = space = indent = base = '';\n        }\n        parentheses = options.format.parentheses;\n        semicolons = options.format.semicolons;\n        safeConcatenation = options.format.safeConcatenation;\n        directive = options.directive;\n        parse = json ? null : options.parse;\n        sourceMap = options.sourceMap;\n        sourceCode = options.sourceCode;\n        preserveBlankLines = options.format.preserveBlankLines && sourceCode !== null;\n        extra = options;\n\n        if (sourceMap) {\n            if (!exports.browser) {\n                // We assume environment is node.js\n                // And prevent from including source-map by browserify\n                SourceNode = require('source-map').SourceNode;\n            } else {\n                SourceNode = global.sourceMap.SourceNode;\n            }\n        }\n\n        result = generateInternal(node);\n\n        if (!sourceMap) {\n            pair = {code: result.toString(), map: null};\n            return options.sourceMapWithCode ? pair : pair.code;\n        }\n\n\n        pair = result.toStringWithSourceMap({\n            file: options.file,\n            sourceRoot: options.sourceMapRoot\n        });\n\n        if (options.sourceContent) {\n            pair.map.setSourceContent(options.sourceMap,\n                                      options.sourceContent);\n        }\n\n        if (options.sourceMapWithCode) {\n            return pair;\n        }\n\n        return pair.map.toString();\n    }\n\n    FORMAT_MINIFY = {\n        indent: {\n            style: '',\n            base: 0\n        },\n        renumber: true,\n        hexadecimal: true,\n        quotes: 'auto',\n        escapeless: true,\n        compact: true,\n        parentheses: false,\n        semicolons: false\n    };\n\n    FORMAT_DEFAULTS = getDefaultOptions().format;\n\n    exports.version = require('./package.json').version;\n    exports.generate = generate;\n    exports.attachComments = estraverse.attachComments;\n    exports.Precedence = updateDeeply({}, Precedence);\n    exports.browser = false;\n    exports.FORMAT_MINIFY = FORMAT_MINIFY;\n    exports.FORMAT_DEFAULTS = FORMAT_DEFAULTS;\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "var unparse = require('escodegen').generate;\n\nmodule.exports = function (ast, vars) {\n    if (!vars) vars = {};\n    var FAIL = {};\n    \n    var result = (function walk (node, scopeVars) {\n        if (node.type === 'Literal') {\n            return node.value;\n        }\n        else if (node.type === 'UnaryExpression'){\n            var val = walk(node.argument)\n            if (node.operator === '+') return +val\n            if (node.operator === '-') return -val\n            if (node.operator === '~') return ~val\n            if (node.operator === '!') return !val\n            return FAIL\n        }\n        else if (node.type === 'ArrayExpression') {\n            var xs = [];\n            for (var i = 0, l = node.elements.length; i < l; i++) {\n                var x = walk(node.elements[i]);\n                if (x === FAIL) return FAIL;\n                xs.push(x);\n            }\n            return xs;\n        }\n        else if (node.type === 'ObjectExpression') {\n            var obj = {};\n            for (var i = 0; i < node.properties.length; i++) {\n                var prop = node.properties[i];\n                var value = prop.value === null\n                    ? prop.value\n                    : walk(prop.value)\n                ;\n                if (value === FAIL) return FAIL;\n                obj[prop.key.value || prop.key.name] = value;\n            }\n            return obj;\n        }\n        else if (node.type === 'BinaryExpression' ||\n                 node.type === 'LogicalExpression') {\n            var l = walk(node.left);\n            if (l === FAIL) return FAIL;\n            var r = walk(node.right);\n            if (r === FAIL) return FAIL;\n            \n            var op = node.operator;\n            if (op === '==') return l == r;\n            if (op === '===') return l === r;\n            if (op === '!=') return l != r;\n            if (op === '!==') return l !== r;\n            if (op === '+') return l + r;\n            if (op === '-') return l - r;\n            if (op === '*') return l * r;\n            if (op === '/') return l / r;\n            if (op === '%') return l % r;\n            if (op === '<') return l < r;\n            if (op === '<=') return l <= r;\n            if (op === '>') return l > r;\n            if (op === '>=') return l >= r;\n            if (op === '|') return l | r;\n            if (op === '&') return l & r;\n            if (op === '^') return l ^ r;\n            if (op === '&&') return l && r;\n            if (op === '||') return l || r;\n            \n            return FAIL;\n        }\n        else if (node.type === 'Identifier') {\n            if ({}.hasOwnProperty.call(vars, node.name)) {\n                return vars[node.name];\n            }\n            else return FAIL;\n        }\n        else if (node.type === 'ThisExpression') {\n            if ({}.hasOwnProperty.call(vars, 'this')) {\n                return vars['this'];\n            }\n            else return FAIL;\n        }\n        else if (node.type === 'CallExpression') {\n            var callee = walk(node.callee);\n            if (callee === FAIL) return FAIL;\n            if (typeof callee !== 'function') return FAIL;\n            \n            var ctx = node.callee.object ? walk(node.callee.object) : FAIL;\n            if (ctx === FAIL) ctx = null;\n\n            var args = [];\n            for (var i = 0, l = node.arguments.length; i < l; i++) {\n                var x = walk(node.arguments[i]);\n                if (x === FAIL) return FAIL;\n                args.push(x);\n            }\n            return callee.apply(ctx, args);\n        }\n        else if (node.type === 'MemberExpression') {\n            var obj = walk(node.object);\n            // do not allow access to methods on Function \n            if((obj === FAIL) || (typeof obj == 'function')){\n                return FAIL;\n            }\n            if (node.property.type === 'Identifier') {\n                return obj[node.property.name];\n            }\n            var prop = walk(node.property);\n            if (prop === FAIL) return FAIL;\n            return obj[prop];\n        }\n        else if (node.type === 'ConditionalExpression') {\n            var val = walk(node.test)\n            if (val === FAIL) return FAIL;\n            return val ? walk(node.consequent) : walk(node.alternate)\n        }\n        else if (node.type === 'ExpressionStatement') {\n            var val = walk(node.expression)\n            if (val === FAIL) return FAIL;\n            return val;\n        }\n        else if (node.type === 'ReturnStatement') {\n            return walk(node.argument)\n        }\n        else if (node.type === 'FunctionExpression') {\n            \n            var bodies = node.body.body;\n            \n            // Create a \"scope\" for our arguments\n            var oldVars = {};\n            Object.keys(vars).forEach(function(element){\n                oldVars[element] = vars[element];\n            })\n\n            for(var i=0; i<node.params.length; i++){\n                var key = node.params[i];\n                if(key.type == 'Identifier'){\n                  vars[key.name] = null;\n                }\n                else return FAIL;\n            }\n            for(var i in bodies){\n                if(walk(bodies[i]) === FAIL){\n                    return FAIL;\n                }\n            }\n            // restore the vars and scope after we walk\n            vars = oldVars;\n            \n            var keys = Object.keys(vars);\n            var vals = keys.map(function(key) {\n                return vars[key];\n            });\n            return Function(keys.join(', '), 'return ' + unparse(node)).apply(null, vals);\n        }\n        else if (node.type === 'TemplateLiteral') {\n            var str = '';\n            for (var i = 0; i < node.expressions.length; i++) {\n                str += walk(node.quasis[i]);\n                str += walk(node.expressions[i]);\n            }\n            str += walk(node.quasis[i]);\n            return str;\n        }\n        else if (node.type === 'TaggedTemplateExpression') {\n            var tag = walk(node.tag);\n            var quasi = node.quasi;\n            var strings = quasi.quasis.map(walk);\n            var values = quasi.expressions.map(walk);\n            return tag.apply(null, [strings].concat(values));\n        }\n        else if (node.type === 'TemplateElement') {\n            return node.value.cooked;\n        }\n        else return FAIL;\n    })(ast);\n    \n    return result === FAIL ? undefined : result;\n};\n", "/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,6],$V2=[1,7],$V3=[1,8],$V4=[1,9],$V5=[1,18],$V6=[1,19],$V7=[1,20],$V8=[1,12,14,22],$V9=[1,29],$Va=[1,30],$Vb=[1,33],$Vc=[1,35],$Vd=[1,31],$Ve=[1,36],$Vf=[1,37],$Vg=[24,28];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"JSON_PATH\":3,\"DOLLAR\":4,\"PATH_COMPONENTS\":5,\"LEADING_CHILD_MEMBER_EXPRESSION\":6,\"PATH_COMPONENT\":7,\"MEMBER_COMPONENT\":8,\"SUBSCRIPT_COMPONENT\":9,\"CHILD_MEMBER_COMPONENT\":10,\"DESCENDANT_MEMBER_COMPONENT\":11,\"DOT\":12,\"MEMBER_EXPRESSION\":13,\"DOT_DOT\":14,\"STAR\":15,\"IDENTIFIER\":16,\"SCRIPT_EXPRESSION\":17,\"INTEGER\":18,\"END\":19,\"CHILD_SUBSCRIPT_COMPONENT\":20,\"DESCENDANT_SUBSCRIPT_COMPONENT\":21,\"[\":22,\"SUBSCRIPT\":23,\"]\":24,\"SUBSCRIPT_EXPRESSION\":25,\"SUBSCRIPT_EXPRESSION_LIST\":26,\"SUBSCRIPT_EXPRESSION_LISTABLE\":27,\",\":28,\"STRING_LITERAL\":29,\"ARRAY_SLICE\":30,\"FILTER_EXPRESSION\":31,\"QQ_STRING\":32,\"Q_STRING\":33,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"DOLLAR\",12:\"DOT\",14:\"DOT_DOT\",15:\"STAR\",16:\"IDENTIFIER\",17:\"SCRIPT_EXPRESSION\",18:\"INTEGER\",19:\"END\",22:\"[\",24:\"]\",28:\",\",30:\"ARRAY_SLICE\",31:\"FILTER_EXPRESSION\",32:\"QQ_STRING\",33:\"Q_STRING\"},\nproductions_: [0,[3,1],[3,2],[3,1],[3,2],[5,1],[5,2],[7,1],[7,1],[8,1],[8,1],[10,2],[6,1],[11,2],[13,1],[13,1],[13,1],[13,1],[13,1],[9,1],[9,1],[20,3],[21,4],[23,1],[23,1],[26,1],[26,3],[27,1],[27,1],[27,1],[25,1],[25,1],[25,1],[29,1],[29,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\nif (!yy.ast) {\r\n    yy.ast = _ast;\r\n    _ast.initialize();\r\n}\r\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nyy.ast.set({ expression: { type: \"root\", value: $$[$0] } }); yy.ast.unshift(); return yy.ast.yield()\nbreak;\ncase 2:\nyy.ast.set({ expression: { type: \"root\", value: $$[$0-1] } }); yy.ast.unshift(); return yy.ast.yield()\nbreak;\ncase 3:\nyy.ast.unshift(); return yy.ast.yield()\nbreak;\ncase 4:\nyy.ast.set({ operation: \"member\", scope: \"child\", expression: { type: \"identifier\", value: $$[$0-1] }}); yy.ast.unshift(); return yy.ast.yield()\nbreak;\ncase 5: case 6: case 11: case 13: case 18: case 21: case 22: case 23:\n\nbreak;\ncase 7:\nyy.ast.set({ operation: \"member\" }); yy.ast.push()\nbreak;\ncase 8:\nyy.ast.set({ operation: \"subscript\" }); yy.ast.push() \nbreak;\ncase 9: case 19:\nyy.ast.set({ scope: \"child\" })\nbreak;\ncase 10: case 20:\nyy.ast.set({ scope: \"descendant\" })\nbreak;\ncase 12:\nyy.ast.set({ scope: \"child\", operation: \"member\" })\nbreak;\ncase 14:\nyy.ast.set({ expression: { type: \"wildcard\", value: $$[$0] } })\nbreak;\ncase 15:\nyy.ast.set({ expression: { type: \"identifier\", value: $$[$0] } })\nbreak;\ncase 16:\nyy.ast.set({ expression: { type: \"script_expression\", value: $$[$0] } })\nbreak;\ncase 17:\nyy.ast.set({ expression: { type: \"numeric_literal\", value: parseInt($$[$0]) } })\nbreak;\ncase 24:\n$$[$0].length > 1? yy.ast.set({ expression: { type: \"union\", value: $$[$0] } }) : this.$ = $$[$0]\nbreak;\ncase 25:\nthis.$ = [$$[$0]]\nbreak;\ncase 26:\nthis.$ = $$[$0-2].concat($$[$0])\nbreak;\ncase 27:\nthis.$ = { expression: { type: \"numeric_literal\", value: parseInt($$[$0]) } }; yy.ast.set(this.$)\nbreak;\ncase 28:\nthis.$ = { expression: { type: \"string_literal\", value: $$[$0] } }; yy.ast.set(this.$)\nbreak;\ncase 29:\nthis.$ = { expression: { type: \"slice\", value: $$[$0] } }; yy.ast.set(this.$)\nbreak;\ncase 30:\nthis.$ = { expression: { type: \"wildcard\", value: $$[$0] } }; yy.ast.set(this.$)\nbreak;\ncase 31:\nthis.$ = { expression: { type: \"script_expression\", value: $$[$0] } }; yy.ast.set(this.$)\nbreak;\ncase 32:\nthis.$ = { expression: { type: \"filter_expression\", value: $$[$0] } }; yy.ast.set(this.$)\nbreak;\ncase 33: case 34:\nthis.$ = $$[$0]\nbreak;\n}\n},\ntable: [{3:1,4:[1,2],6:3,13:4,15:$V0,16:$V1,17:$V2,18:$V3,19:$V4},{1:[3]},{1:[2,1],5:10,7:11,8:12,9:13,10:14,11:15,12:$V5,14:$V6,20:16,21:17,22:$V7},{1:[2,3],5:21,7:11,8:12,9:13,10:14,11:15,12:$V5,14:$V6,20:16,21:17,22:$V7},o($V8,[2,12]),o($V8,[2,14]),o($V8,[2,15]),o($V8,[2,16]),o($V8,[2,17]),o($V8,[2,18]),{1:[2,2],7:22,8:12,9:13,10:14,11:15,12:$V5,14:$V6,20:16,21:17,22:$V7},o($V8,[2,5]),o($V8,[2,7]),o($V8,[2,8]),o($V8,[2,9]),o($V8,[2,10]),o($V8,[2,19]),o($V8,[2,20]),{13:23,15:$V0,16:$V1,17:$V2,18:$V3,19:$V4},{13:24,15:$V0,16:$V1,17:$V2,18:$V3,19:$V4,22:[1,25]},{15:$V9,17:$Va,18:$Vb,23:26,25:27,26:28,27:32,29:34,30:$Vc,31:$Vd,32:$Ve,33:$Vf},{1:[2,4],7:22,8:12,9:13,10:14,11:15,12:$V5,14:$V6,20:16,21:17,22:$V7},o($V8,[2,6]),o($V8,[2,11]),o($V8,[2,13]),{15:$V9,17:$Va,18:$Vb,23:38,25:27,26:28,27:32,29:34,30:$Vc,31:$Vd,32:$Ve,33:$Vf},{24:[1,39]},{24:[2,23]},{24:[2,24],28:[1,40]},{24:[2,30]},{24:[2,31]},{24:[2,32]},o($Vg,[2,25]),o($Vg,[2,27]),o($Vg,[2,28]),o($Vg,[2,29]),o($Vg,[2,33]),o($Vg,[2,34]),{24:[1,41]},o($V8,[2,21]),{18:$Vb,27:42,29:34,30:$Vc,32:$Ve,33:$Vf},o($V8,[2,22]),o($Vg,[2,26])],\ndefaultActions: {27:[2,23],29:[2,30],30:[2,31],31:[2,32]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\nvar _ast = {\r\n\r\n  initialize: function() {\r\n    this._nodes = [];\r\n    this._node = {};\r\n    this._stash = [];\r\n  },\r\n\r\n  set: function(props) {\r\n    for (var k in props) this._node[k] = props[k];\r\n    return this._node;\r\n  },\r\n\r\n  node: function(obj) {\r\n    if (arguments.length) this._node = obj;\r\n    return this._node;\r\n  },\r\n\r\n  push: function() {\r\n    this._nodes.push(this._node);\r\n    this._node = {};\r\n  },\r\n\r\n  unshift: function() {\r\n    this._nodes.unshift(this._node);\r\n    this._node = {};\r\n  },\r\n\r\n  yield: function() {\r\n    var _nodes = this._nodes;\r\n    this.initialize();\r\n    return _nodes;\r\n  }\r\n};\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 4\nbreak;\ncase 1:return 14\nbreak;\ncase 2:return 12\nbreak;\ncase 3:return 15\nbreak;\ncase 4:return 16\nbreak;\ncase 5:return 22\nbreak;\ncase 6:return 24\nbreak;\ncase 7:return 28\nbreak;\ncase 8:return 30\nbreak;\ncase 9:return 18\nbreak;\ncase 10:yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 32;\nbreak;\ncase 11:yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 33;\nbreak;\ncase 12:return 17\nbreak;\ncase 13:return 31\nbreak;\n}\n},\nrules: [/^(?:\\$)/,/^(?:\\.\\.)/,/^(?:\\.)/,/^(?:\\*)/,/^(?:[a-zA-Z_]+[a-zA-Z0-9_]*)/,/^(?:\\[)/,/^(?:\\])/,/^(?:,)/,/^(?:((-?(?:0|[1-9][0-9]*)))?\\:((-?(?:0|[1-9][0-9]*)))?(\\:((-?(?:0|[1-9][0-9]*)))?)?)/,/^(?:(-?(?:0|[1-9][0-9]*)))/,/^(?:\"(?:\\\\[\"bfnrt\\/\\\\]|\\\\u[a-fA-F0-9]{4}|[^\"\\\\])*\")/,/^(?:'(?:\\\\['bfnrt\\/\\\\]|\\\\u[a-fA-F0-9]{4}|[^'\\\\])*')/,/^(?:\\(.+?\\)(?=\\]))/,/^(?:\\?\\(.+?\\)(?=\\]))/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\n\n}", "/*\r\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\r\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\r\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\r\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\r\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\r\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\r\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\r\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\r\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\r\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\r\n\r\n  Redistribution and use in source and binary forms, with or without\r\n  modification, are permitted provided that the following conditions are met:\r\n\r\n    * Redistributions of source code must retain the above copyright\r\n      notice, this list of conditions and the following disclaimer.\r\n    * Redistributions in binary form must reproduce the above copyright\r\n      notice, this list of conditions and the following disclaimer in the\r\n      documentation and/or other materials provided with the distribution.\r\n\r\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\r\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n/*jslint bitwise:true plusplus:true */\r\n/*global esprima:true, define:true, exports:true, window: true,\r\nthrowErrorTolerant: true,\r\nthrowError: true, generateStatement: true, peek: true,\r\nparseAssignmentExpression: true, parseBlock: true, parseExpression: true,\r\nparseFunctionDeclaration: true, parseFunctionExpression: true,\r\nparseFunctionSourceElements: true, parseVariableIdentifier: true,\r\nparseLeftHandSideExpression: true,\r\nparseUnaryExpression: true,\r\nparseStatement: true, parseSourceElement: true */\r\n\r\nvar Token,\r\n    TokenName,\r\n    FnExprTokens,\r\n    PropertyKind,\r\n    Messages,\r\n    Regex,\r\n    SyntaxTreeDelegate,\r\n    source,\r\n    strict,\r\n    index,\r\n    lineNumber,\r\n    lineStart,\r\n    length,\r\n    delegate,\r\n    lookahead,\r\n    state,\r\n    extra;\r\n\r\nToken = {\r\n    BooleanLiteral: 1,\r\n    EOF: 2,\r\n    Identifier: 3,\r\n    Keyword: 4,\r\n    NullLiteral: 5,\r\n    NumericLiteral: 6,\r\n    Punctuator: 7,\r\n    StringLiteral: 8,\r\n    RegularExpression: 9\r\n};\r\n\r\nTokenName = {};\r\nTokenName[Token.BooleanLiteral] = 'Boolean';\r\nTokenName[Token.EOF] = '<end>';\r\nTokenName[Token.Identifier] = 'Identifier';\r\nTokenName[Token.Keyword] = 'Keyword';\r\nTokenName[Token.NullLiteral] = 'Null';\r\nTokenName[Token.NumericLiteral] = 'Numeric';\r\nTokenName[Token.Punctuator] = 'Punctuator';\r\nTokenName[Token.StringLiteral] = 'String';\r\nTokenName[Token.RegularExpression] = 'RegularExpression';\r\n\r\n// A function following one of those tokens is an expression.\r\nFnExprTokens = ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\r\n                'return', 'case', 'delete', 'throw', 'void',\r\n                // assignment operators\r\n                '=', '+=', '-=', '*=', '/=', '%=', '<<=', '>>=', '>>>=',\r\n                '&=', '|=', '^=', ',',\r\n                // binary/unary operators\r\n                '+', '-', '*', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\r\n                '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\r\n                '<=', '<', '>', '!=', '!=='];\r\n\r\nexport const Syntax = {\r\n    AssignmentExpression: 'AssignmentExpression',\r\n    ArrayExpression: 'ArrayExpression',\r\n    BlockStatement: 'BlockStatement',\r\n    BinaryExpression: 'BinaryExpression',\r\n    BreakStatement: 'BreakStatement',\r\n    CallExpression: 'CallExpression',\r\n    CatchClause: 'CatchClause',\r\n    ConditionalExpression: 'ConditionalExpression',\r\n    ContinueStatement: 'ContinueStatement',\r\n    DoWhileStatement: 'DoWhileStatement',\r\n    DebuggerStatement: 'DebuggerStatement',\r\n    EmptyStatement: 'EmptyStatement',\r\n    ExpressionStatement: 'ExpressionStatement',\r\n    ForStatement: 'ForStatement',\r\n    ForInStatement: 'ForInStatement',\r\n    FunctionDeclaration: 'FunctionDeclaration',\r\n    FunctionExpression: 'FunctionExpression',\r\n    Identifier: 'Identifier',\r\n    IfStatement: 'IfStatement',\r\n    Literal: 'Literal',\r\n    LabeledStatement: 'LabeledStatement',\r\n    LogicalExpression: 'LogicalExpression',\r\n    MemberExpression: 'MemberExpression',\r\n    NewExpression: 'NewExpression',\r\n    ObjectExpression: 'ObjectExpression',\r\n    Program: 'Program',\r\n    Property: 'Property',\r\n    ReturnStatement: 'ReturnStatement',\r\n    SequenceExpression: 'SequenceExpression',\r\n    SwitchStatement: 'SwitchStatement',\r\n    SwitchCase: 'SwitchCase',\r\n    ThisExpression: 'ThisExpression',\r\n    ThrowStatement: 'ThrowStatement',\r\n    TryStatement: 'TryStatement',\r\n    UnaryExpression: 'UnaryExpression',\r\n    UpdateExpression: 'UpdateExpression',\r\n    VariableDeclaration: 'VariableDeclaration',\r\n    VariableDeclarator: 'VariableDeclarator',\r\n    WhileStatement: 'WhileStatement',\r\n    WithStatement: 'WithStatement'\r\n};\r\n\r\nPropertyKind = {\r\n    Data: 1,\r\n    Get: 2,\r\n    Set: 4\r\n};\r\n\r\n// Error messages should be identical to V8.\r\nMessages = {\r\n    UnexpectedToken:  'Unexpected token %0',\r\n    UnexpectedNumber:  'Unexpected number',\r\n    UnexpectedString:  'Unexpected string',\r\n    UnexpectedIdentifier:  'Unexpected identifier',\r\n    UnexpectedReserved:  'Unexpected reserved word',\r\n    UnexpectedEOS:  'Unexpected end of input',\r\n    NewlineAfterThrow:  'Illegal newline after throw',\r\n    InvalidRegExp: 'Invalid regular expression',\r\n    UnterminatedRegExp:  'Invalid regular expression: missing /',\r\n    InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\r\n    InvalidLHSInForIn:  'Invalid left-hand side in for-in',\r\n    MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\r\n    NoCatchOrFinally:  'Missing catch or finally after try',\r\n    UnknownLabel: 'Undefined label \\'%0\\'',\r\n    Redeclaration: '%0 \\'%1\\' has already been declared',\r\n    IllegalContinue: 'Illegal continue statement',\r\n    IllegalBreak: 'Illegal break statement',\r\n    IllegalReturn: 'Illegal return statement',\r\n    StrictModeWith:  'Strict mode code may not include a with statement',\r\n    StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\r\n    StrictVarName:  'Variable name may not be eval or arguments in strict mode',\r\n    StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\r\n    StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\r\n    StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\r\n    StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\r\n    StrictDelete:  'Delete of an unqualified identifier in strict mode.',\r\n    StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\r\n    AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\r\n    AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\r\n    StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\r\n    StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\r\n    StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\r\n    StrictReservedWord:  'Use of future reserved word in strict mode'\r\n};\r\n\r\n// See also tools/generate-unicode-regex.py.\r\nRegex = {\r\n    NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\r\n    NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0\\u08A2-\\u08AC\\u08E4-\\u08FE\\u0900-\\u0963\\u0966-\\u096F\\u0971-\\u0977\\u0979-\\u097F\\u0981-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C82\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1D00-\\u1DE6\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA697\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7B\\uAA80-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE26\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\r\n};\r\n\r\n// Ensure the condition is true, otherwise throw an error.\r\n// This is only to have a better contract semantic, i.e. another safety net\r\n// to catch a logic error. The condition shall be fulfilled in normal case.\r\n// Do NOT use this to enforce a certain condition on any user input.\r\n\r\nfunction assert(condition, message) {\r\n    /* istanbul ignore if */\r\n    if (!condition) {\r\n        throw new Error('ASSERT: ' + message);\r\n    }\r\n}\r\n\r\nfunction isDecimalDigit(ch) {\r\n    return (ch >= 48 && ch <= 57);   // 0..9\r\n}\r\n\r\nfunction isHexDigit(ch) {\r\n    return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\r\n}\r\n\r\nfunction isOctalDigit(ch) {\r\n    return '01234567'.indexOf(ch) >= 0;\r\n}\r\n\r\n\r\n// 7.2 White Space\r\n\r\nfunction isWhiteSpace(ch) {\r\n    return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\r\n        (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\r\n}\r\n\r\n// 7.3 Line Terminators\r\n\r\nfunction isLineTerminator(ch) {\r\n    return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\r\n}\r\n\r\n// 7.6 Identifier Names and Identifiers\r\n\r\nfunction isIdentifierStart(ch) {\r\n    return (ch == 0x40) ||                    // @ (for jsonpath)\r\n        (ch === 0x24) || (ch === 0x5F) ||     // $ (dollar) and _ (underscore)\r\n        (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\r\n        (ch >= 0x61 && ch <= 0x7A) ||         // a..z\r\n        (ch === 0x5C) ||                      // \\ (backslash)\r\n        ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\r\n}\r\n\r\nfunction isIdentifierPart(ch) {\r\n    return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\r\n        (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\r\n        (ch >= 0x61 && ch <= 0x7A) ||         // a..z\r\n        (ch >= 0x30 && ch <= 0x39) ||         // 0..9\r\n        (ch === 0x5C) ||                      // \\ (backslash)\r\n        ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\r\n}\r\n\r\n// 7.6.1.2 Future Reserved Words\r\n\r\nfunction isFutureReservedWord(id) {\r\n    switch (id) {\r\n    case 'class':\r\n    case 'enum':\r\n    case 'export':\r\n    case 'extends':\r\n    case 'import':\r\n    case 'super':\r\n        return true;\r\n    default:\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction isStrictModeReservedWord(id) {\r\n    switch (id) {\r\n    case 'implements':\r\n    case 'interface':\r\n    case 'package':\r\n    case 'private':\r\n    case 'protected':\r\n    case 'public':\r\n    case 'static':\r\n    case 'yield':\r\n    case 'let':\r\n        return true;\r\n    default:\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction isRestrictedWord(id) {\r\n    return id === 'eval' || id === 'arguments';\r\n}\r\n\r\n// 7.6.1.1 Keywords\r\n\r\nfunction isKeyword(id) {\r\n    if (strict && isStrictModeReservedWord(id)) {\r\n        return true;\r\n    }\r\n\r\n    // 'const' is specialized as Keyword in V8.\r\n    // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\r\n    // Some others are from future reserved words.\r\n\r\n    switch (id.length) {\r\n    case 2:\r\n        return (id === 'if') || (id === 'in') || (id === 'do');\r\n    case 3:\r\n        return (id === 'var') || (id === 'for') || (id === 'new') ||\r\n            (id === 'try') || (id === 'let');\r\n    case 4:\r\n        return (id === 'this') || (id === 'else') || (id === 'case') ||\r\n            (id === 'void') || (id === 'with') || (id === 'enum');\r\n    case 5:\r\n        return (id === 'while') || (id === 'break') || (id === 'catch') ||\r\n            (id === 'throw') || (id === 'const') || (id === 'yield') ||\r\n            (id === 'class') || (id === 'super');\r\n    case 6:\r\n        return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\r\n            (id === 'switch') || (id === 'export') || (id === 'import');\r\n    case 7:\r\n        return (id === 'default') || (id === 'finally') || (id === 'extends');\r\n    case 8:\r\n        return (id === 'function') || (id === 'continue') || (id === 'debugger');\r\n    case 10:\r\n        return (id === 'instanceof');\r\n    default:\r\n        return false;\r\n    }\r\n}\r\n\r\n// 7.4 Comments\r\n\r\nfunction addComment(type, value, start, end, loc) {\r\n    var comment, attacher;\r\n\r\n    assert(typeof start === 'number', 'Comment must have valid position');\r\n\r\n    // Because the way the actual token is scanned, often the comments\r\n    // (if any) are skipped twice during the lexical analysis.\r\n    // Thus, we need to skip adding a comment if the comment array already\r\n    // handled it.\r\n    if (state.lastCommentStart >= start) {\r\n        return;\r\n    }\r\n    state.lastCommentStart = start;\r\n\r\n    comment = {\r\n        type: type,\r\n        value: value\r\n    };\r\n    if (extra.range) {\r\n        comment.range = [start, end];\r\n    }\r\n    if (extra.loc) {\r\n        comment.loc = loc;\r\n    }\r\n    extra.comments.push(comment);\r\n    if (extra.attachComment) {\r\n        extra.leadingComments.push(comment);\r\n        extra.trailingComments.push(comment);\r\n    }\r\n}\r\n\r\nfunction skipSingleLineComment(offset) {\r\n    var start, loc, ch, comment;\r\n\r\n    start = index - offset;\r\n    loc = {\r\n        start: {\r\n            line: lineNumber,\r\n            column: index - lineStart - offset\r\n        }\r\n    };\r\n\r\n    while (index < length) {\r\n        ch = source.charCodeAt(index);\r\n        ++index;\r\n        if (isLineTerminator(ch)) {\r\n            if (extra.comments) {\r\n                comment = source.slice(start + offset, index - 1);\r\n                loc.end = {\r\n                    line: lineNumber,\r\n                    column: index - lineStart - 1\r\n                };\r\n                addComment('Line', comment, start, index - 1, loc);\r\n            }\r\n            if (ch === 13 && source.charCodeAt(index) === 10) {\r\n                ++index;\r\n            }\r\n            ++lineNumber;\r\n            lineStart = index;\r\n            return;\r\n        }\r\n    }\r\n\r\n    if (extra.comments) {\r\n        comment = source.slice(start + offset, index);\r\n        loc.end = {\r\n            line: lineNumber,\r\n            column: index - lineStart\r\n        };\r\n        addComment('Line', comment, start, index, loc);\r\n    }\r\n}\r\n\r\nfunction skipMultiLineComment() {\r\n    var start, loc, ch, comment;\r\n\r\n    if (extra.comments) {\r\n        start = index - 2;\r\n        loc = {\r\n            start: {\r\n                line: lineNumber,\r\n                column: index - lineStart - 2\r\n            }\r\n        };\r\n    }\r\n\r\n    while (index < length) {\r\n        ch = source.charCodeAt(index);\r\n        if (isLineTerminator(ch)) {\r\n            if (ch === 0x0D && source.charCodeAt(index + 1) === 0x0A) {\r\n                ++index;\r\n            }\r\n            ++lineNumber;\r\n            ++index;\r\n            lineStart = index;\r\n            if (index >= length) {\r\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\r\n            }\r\n        } else if (ch === 0x2A) {\r\n            // Block comment ends with '*/'.\r\n            if (source.charCodeAt(index + 1) === 0x2F) {\r\n                ++index;\r\n                ++index;\r\n                if (extra.comments) {\r\n                    comment = source.slice(start + 2, index - 2);\r\n                    loc.end = {\r\n                        line: lineNumber,\r\n                        column: index - lineStart\r\n                    };\r\n                    addComment('Block', comment, start, index, loc);\r\n                }\r\n                return;\r\n            }\r\n            ++index;\r\n        } else {\r\n            ++index;\r\n        }\r\n    }\r\n\r\n    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\r\n}\r\n\r\nfunction skipComment() {\r\n    var ch, start;\r\n\r\n    start = (index === 0);\r\n    while (index < length) {\r\n        ch = source.charCodeAt(index);\r\n\r\n        if (isWhiteSpace(ch)) {\r\n            ++index;\r\n        } else if (isLineTerminator(ch)) {\r\n            ++index;\r\n            if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\r\n                ++index;\r\n            }\r\n            ++lineNumber;\r\n            lineStart = index;\r\n            start = true;\r\n        } else if (ch === 0x2F) { // U+002F is '/'\r\n            ch = source.charCodeAt(index + 1);\r\n            if (ch === 0x2F) {\r\n                ++index;\r\n                ++index;\r\n                skipSingleLineComment(2);\r\n                start = true;\r\n            } else if (ch === 0x2A) {  // U+002A is '*'\r\n                ++index;\r\n                ++index;\r\n                skipMultiLineComment();\r\n            } else {\r\n                break;\r\n            }\r\n        } else if (start && ch === 0x2D) { // U+002D is '-'\r\n            // U+003E is '>'\r\n            if ((source.charCodeAt(index + 1) === 0x2D) && (source.charCodeAt(index + 2) === 0x3E)) {\r\n                // '-->' is a single-line comment\r\n                index += 3;\r\n                skipSingleLineComment(3);\r\n            } else {\r\n                break;\r\n            }\r\n        } else if (ch === 0x3C) { // U+003C is '<'\r\n            if (source.slice(index + 1, index + 4) === '!--') {\r\n                ++index; // `<`\r\n                ++index; // `!`\r\n                ++index; // `-`\r\n                ++index; // `-`\r\n                skipSingleLineComment(4);\r\n            } else {\r\n                break;\r\n            }\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nfunction scanHexEscape(prefix) {\r\n    var i, len, ch, code = 0;\r\n\r\n    len = (prefix === 'u') ? 4 : 2;\r\n    for (i = 0; i < len; ++i) {\r\n        if (index < length && isHexDigit(source[index])) {\r\n            ch = source[index++];\r\n            code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n    return String.fromCharCode(code);\r\n}\r\n\r\nfunction getEscapedIdentifier() {\r\n    var ch, id;\r\n\r\n    ch = source.charCodeAt(index++);\r\n    id = String.fromCharCode(ch);\r\n\r\n    // '\\u' (U+005C, U+0075) denotes an escaped character.\r\n    if (ch === 0x5C) {\r\n        if (source.charCodeAt(index) !== 0x75) {\r\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\r\n        }\r\n        ++index;\r\n        ch = scanHexEscape('u');\r\n        if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\r\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\r\n        }\r\n        id = ch;\r\n    }\r\n\r\n    while (index < length) {\r\n        ch = source.charCodeAt(index);\r\n        if (!isIdentifierPart(ch)) {\r\n            break;\r\n        }\r\n        ++index;\r\n        id += String.fromCharCode(ch);\r\n\r\n        // '\\u' (U+005C, U+0075) denotes an escaped character.\r\n        if (ch === 0x5C) {\r\n            id = id.substr(0, id.length - 1);\r\n            if (source.charCodeAt(index) !== 0x75) {\r\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\r\n            }\r\n            ++index;\r\n            ch = scanHexEscape('u');\r\n            if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\r\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\r\n            }\r\n            id += ch;\r\n        }\r\n    }\r\n\r\n    return id;\r\n}\r\n\r\nfunction getIdentifier() {\r\n    var start, ch;\r\n\r\n    start = index++;\r\n    while (index < length) {\r\n        ch = source.charCodeAt(index);\r\n        if (ch === 0x5C) {\r\n            // Blackslash (U+005C) marks Unicode escape sequence.\r\n            index = start;\r\n            return getEscapedIdentifier();\r\n        }\r\n        if (isIdentifierPart(ch)) {\r\n            ++index;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return source.slice(start, index);\r\n}\r\n\r\nfunction scanIdentifier() {\r\n    var start, id, type;\r\n\r\n    start = index;\r\n\r\n    // Backslash (U+005C) starts an escaped character.\r\n    id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\r\n\r\n    // There is no keyword or literal with only one character.\r\n    // Thus, it must be an identifier.\r\n    if (id.length === 1) {\r\n        type = Token.Identifier;\r\n    } else if (isKeyword(id)) {\r\n        type = Token.Keyword;\r\n    } else if (id === 'null') {\r\n        type = Token.NullLiteral;\r\n    } else if (id === 'true' || id === 'false') {\r\n        type = Token.BooleanLiteral;\r\n    } else {\r\n        type = Token.Identifier;\r\n    }\r\n\r\n    return {\r\n        type: type,\r\n        value: id,\r\n        lineNumber: lineNumber,\r\n        lineStart: lineStart,\r\n        start: start,\r\n        end: index\r\n    };\r\n}\r\n\r\n\r\n// 7.7 Punctuators\r\n\r\nfunction scanPunctuator() {\r\n    var start = index,\r\n        code = source.charCodeAt(index),\r\n        code2,\r\n        ch1 = source[index],\r\n        ch2,\r\n        ch3,\r\n        ch4;\r\n\r\n    switch (code) {\r\n\r\n    // Check for most common single-character punctuators.\r\n    case 0x2E:  // . dot\r\n    case 0x28:  // ( open bracket\r\n    case 0x29:  // ) close bracket\r\n    case 0x3B:  // ; semicolon\r\n    case 0x2C:  // , comma\r\n    case 0x7B:  // { open curly brace\r\n    case 0x7D:  // } close curly brace\r\n    case 0x5B:  // [\r\n    case 0x5D:  // ]\r\n    case 0x3A:  // :\r\n    case 0x3F:  // ?\r\n    case 0x7E:  // ~\r\n        ++index;\r\n        if (extra.tokenize) {\r\n            if (code === 0x28) {\r\n                extra.openParenToken = extra.tokens.length;\r\n            } else if (code === 0x7B) {\r\n                extra.openCurlyToken = extra.tokens.length;\r\n            }\r\n        }\r\n        return {\r\n            type: Token.Punctuator,\r\n            value: String.fromCharCode(code),\r\n            lineNumber: lineNumber,\r\n            lineStart: lineStart,\r\n            start: start,\r\n            end: index\r\n        };\r\n\r\n    default:\r\n        code2 = source.charCodeAt(index + 1);\r\n\r\n        // '=' (U+003D) marks an assignment or comparison operator.\r\n        if (code2 === 0x3D) {\r\n            switch (code) {\r\n            case 0x2B:  // +\r\n            case 0x2D:  // -\r\n            case 0x2F:  // /\r\n            case 0x3C:  // <\r\n            case 0x3E:  // >\r\n            case 0x5E:  // ^\r\n            case 0x7C:  // |\r\n            case 0x25:  // %\r\n            case 0x26:  // &\r\n            case 0x2A:  // *\r\n                index += 2;\r\n                return {\r\n                    type: Token.Punctuator,\r\n                    value: String.fromCharCode(code) + String.fromCharCode(code2),\r\n                    lineNumber: lineNumber,\r\n                    lineStart: lineStart,\r\n                    start: start,\r\n                    end: index\r\n                };\r\n\r\n            case 0x21: // !\r\n            case 0x3D: // =\r\n                index += 2;\r\n\r\n                // !== and ===\r\n                if (source.charCodeAt(index) === 0x3D) {\r\n                    ++index;\r\n                }\r\n                return {\r\n                    type: Token.Punctuator,\r\n                    value: source.slice(start, index),\r\n                    lineNumber: lineNumber,\r\n                    lineStart: lineStart,\r\n                    start: start,\r\n                    end: index\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    // 4-character punctuator: >>>=\r\n\r\n    ch4 = source.substr(index, 4);\r\n\r\n    if (ch4 === '>>>=') {\r\n        index += 4;\r\n        return {\r\n            type: Token.Punctuator,\r\n            value: ch4,\r\n            lineNumber: lineNumber,\r\n            lineStart: lineStart,\r\n            start: start,\r\n            end: index\r\n        };\r\n    }\r\n\r\n    // 3-character punctuators: === !== >>> <<= >>=\r\n\r\n    ch3 = ch4.substr(0, 3);\r\n\r\n    if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\r\n        index += 3;\r\n        return {\r\n            type: Token.Punctuator,\r\n            value: ch3,\r\n            lineNumber: lineNumber,\r\n            lineStart: lineStart,\r\n            start: start,\r\n            end: index\r\n        };\r\n    }\r\n\r\n    // Other 2-character punctuators: ++ -- << >> && ||\r\n    ch2 = ch3.substr(0, 2);\r\n\r\n    if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\r\n        index += 2;\r\n        return {\r\n            type: Token.Punctuator,\r\n            value: ch2,\r\n            lineNumber: lineNumber,\r\n            lineStart: lineStart,\r\n            start: start,\r\n            end: index\r\n        };\r\n    }\r\n\r\n    // 1-character punctuators: < > = ! + - * % & | ^ /\r\n    if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\r\n        ++index;\r\n        return {\r\n            type: Token.Punctuator,\r\n            value: ch1,\r\n            lineNumber: lineNumber,\r\n            lineStart: lineStart,\r\n            start: start,\r\n            end: index\r\n        };\r\n    }\r\n\r\n    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\r\n}\r\n\r\n// 7.8.3 Numeric Literals\r\n\r\nfunction scanHexLiteral(start) {\r\n    var number = '';\r\n\r\n    while (index < length) {\r\n        if (!isHexDigit(source[index])) {\r\n            break;\r\n        }\r\n        number += source[index++];\r\n    }\r\n\r\n    if (number.length === 0) {\r\n        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\r\n    }\r\n\r\n    if (isIdentifierStart(source.charCodeAt(index))) {\r\n        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\r\n    }\r\n\r\n    return {\r\n        type: Token.NumericLiteral,\r\n        value: parseInt('0x' + number, 16),\r\n        lineNumber: lineNumber,\r\n        lineStart: lineStart,\r\n        start: start,\r\n        end: index\r\n    };\r\n}\r\n\r\nfunction scanOctalLiteral(start) {\r\n    var number = '0' + source[index++];\r\n    while (index < length) {\r\n        if (!isOctalDigit(source[index])) {\r\n            break;\r\n        }\r\n        number += source[index++];\r\n    }\r\n\r\n    if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\r\n        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\r\n    }\r\n\r\n    return {\r\n        type: Token.NumericLiteral,\r\n        value: parseInt(number, 8),\r\n        octal: true,\r\n        lineNumber: lineNumber,\r\n        lineStart: lineStart,\r\n        start: start,\r\n        end: index\r\n    };\r\n}\r\n\r\nfunction scanNumericLiteral() {\r\n    var number, start, ch;\r\n\r\n    ch = source[index];\r\n    assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\r\n        'Numeric literal must start with a decimal digit or a decimal point');\r\n\r\n    start = index;\r\n    number = '';\r\n    if (ch !== '.') {\r\n        number = source[index++];\r\n        ch = source[index];\r\n\r\n        // Hex number starts with '0x'.\r\n        // Octal number starts with '0'.\r\n        if (number === '0') {\r\n            if (ch === 'x' || ch === 'X') {\r\n                ++index;\r\n                return scanHexLiteral(start);\r\n            }\r\n            if (isOctalDigit(ch)) {\r\n                return scanOctalLiteral(start);\r\n            }\r\n\r\n            // decimal number starts with '0' such as '09' is illegal.\r\n            if (ch && isDecimalDigit(ch.charCodeAt(0))) {\r\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\r\n            }\r\n        }\r\n\r\n        while (isDecimalDigit(source.charCodeAt(index))) {\r\n            number += source[index++];\r\n        }\r\n        ch = source[index];\r\n    }\r\n\r\n    if (ch === '.') {\r\n        number += source[index++];\r\n        while (isDecimalDigit(source.charCodeAt(index))) {\r\n            number += source[index++];\r\n        }\r\n        ch = source[index];\r\n    }\r\n\r\n    if (ch === 'e' || ch === 'E') {\r\n        number += source[index++];\r\n\r\n        ch = source[index];\r\n        if (ch === '+' || ch === '-') {\r\n            number += source[index++];\r\n        }\r\n        if (isDecimalDigit(source.charCodeAt(index))) {\r\n            while (isDecimalDigit(source.charCodeAt(index))) {\r\n                number += source[index++];\r\n            }\r\n        } else {\r\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\r\n        }\r\n    }\r\n\r\n    if (isIdentifierStart(source.charCodeAt(index))) {\r\n        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\r\n    }\r\n\r\n    return {\r\n        type: Token.NumericLiteral,\r\n        value: parseFloat(number),\r\n        lineNumber: lineNumber,\r\n        lineStart: lineStart,\r\n        start: start,\r\n        end: index\r\n    };\r\n}\r\n\r\n// 7.8.4 String Literals\r\n\r\nfunction scanStringLiteral() {\r\n    var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\r\n    startLineNumber = lineNumber;\r\n    startLineStart = lineStart;\r\n\r\n    quote = source[index];\r\n    assert((quote === '\\'' || quote === '\"'),\r\n        'String literal must starts with a quote');\r\n\r\n    start = index;\r\n    ++index;\r\n\r\n    while (index < length) {\r\n        ch = source[index++];\r\n\r\n        if (ch === quote) {\r\n            quote = '';\r\n            break;\r\n        } else if (ch === '\\\\') {\r\n            ch = source[index++];\r\n            if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\r\n                switch (ch) {\r\n                case 'u':\r\n                case 'x':\r\n                    restore = index;\r\n                    unescaped = scanHexEscape(ch);\r\n                    if (unescaped) {\r\n                        str += unescaped;\r\n                    } else {\r\n                        index = restore;\r\n                        str += ch;\r\n                    }\r\n                    break;\r\n                case 'n':\r\n                    str += '\\n';\r\n                    break;\r\n                case 'r':\r\n                    str += '\\r';\r\n                    break;\r\n                case 't':\r\n                    str += '\\t';\r\n                    break;\r\n                case 'b':\r\n                    str += '\\b';\r\n                    break;\r\n                case 'f':\r\n                    str += '\\f';\r\n                    break;\r\n                case 'v':\r\n                    str += '\\x0B';\r\n                    break;\r\n\r\n                default:\r\n                    if (isOctalDigit(ch)) {\r\n                        code = '01234567'.indexOf(ch);\r\n\r\n                        // \\0 is not octal escape sequence\r\n                        if (code !== 0) {\r\n                            octal = true;\r\n                        }\r\n\r\n                        if (index < length && isOctalDigit(source[index])) {\r\n                            octal = true;\r\n                            code = code * 8 + '01234567'.indexOf(source[index++]);\r\n\r\n                            // 3 digits are only allowed when string starts\r\n                            // with 0, 1, 2, 3\r\n                            if ('0123'.indexOf(ch) >= 0 &&\r\n                                    index < length &&\r\n                                    isOctalDigit(source[index])) {\r\n                                code = code * 8 + '01234567'.indexOf(source[index++]);\r\n                            }\r\n                        }\r\n                        str += String.fromCharCode(code);\r\n                    } else {\r\n                        str += ch;\r\n                    }\r\n                    break;\r\n                }\r\n            } else {\r\n                ++lineNumber;\r\n                if (ch ===  '\\r' && source[index] === '\\n') {\r\n                    ++index;\r\n                }\r\n                lineStart = index;\r\n            }\r\n        } else if (isLineTerminator(ch.charCodeAt(0))) {\r\n            break;\r\n        } else {\r\n            str += ch;\r\n        }\r\n    }\r\n\r\n    if (quote !== '') {\r\n        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\r\n    }\r\n\r\n    return {\r\n        type: Token.StringLiteral,\r\n        value: str,\r\n        octal: octal,\r\n        startLineNumber: startLineNumber,\r\n        startLineStart: startLineStart,\r\n        lineNumber: lineNumber,\r\n        lineStart: lineStart,\r\n        start: start,\r\n        end: index\r\n    };\r\n}\r\n\r\nfunction testRegExp(pattern, flags) {\r\n    var value;\r\n    try {\r\n        value = new RegExp(pattern, flags);\r\n    } catch (e) {\r\n        throwError({}, Messages.InvalidRegExp);\r\n    }\r\n    return value;\r\n}\r\n\r\nfunction scanRegExpBody() {\r\n    var ch, str, classMarker, terminated, body;\r\n\r\n    ch = source[index];\r\n    assert(ch === '/', 'Regular expression literal must start with a slash');\r\n    str = source[index++];\r\n\r\n    classMarker = false;\r\n    terminated = false;\r\n    while (index < length) {\r\n        ch = source[index++];\r\n        str += ch;\r\n        if (ch === '\\\\') {\r\n            ch = source[index++];\r\n            // ECMA-262 7.8.5\r\n            if (isLineTerminator(ch.charCodeAt(0))) {\r\n                throwError({}, Messages.UnterminatedRegExp);\r\n            }\r\n            str += ch;\r\n        } else if (isLineTerminator(ch.charCodeAt(0))) {\r\n            throwError({}, Messages.UnterminatedRegExp);\r\n        } else if (classMarker) {\r\n            if (ch === ']') {\r\n                classMarker = false;\r\n            }\r\n        } else {\r\n            if (ch === '/') {\r\n                terminated = true;\r\n                break;\r\n            } else if (ch === '[') {\r\n                classMarker = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!terminated) {\r\n        throwError({}, Messages.UnterminatedRegExp);\r\n    }\r\n\r\n    // Exclude leading and trailing slash.\r\n    body = str.substr(1, str.length - 2);\r\n    return {\r\n        value: body,\r\n        literal: str\r\n    };\r\n}\r\n\r\nfunction scanRegExpFlags() {\r\n    var ch, str, flags, restore;\r\n\r\n    str = '';\r\n    flags = '';\r\n    while (index < length) {\r\n        ch = source[index];\r\n        if (!isIdentifierPart(ch.charCodeAt(0))) {\r\n            break;\r\n        }\r\n\r\n        ++index;\r\n        if (ch === '\\\\' && index < length) {\r\n            ch = source[index];\r\n            if (ch === 'u') {\r\n                ++index;\r\n                restore = index;\r\n                ch = scanHexEscape('u');\r\n                if (ch) {\r\n                    flags += ch;\r\n                    for (str += '\\\\u'; restore < index; ++restore) {\r\n                        str += source[restore];\r\n                    }\r\n                } else {\r\n                    index = restore;\r\n                    flags += 'u';\r\n                    str += '\\\\u';\r\n                }\r\n                throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\r\n            } else {\r\n                str += '\\\\';\r\n                throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\r\n            }\r\n        } else {\r\n            flags += ch;\r\n            str += ch;\r\n        }\r\n    }\r\n\r\n    return {\r\n        value: flags,\r\n        literal: str\r\n    };\r\n}\r\n\r\nfunction scanRegExp() {\r\n    var start, body, flags, pattern, value;\r\n\r\n    lookahead = null;\r\n    skipComment();\r\n    start = index;\r\n\r\n    body = scanRegExpBody();\r\n    flags = scanRegExpFlags();\r\n    value = testRegExp(body.value, flags.value);\r\n\r\n    if (extra.tokenize) {\r\n        return {\r\n            type: Token.RegularExpression,\r\n            value: value,\r\n            lineNumber: lineNumber,\r\n            lineStart: lineStart,\r\n            start: start,\r\n            end: index\r\n        };\r\n    }\r\n\r\n    return {\r\n        literal: body.literal + flags.literal,\r\n        value: value,\r\n        start: start,\r\n        end: index\r\n    };\r\n}\r\n\r\nfunction collectRegex() {\r\n    var pos, loc, regex, token;\r\n\r\n    skipComment();\r\n\r\n    pos = index;\r\n    loc = {\r\n        start: {\r\n            line: lineNumber,\r\n            column: index - lineStart\r\n        }\r\n    };\r\n\r\n    regex = scanRegExp();\r\n    loc.end = {\r\n        line: lineNumber,\r\n        column: index - lineStart\r\n    };\r\n\r\n    /* istanbul ignore next */\r\n    if (!extra.tokenize) {\r\n        // Pop the previous token, which is likely '/' or '/='\r\n        if (extra.tokens.length > 0) {\r\n            token = extra.tokens[extra.tokens.length - 1];\r\n            if (token.range[0] === pos && token.type === 'Punctuator') {\r\n                if (token.value === '/' || token.value === '/=') {\r\n                    extra.tokens.pop();\r\n                }\r\n            }\r\n        }\r\n\r\n        extra.tokens.push({\r\n            type: 'RegularExpression',\r\n            value: regex.literal,\r\n            range: [pos, index],\r\n            loc: loc\r\n        });\r\n    }\r\n\r\n    return regex;\r\n}\r\n\r\nfunction isIdentifierName(token) {\r\n    return token.type === Token.Identifier ||\r\n        token.type === Token.Keyword ||\r\n        token.type === Token.BooleanLiteral ||\r\n        token.type === Token.NullLiteral;\r\n}\r\n\r\nfunction advanceSlash() {\r\n    var prevToken,\r\n        checkToken;\r\n    // Using the following algorithm:\r\n    // https://github.com/mozilla/sweet.js/wiki/design\r\n    prevToken = extra.tokens[extra.tokens.length - 1];\r\n    if (!prevToken) {\r\n        // Nothing before that: it cannot be a division.\r\n        return collectRegex();\r\n    }\r\n    if (prevToken.type === 'Punctuator') {\r\n        if (prevToken.value === ']') {\r\n            return scanPunctuator();\r\n        }\r\n        if (prevToken.value === ')') {\r\n            checkToken = extra.tokens[extra.openParenToken - 1];\r\n            if (checkToken &&\r\n                    checkToken.type === 'Keyword' &&\r\n                    (checkToken.value === 'if' ||\r\n                        checkToken.value === 'while' ||\r\n                        checkToken.value === 'for' ||\r\n                        checkToken.value === 'with')) {\r\n                return collectRegex();\r\n            }\r\n            return scanPunctuator();\r\n        }\r\n        if (prevToken.value === '}') {\r\n            // Dividing a function by anything makes little sense,\r\n            // but we have to check for that.\r\n            if (extra.tokens[extra.openCurlyToken - 3] &&\r\n                    extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\r\n                // Anonymous function.\r\n                checkToken = extra.tokens[extra.openCurlyToken - 4];\r\n                if (!checkToken) {\r\n                    return scanPunctuator();\r\n                }\r\n            } else if (extra.tokens[extra.openCurlyToken - 4] &&\r\n                    extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\r\n                // Named function.\r\n                checkToken = extra.tokens[extra.openCurlyToken - 5];\r\n                if (!checkToken) {\r\n                    return collectRegex();\r\n                }\r\n            } else {\r\n                return scanPunctuator();\r\n            }\r\n            // checkToken determines whether the function is\r\n            // a declaration or an expression.\r\n            if (FnExprTokens.indexOf(checkToken.value) >= 0) {\r\n                // It is an expression.\r\n                return scanPunctuator();\r\n            }\r\n            // It is a declaration.\r\n            return collectRegex();\r\n        }\r\n        return collectRegex();\r\n    }\r\n    if (prevToken.type === 'Keyword') {\r\n        return collectRegex();\r\n    }\r\n    return scanPunctuator();\r\n}\r\n\r\nfunction advance() {\r\n    var ch;\r\n\r\n    skipComment();\r\n\r\n    if (index >= length) {\r\n        return {\r\n            type: Token.EOF,\r\n            lineNumber: lineNumber,\r\n            lineStart: lineStart,\r\n            start: index,\r\n            end: index\r\n        };\r\n    }\r\n\r\n    ch = source.charCodeAt(index);\r\n\r\n    if (isIdentifierStart(ch)) {\r\n        return scanIdentifier();\r\n    }\r\n\r\n    // Very common: ( and ) and ;\r\n    if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\r\n        return scanPunctuator();\r\n    }\r\n\r\n    // String literal starts with single quote (U+0027) or double quote (U+0022).\r\n    if (ch === 0x27 || ch === 0x22) {\r\n        return scanStringLiteral();\r\n    }\r\n\r\n\r\n    // Dot (.) U+002E can also start a floating-point number, hence the need\r\n    // to check the next character.\r\n    if (ch === 0x2E) {\r\n        if (isDecimalDigit(source.charCodeAt(index + 1))) {\r\n            return scanNumericLiteral();\r\n        }\r\n        return scanPunctuator();\r\n    }\r\n\r\n    if (isDecimalDigit(ch)) {\r\n        return scanNumericLiteral();\r\n    }\r\n\r\n    // Slash (/) U+002F can also start a regex.\r\n    if (extra.tokenize && ch === 0x2F) {\r\n        return advanceSlash();\r\n    }\r\n\r\n    return scanPunctuator();\r\n}\r\n\r\nfunction collectToken() {\r\n    var loc, token, range, value;\r\n\r\n    skipComment();\r\n    loc = {\r\n        start: {\r\n            line: lineNumber,\r\n            column: index - lineStart\r\n        }\r\n    };\r\n\r\n    token = advance();\r\n    loc.end = {\r\n        line: lineNumber,\r\n        column: index - lineStart\r\n    };\r\n\r\n    if (token.type !== Token.EOF) {\r\n        value = source.slice(token.start, token.end);\r\n        extra.tokens.push({\r\n            type: TokenName[token.type],\r\n            value: value,\r\n            range: [token.start, token.end],\r\n            loc: loc\r\n        });\r\n    }\r\n\r\n    return token;\r\n}\r\n\r\nfunction lex() {\r\n    var token;\r\n\r\n    token = lookahead;\r\n    index = token.end;\r\n    lineNumber = token.lineNumber;\r\n    lineStart = token.lineStart;\r\n\r\n    lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\r\n\r\n    index = token.end;\r\n    lineNumber = token.lineNumber;\r\n    lineStart = token.lineStart;\r\n\r\n    return token;\r\n}\r\n\r\nfunction peek() {\r\n    var pos, line, start;\r\n\r\n    pos = index;\r\n    line = lineNumber;\r\n    start = lineStart;\r\n    lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\r\n    index = pos;\r\n    lineNumber = line;\r\n    lineStart = start;\r\n}\r\n\r\nfunction Position(line, column) {\r\n    this.line = line;\r\n    this.column = column;\r\n}\r\n\r\nfunction SourceLocation(startLine, startColumn, line, column) {\r\n    this.start = new Position(startLine, startColumn);\r\n    this.end = new Position(line, column);\r\n}\r\n\r\nSyntaxTreeDelegate = {\r\n\r\n    name: 'SyntaxTree',\r\n\r\n    processComment: function (node) {\r\n        var lastChild, trailingComments;\r\n\r\n        if (node.type === Syntax.Program) {\r\n            if (node.body.length > 0) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (extra.trailingComments.length > 0) {\r\n            if (extra.trailingComments[0].range[0] >= node.range[1]) {\r\n                trailingComments = extra.trailingComments;\r\n                extra.trailingComments = [];\r\n            } else {\r\n                extra.trailingComments.length = 0;\r\n            }\r\n        } else {\r\n            if (extra.bottomRightStack.length > 0 &&\r\n                    extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments &&\r\n                    extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments[0].range[0] >= node.range[1]) {\r\n                trailingComments = extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments;\r\n                delete extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments;\r\n            }\r\n        }\r\n\r\n        // Eating the stack.\r\n        while (extra.bottomRightStack.length > 0 && extra.bottomRightStack[extra.bottomRightStack.length - 1].range[0] >= node.range[0]) {\r\n            lastChild = extra.bottomRightStack.pop();\r\n        }\r\n\r\n        if (lastChild) {\r\n            if (lastChild.leadingComments && lastChild.leadingComments[lastChild.leadingComments.length - 1].range[1] <= node.range[0]) {\r\n                node.leadingComments = lastChild.leadingComments;\r\n                delete lastChild.leadingComments;\r\n            }\r\n        } else if (extra.leadingComments.length > 0 && extra.leadingComments[extra.leadingComments.length - 1].range[1] <= node.range[0]) {\r\n            node.leadingComments = extra.leadingComments;\r\n            extra.leadingComments = [];\r\n        }\r\n\r\n\r\n        if (trailingComments) {\r\n            node.trailingComments = trailingComments;\r\n        }\r\n\r\n        extra.bottomRightStack.push(node);\r\n    },\r\n\r\n    markEnd: function (node, startToken) {\r\n        if (extra.range) {\r\n            node.range = [startToken.start, index];\r\n        }\r\n        if (extra.loc) {\r\n            node.loc = new SourceLocation(\r\n                startToken.startLineNumber === undefined ?  startToken.lineNumber : startToken.startLineNumber,\r\n                startToken.start - (startToken.startLineStart === undefined ?  startToken.lineStart : startToken.startLineStart),\r\n                lineNumber,\r\n                index - lineStart\r\n            );\r\n            this.postProcess(node);\r\n        }\r\n\r\n        if (extra.attachComment) {\r\n            this.processComment(node);\r\n        }\r\n        return node;\r\n    },\r\n\r\n    postProcess: function (node) {\r\n        if (extra.source) {\r\n            node.loc.source = extra.source;\r\n        }\r\n        return node;\r\n    },\r\n\r\n    createArrayExpression: function (elements) {\r\n        return {\r\n            type: Syntax.ArrayExpression,\r\n            elements: elements\r\n        };\r\n    },\r\n\r\n    createAssignmentExpression: function (operator, left, right) {\r\n        return {\r\n            type: Syntax.AssignmentExpression,\r\n            operator: operator,\r\n            left: left,\r\n            right: right\r\n        };\r\n    },\r\n\r\n    createBinaryExpression: function (operator, left, right) {\r\n        var type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression :\r\n                    Syntax.BinaryExpression;\r\n        return {\r\n            type: type,\r\n            operator: operator,\r\n            left: left,\r\n            right: right\r\n        };\r\n    },\r\n\r\n    createBlockStatement: function (body) {\r\n        return {\r\n            type: Syntax.BlockStatement,\r\n            body: body\r\n        };\r\n    },\r\n\r\n    createBreakStatement: function (label) {\r\n        return {\r\n            type: Syntax.BreakStatement,\r\n            label: label\r\n        };\r\n    },\r\n\r\n    createCallExpression: function (callee, args) {\r\n        return {\r\n            type: Syntax.CallExpression,\r\n            callee: callee,\r\n            'arguments': args\r\n        };\r\n    },\r\n\r\n    createCatchClause: function (param, body) {\r\n        return {\r\n            type: Syntax.CatchClause,\r\n            param: param,\r\n            body: body\r\n        };\r\n    },\r\n\r\n    createConditionalExpression: function (test, consequent, alternate) {\r\n        return {\r\n            type: Syntax.ConditionalExpression,\r\n            test: test,\r\n            consequent: consequent,\r\n            alternate: alternate\r\n        };\r\n    },\r\n\r\n    createContinueStatement: function (label) {\r\n        return {\r\n            type: Syntax.ContinueStatement,\r\n            label: label\r\n        };\r\n    },\r\n\r\n    createDebuggerStatement: function () {\r\n        return {\r\n            type: Syntax.DebuggerStatement\r\n        };\r\n    },\r\n\r\n    createDoWhileStatement: function (body, test) {\r\n        return {\r\n            type: Syntax.DoWhileStatement,\r\n            body: body,\r\n            test: test\r\n        };\r\n    },\r\n\r\n    createEmptyStatement: function () {\r\n        return {\r\n            type: Syntax.EmptyStatement\r\n        };\r\n    },\r\n\r\n    createExpressionStatement: function (expression) {\r\n        return {\r\n            type: Syntax.ExpressionStatement,\r\n            expression: expression\r\n        };\r\n    },\r\n\r\n    createForStatement: function (init, test, update, body) {\r\n        return {\r\n            type: Syntax.ForStatement,\r\n            init: init,\r\n            test: test,\r\n            update: update,\r\n            body: body\r\n        };\r\n    },\r\n\r\n    createForInStatement: function (left, right, body) {\r\n        return {\r\n            type: Syntax.ForInStatement,\r\n            left: left,\r\n            right: right,\r\n            body: body,\r\n            each: false\r\n        };\r\n    },\r\n\r\n    createFunctionDeclaration: function (id, params, defaults, body) {\r\n        return {\r\n            type: Syntax.FunctionDeclaration,\r\n            id: id,\r\n            params: params,\r\n            defaults: defaults,\r\n            body: body,\r\n            rest: null,\r\n            generator: false,\r\n            expression: false\r\n        };\r\n    },\r\n\r\n    createFunctionExpression: function (id, params, defaults, body) {\r\n        return {\r\n            type: Syntax.FunctionExpression,\r\n            id: id,\r\n            params: params,\r\n            defaults: defaults,\r\n            body: body,\r\n            rest: null,\r\n            generator: false,\r\n            expression: false\r\n        };\r\n    },\r\n\r\n    createIdentifier: function (name) {\r\n        return {\r\n            type: Syntax.Identifier,\r\n            name: name\r\n        };\r\n    },\r\n\r\n    createIfStatement: function (test, consequent, alternate) {\r\n        return {\r\n            type: Syntax.IfStatement,\r\n            test: test,\r\n            consequent: consequent,\r\n            alternate: alternate\r\n        };\r\n    },\r\n\r\n    createLabeledStatement: function (label, body) {\r\n        return {\r\n            type: Syntax.LabeledStatement,\r\n            label: label,\r\n            body: body\r\n        };\r\n    },\r\n\r\n    createLiteral: function (token) {\r\n        return {\r\n            type: Syntax.Literal,\r\n            value: token.value,\r\n            raw: source.slice(token.start, token.end)\r\n        };\r\n    },\r\n\r\n    createMemberExpression: function (accessor, object, property) {\r\n        return {\r\n            type: Syntax.MemberExpression,\r\n            computed: accessor === '[',\r\n            object: object,\r\n            property: property\r\n        };\r\n    },\r\n\r\n    createNewExpression: function (callee, args) {\r\n        return {\r\n            type: Syntax.NewExpression,\r\n            callee: callee,\r\n            'arguments': args\r\n        };\r\n    },\r\n\r\n    createObjectExpression: function (properties) {\r\n        return {\r\n            type: Syntax.ObjectExpression,\r\n            properties: properties\r\n        };\r\n    },\r\n\r\n    createPostfixExpression: function (operator, argument) {\r\n        return {\r\n            type: Syntax.UpdateExpression,\r\n            operator: operator,\r\n            argument: argument,\r\n            prefix: false\r\n        };\r\n    },\r\n\r\n    createProgram: function (body) {\r\n        return {\r\n            type: Syntax.Program,\r\n            body: body\r\n        };\r\n    },\r\n\r\n    createProperty: function (kind, key, value) {\r\n        return {\r\n            type: Syntax.Property,\r\n            key: key,\r\n            value: value,\r\n            kind: kind\r\n        };\r\n    },\r\n\r\n    createReturnStatement: function (argument) {\r\n        return {\r\n            type: Syntax.ReturnStatement,\r\n            argument: argument\r\n        };\r\n    },\r\n\r\n    createSequenceExpression: function (expressions) {\r\n        return {\r\n            type: Syntax.SequenceExpression,\r\n            expressions: expressions\r\n        };\r\n    },\r\n\r\n    createSwitchCase: function (test, consequent) {\r\n        return {\r\n            type: Syntax.SwitchCase,\r\n            test: test,\r\n            consequent: consequent\r\n        };\r\n    },\r\n\r\n    createSwitchStatement: function (discriminant, cases) {\r\n        return {\r\n            type: Syntax.SwitchStatement,\r\n            discriminant: discriminant,\r\n            cases: cases\r\n        };\r\n    },\r\n\r\n    createThisExpression: function () {\r\n        return {\r\n            type: Syntax.ThisExpression\r\n        };\r\n    },\r\n\r\n    createThrowStatement: function (argument) {\r\n        return {\r\n            type: Syntax.ThrowStatement,\r\n            argument: argument\r\n        };\r\n    },\r\n\r\n    createTryStatement: function (block, guardedHandlers, handlers, finalizer) {\r\n        return {\r\n            type: Syntax.TryStatement,\r\n            block: block,\r\n            guardedHandlers: guardedHandlers,\r\n            handlers: handlers,\r\n            finalizer: finalizer\r\n        };\r\n    },\r\n\r\n    createUnaryExpression: function (operator, argument) {\r\n        if (operator === '++' || operator === '--') {\r\n            return {\r\n                type: Syntax.UpdateExpression,\r\n                operator: operator,\r\n                argument: argument,\r\n                prefix: true\r\n            };\r\n        }\r\n        return {\r\n            type: Syntax.UnaryExpression,\r\n            operator: operator,\r\n            argument: argument,\r\n            prefix: true\r\n        };\r\n    },\r\n\r\n    createVariableDeclaration: function (declarations, kind) {\r\n        return {\r\n            type: Syntax.VariableDeclaration,\r\n            declarations: declarations,\r\n            kind: kind\r\n        };\r\n    },\r\n\r\n    createVariableDeclarator: function (id, init) {\r\n        return {\r\n            type: Syntax.VariableDeclarator,\r\n            id: id,\r\n            init: init\r\n        };\r\n    },\r\n\r\n    createWhileStatement: function (test, body) {\r\n        return {\r\n            type: Syntax.WhileStatement,\r\n            test: test,\r\n            body: body\r\n        };\r\n    },\r\n\r\n    createWithStatement: function (object, body) {\r\n        return {\r\n            type: Syntax.WithStatement,\r\n            object: object,\r\n            body: body\r\n        };\r\n    }\r\n};\r\n\r\n// Return true if there is a line terminator before the next token.\r\n\r\nfunction peekLineTerminator() {\r\n    var pos, line, start, found;\r\n\r\n    pos = index;\r\n    line = lineNumber;\r\n    start = lineStart;\r\n    skipComment();\r\n    found = lineNumber !== line;\r\n    index = pos;\r\n    lineNumber = line;\r\n    lineStart = start;\r\n\r\n    return found;\r\n}\r\n\r\n// Throw an exception\r\n\r\nfunction throwError(token, messageFormat, ...args) {\r\n    var error,\r\n        msg = messageFormat.replace(\r\n            /%(\\d)/g,\r\n            function (whole, index) {\r\n                assert(index < args.length, 'Message reference must be in range');\r\n                return args[index];\r\n            }\r\n        );\r\n\r\n    if (typeof token.lineNumber === 'number') {\r\n        error = new Error('Line ' + token.lineNumber + ': ' + msg);\r\n        error.index = token.start;\r\n        error.lineNumber = token.lineNumber;\r\n        error.column = token.start - lineStart + 1;\r\n    } else {\r\n        error = new Error('Line ' + lineNumber + ': ' + msg);\r\n        error.index = index;\r\n        error.lineNumber = lineNumber;\r\n        error.column = index - lineStart + 1;\r\n    }\r\n\r\n    error.description = msg;\r\n    throw error;\r\n}\r\n\r\nfunction throwErrorTolerant(...args) {\r\n    try {\r\n        throwError.apply(null, args);\r\n    } catch (e) {\r\n        if (extra.errors) {\r\n            extra.errors.push(e);\r\n        } else {\r\n            throw e;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Throw an exception because of the token.\r\n\r\nfunction throwUnexpected(token) {\r\n    if (token.type === Token.EOF) {\r\n        throwError(token, Messages.UnexpectedEOS);\r\n    }\r\n\r\n    if (token.type === Token.NumericLiteral) {\r\n        throwError(token, Messages.UnexpectedNumber);\r\n    }\r\n\r\n    if (token.type === Token.StringLiteral) {\r\n        throwError(token, Messages.UnexpectedString);\r\n    }\r\n\r\n    if (token.type === Token.Identifier) {\r\n        throwError(token, Messages.UnexpectedIdentifier);\r\n    }\r\n\r\n    if (token.type === Token.Keyword) {\r\n        if (isFutureReservedWord(token.value)) {\r\n            throwError(token, Messages.UnexpectedReserved);\r\n        } else if (strict && isStrictModeReservedWord(token.value)) {\r\n            throwErrorTolerant(token, Messages.StrictReservedWord);\r\n            return;\r\n        }\r\n        throwError(token, Messages.UnexpectedToken, token.value);\r\n    }\r\n\r\n    // BooleanLiteral, NullLiteral, or Punctuator.\r\n    throwError(token, Messages.UnexpectedToken, token.value);\r\n}\r\n\r\n// Expect the next token to match the specified punctuator.\r\n// If not, an exception will be thrown.\r\n\r\nfunction expect(value) {\r\n    var token = lex();\r\n    if (token.type !== Token.Punctuator || token.value !== value) {\r\n        throwUnexpected(token);\r\n    }\r\n}\r\n\r\n// Expect the next token to match the specified keyword.\r\n// If not, an exception will be thrown.\r\n\r\nfunction expectKeyword(keyword) {\r\n    var token = lex();\r\n    if (token.type !== Token.Keyword || token.value !== keyword) {\r\n        throwUnexpected(token);\r\n    }\r\n}\r\n\r\n// Return true if the next token matches the specified punctuator.\r\n\r\nfunction match(value) {\r\n    return lookahead.type === Token.Punctuator && lookahead.value === value;\r\n}\r\n\r\n// Return true if the next token matches the specified keyword\r\n\r\nfunction matchKeyword(keyword) {\r\n    return lookahead.type === Token.Keyword && lookahead.value === keyword;\r\n}\r\n\r\n// Return true if the next token is an assignment operator\r\n\r\nfunction matchAssign() {\r\n    var op;\r\n\r\n    if (lookahead.type !== Token.Punctuator) {\r\n        return false;\r\n    }\r\n    op = lookahead.value;\r\n    return op === '=' ||\r\n        op === '*=' ||\r\n        op === '/=' ||\r\n        op === '%=' ||\r\n        op === '+=' ||\r\n        op === '-=' ||\r\n        op === '<<=' ||\r\n        op === '>>=' ||\r\n        op === '>>>=' ||\r\n        op === '&=' ||\r\n        op === '^=' ||\r\n        op === '|=';\r\n}\r\n\r\nfunction consumeSemicolon() {\r\n    var line;\r\n\r\n    // Catch the very common case first: immediately a semicolon (U+003B).\r\n    if (source.charCodeAt(index) === 0x3B || match(';')) {\r\n        lex();\r\n        return;\r\n    }\r\n\r\n    line = lineNumber;\r\n    skipComment();\r\n    if (lineNumber !== line) {\r\n        return;\r\n    }\r\n\r\n    if (lookahead.type !== Token.EOF && !match('}')) {\r\n        throwUnexpected(lookahead);\r\n    }\r\n}\r\n\r\n// Return true if provided expression is LeftHandSideExpression\r\n\r\nfunction isLeftHandSide(expr) {\r\n    return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\r\n}\r\n\r\n// 11.1.4 Array Initialiser\r\n\r\nfunction parseArrayInitialiser() {\r\n    var elements = [], startToken;\r\n\r\n    startToken = lookahead;\r\n    expect('[');\r\n\r\n    while (!match(']')) {\r\n        if (match(',')) {\r\n            lex();\r\n            elements.push(null);\r\n        } else {\r\n            elements.push(parseAssignmentExpression());\r\n\r\n            if (!match(']')) {\r\n                expect(',');\r\n            }\r\n        }\r\n    }\r\n\r\n    lex();\r\n\r\n    return delegate.markEnd(delegate.createArrayExpression(elements), startToken);\r\n}\r\n\r\n// 11.1.5 Object Initialiser\r\n\r\nfunction parsePropertyFunction(param, first?) {\r\n    var previousStrict, body, startToken;\r\n\r\n    previousStrict = strict;\r\n    startToken = lookahead;\r\n    body = parseFunctionSourceElements();\r\n    if (first && strict && isRestrictedWord(param[0].name)) {\r\n        throwErrorTolerant(first, Messages.StrictParamName);\r\n    }\r\n    strict = previousStrict;\r\n    return delegate.markEnd(delegate.createFunctionExpression(null, param, [], body), startToken);\r\n}\r\n\r\nfunction parseObjectPropertyKey() {\r\n    var token, startToken;\r\n\r\n    startToken = lookahead;\r\n    token = lex();\r\n\r\n    // Note: This function is called only from parseObjectProperty(), where\r\n    // EOF and Punctuator tokens are already filtered out.\r\n\r\n    if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\r\n        if (strict && token.octal) {\r\n            throwErrorTolerant(token, Messages.StrictOctalLiteral);\r\n        }\r\n        return delegate.markEnd(delegate.createLiteral(token), startToken);\r\n    }\r\n\r\n    return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\r\n}\r\n\r\nfunction parseObjectProperty() {\r\n    var token, key, id, value, param, startToken;\r\n\r\n    token = lookahead;\r\n    startToken = lookahead;\r\n\r\n    if (token.type === Token.Identifier) {\r\n\r\n        id = parseObjectPropertyKey();\r\n\r\n        // Property Assignment: Getter and Setter.\r\n\r\n        if (token.value === 'get' && !match(':')) {\r\n            key = parseObjectPropertyKey();\r\n            expect('(');\r\n            expect(')');\r\n            value = parsePropertyFunction([]);\r\n            return delegate.markEnd(delegate.createProperty('get', key, value), startToken);\r\n        }\r\n        if (token.value === 'set' && !match(':')) {\r\n            key = parseObjectPropertyKey();\r\n            expect('(');\r\n            token = lookahead;\r\n            if (token.type !== Token.Identifier) {\r\n                expect(')');\r\n                throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\r\n                value = parsePropertyFunction([]);\r\n            } else {\r\n                param = [ parseVariableIdentifier() ];\r\n                expect(')');\r\n                value = parsePropertyFunction(param, token);\r\n            }\r\n            return delegate.markEnd(delegate.createProperty('set', key, value), startToken);\r\n        }\r\n        expect(':');\r\n        value = parseAssignmentExpression();\r\n        return delegate.markEnd(delegate.createProperty('init', id, value), startToken);\r\n    }\r\n    if (token.type === Token.EOF || token.type === Token.Punctuator) {\r\n        throwUnexpected(token);\r\n    } else {\r\n        key = parseObjectPropertyKey();\r\n        expect(':');\r\n        value = parseAssignmentExpression();\r\n        return delegate.markEnd(delegate.createProperty('init', key, value), startToken);\r\n    }\r\n}\r\n\r\nfunction parseObjectInitialiser() {\r\n    var properties = [], property, name, key, kind, map = {}, toString = String, startToken;\r\n\r\n    startToken = lookahead;\r\n\r\n    expect('{');\r\n\r\n    while (!match('}')) {\r\n        property = parseObjectProperty();\r\n\r\n        if (property.key.type === Syntax.Identifier) {\r\n            name = property.key.name;\r\n        } else {\r\n            name = toString(property.key.value);\r\n        }\r\n        kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\r\n\r\n        key = '$' + name;\r\n        if (Object.prototype.hasOwnProperty.call(map, key)) {\r\n            if (map[key] === PropertyKind.Data) {\r\n                if (strict && kind === PropertyKind.Data) {\r\n                    throwErrorTolerant({}, Messages.StrictDuplicateProperty);\r\n                } else if (kind !== PropertyKind.Data) {\r\n                    throwErrorTolerant({}, Messages.AccessorDataProperty);\r\n                }\r\n            } else {\r\n                if (kind === PropertyKind.Data) {\r\n                    throwErrorTolerant({}, Messages.AccessorDataProperty);\r\n                } else if (map[key] & kind) {\r\n                    throwErrorTolerant({}, Messages.AccessorGetSet);\r\n                }\r\n            }\r\n            map[key] |= kind;\r\n        } else {\r\n            map[key] = kind;\r\n        }\r\n\r\n        properties.push(property);\r\n\r\n        if (!match('}')) {\r\n            expect(',');\r\n        }\r\n    }\r\n\r\n    expect('}');\r\n\r\n    return delegate.markEnd(delegate.createObjectExpression(properties), startToken);\r\n}\r\n\r\n// 11.1.6 The Grouping Operator\r\n\r\nfunction parseGroupExpression() {\r\n    var expr;\r\n\r\n    expect('(');\r\n\r\n    expr = parseExpression();\r\n\r\n    expect(')');\r\n\r\n    return expr;\r\n}\r\n\r\n\r\n// 11.1 Primary Expressions\r\n\r\nfunction parsePrimaryExpression() {\r\n    var type, token, expr, startToken;\r\n\r\n    if (match('(')) {\r\n        return parseGroupExpression();\r\n    }\r\n\r\n    if (match('[')) {\r\n        return parseArrayInitialiser();\r\n    }\r\n\r\n    if (match('{')) {\r\n        return parseObjectInitialiser();\r\n    }\r\n\r\n    type = lookahead.type;\r\n    startToken = lookahead;\r\n\r\n    if (type === Token.Identifier) {\r\n        expr =  delegate.createIdentifier(lex().value);\r\n    } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\r\n        if (strict && lookahead.octal) {\r\n            throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\r\n        }\r\n        expr = delegate.createLiteral(lex());\r\n    } else if (type === Token.Keyword) {\r\n        if (matchKeyword('function')) {\r\n            return parseFunctionExpression();\r\n        }\r\n        if (matchKeyword('this')) {\r\n            lex();\r\n            expr = delegate.createThisExpression();\r\n        } else {\r\n            throwUnexpected(lex());\r\n        }\r\n    } else if (type === Token.BooleanLiteral) {\r\n        token = lex();\r\n        token.value = (token.value === 'true');\r\n        expr = delegate.createLiteral(token);\r\n    } else if (type === Token.NullLiteral) {\r\n        token = lex();\r\n        token.value = null;\r\n        expr = delegate.createLiteral(token);\r\n    } else if (match('/') || match('/=')) {\r\n        if (typeof extra.tokens !== 'undefined') {\r\n            expr = delegate.createLiteral(collectRegex());\r\n        } else {\r\n            expr = delegate.createLiteral(scanRegExp());\r\n        }\r\n        peek();\r\n    } else {\r\n        throwUnexpected(lex());\r\n    }\r\n\r\n    return delegate.markEnd(expr, startToken);\r\n}\r\n\r\n// 11.2 Left-Hand-Side Expressions\r\n\r\nfunction parseArguments() {\r\n    var args = [];\r\n\r\n    expect('(');\r\n\r\n    if (!match(')')) {\r\n        while (index < length) {\r\n            args.push(parseAssignmentExpression());\r\n            if (match(')')) {\r\n                break;\r\n            }\r\n            expect(',');\r\n        }\r\n    }\r\n\r\n    expect(')');\r\n\r\n    return args;\r\n}\r\n\r\nfunction parseNonComputedProperty() {\r\n    var token, startToken;\r\n\r\n    startToken = lookahead;\r\n    token = lex();\r\n\r\n    if (!isIdentifierName(token)) {\r\n        throwUnexpected(token);\r\n    }\r\n\r\n    return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\r\n}\r\n\r\nfunction parseNonComputedMember() {\r\n    expect('.');\r\n\r\n    return parseNonComputedProperty();\r\n}\r\n\r\nfunction parseComputedMember() {\r\n    var expr;\r\n\r\n    expect('[');\r\n\r\n    expr = parseExpression();\r\n\r\n    expect(']');\r\n\r\n    return expr;\r\n}\r\n\r\nfunction parseNewExpression() {\r\n    var callee, args, startToken;\r\n\r\n    startToken = lookahead;\r\n    expectKeyword('new');\r\n    callee = parseLeftHandSideExpression();\r\n    args = match('(') ? parseArguments() : [];\r\n\r\n    return delegate.markEnd(delegate.createNewExpression(callee, args), startToken);\r\n}\r\n\r\nfunction parseLeftHandSideExpressionAllowCall() {\r\n    var previousAllowIn, expr, args, property, startToken;\r\n\r\n    startToken = lookahead;\r\n\r\n    previousAllowIn = state.allowIn;\r\n    state.allowIn = true;\r\n    expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\r\n    state.allowIn = previousAllowIn;\r\n\r\n    for (;;) {\r\n        if (match('.')) {\r\n            property = parseNonComputedMember();\r\n            expr = delegate.createMemberExpression('.', expr, property);\r\n        } else if (match('(')) {\r\n            args = parseArguments();\r\n            expr = delegate.createCallExpression(expr, args);\r\n        } else if (match('[')) {\r\n            property = parseComputedMember();\r\n            expr = delegate.createMemberExpression('[', expr, property);\r\n        } else {\r\n            break;\r\n        }\r\n        delegate.markEnd(expr, startToken);\r\n    }\r\n\r\n    return expr;\r\n}\r\n\r\nfunction parseLeftHandSideExpression() {\r\n    var previousAllowIn, expr, property, startToken;\r\n\r\n    startToken = lookahead;\r\n\r\n    previousAllowIn = state.allowIn;\r\n    expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\r\n    state.allowIn = previousAllowIn;\r\n\r\n    while (match('.') || match('[')) {\r\n        if (match('[')) {\r\n            property = parseComputedMember();\r\n            expr = delegate.createMemberExpression('[', expr, property);\r\n        } else {\r\n            property = parseNonComputedMember();\r\n            expr = delegate.createMemberExpression('.', expr, property);\r\n        }\r\n        delegate.markEnd(expr, startToken);\r\n    }\r\n\r\n    return expr;\r\n}\r\n\r\n// 11.3 Postfix Expressions\r\n\r\nfunction parsePostfixExpression() {\r\n    var expr, token, startToken = lookahead;\r\n\r\n    expr = parseLeftHandSideExpressionAllowCall();\r\n\r\n    if (lookahead.type === Token.Punctuator) {\r\n        if ((match('++') || match('--')) && !peekLineTerminator()) {\r\n            // 11.3.1, 11.3.2\r\n            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\r\n                throwErrorTolerant({}, Messages.StrictLHSPostfix);\r\n            }\r\n\r\n            if (!isLeftHandSide(expr)) {\r\n                throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\r\n            }\r\n\r\n            token = lex();\r\n            expr = delegate.markEnd(delegate.createPostfixExpression(token.value, expr), startToken);\r\n        }\r\n    }\r\n\r\n    return expr;\r\n}\r\n\r\n// 11.4 Unary Operators\r\n\r\nfunction parseUnaryExpression() {\r\n    var token, expr, startToken;\r\n\r\n    if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\r\n        expr = parsePostfixExpression();\r\n    } else if (match('++') || match('--')) {\r\n        startToken = lookahead;\r\n        token = lex();\r\n        expr = parseUnaryExpression();\r\n        // 11.4.4, 11.4.5\r\n        if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\r\n            throwErrorTolerant({}, Messages.StrictLHSPrefix);\r\n        }\r\n\r\n        if (!isLeftHandSide(expr)) {\r\n            throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\r\n        }\r\n\r\n        expr = delegate.createUnaryExpression(token.value, expr);\r\n        expr = delegate.markEnd(expr, startToken);\r\n    } else if (match('+') || match('-') || match('~') || match('!')) {\r\n        startToken = lookahead;\r\n        token = lex();\r\n        expr = parseUnaryExpression();\r\n        expr = delegate.createUnaryExpression(token.value, expr);\r\n        expr = delegate.markEnd(expr, startToken);\r\n    } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\r\n        startToken = lookahead;\r\n        token = lex();\r\n        expr = parseUnaryExpression();\r\n        expr = delegate.createUnaryExpression(token.value, expr);\r\n        expr = delegate.markEnd(expr, startToken);\r\n        if (strict && expr.operator === 'delete' && expr.argument.type === Syntax.Identifier) {\r\n            throwErrorTolerant({}, Messages.StrictDelete);\r\n        }\r\n    } else {\r\n        expr = parsePostfixExpression();\r\n    }\r\n\r\n    return expr;\r\n}\r\n\r\nfunction binaryPrecedence(token, allowIn) {\r\n    var prec = 0;\r\n\r\n    if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\r\n        return 0;\r\n    }\r\n\r\n    switch (token.value) {\r\n    case '||':\r\n        prec = 1;\r\n        break;\r\n\r\n    case '&&':\r\n        prec = 2;\r\n        break;\r\n\r\n    case '|':\r\n        prec = 3;\r\n        break;\r\n\r\n    case '^':\r\n        prec = 4;\r\n        break;\r\n\r\n    case '&':\r\n        prec = 5;\r\n        break;\r\n\r\n    case '==':\r\n    case '!=':\r\n    case '===':\r\n    case '!==':\r\n        prec = 6;\r\n        break;\r\n\r\n    case '<':\r\n    case '>':\r\n    case '<=':\r\n    case '>=':\r\n    case 'instanceof':\r\n        prec = 7;\r\n        break;\r\n\r\n    case 'in':\r\n        prec = allowIn ? 7 : 0;\r\n        break;\r\n\r\n    case '<<':\r\n    case '>>':\r\n    case '>>>':\r\n        prec = 8;\r\n        break;\r\n\r\n    case '+':\r\n    case '-':\r\n        prec = 9;\r\n        break;\r\n\r\n    case '*':\r\n    case '/':\r\n    case '%':\r\n        prec = 11;\r\n        break;\r\n\r\n    default:\r\n        break;\r\n    }\r\n\r\n    return prec;\r\n}\r\n\r\n// 11.5 Multiplicative Operators\r\n// 11.6 Additive Operators\r\n// 11.7 Bitwise Shift Operators\r\n// 11.8 Relational Operators\r\n// 11.9 Equality Operators\r\n// 11.10 Binary Bitwise Operators\r\n// 11.11 Binary Logical Operators\r\n\r\nfunction parseBinaryExpression() {\r\n    var marker, markers, expr, token, prec, stack, right, operator, left, i;\r\n\r\n    marker = lookahead;\r\n    left = parseUnaryExpression();\r\n\r\n    token = lookahead;\r\n    prec = binaryPrecedence(token, state.allowIn);\r\n    if (prec === 0) {\r\n        return left;\r\n    }\r\n    token.prec = prec;\r\n    lex();\r\n\r\n    markers = [marker, lookahead];\r\n    right = parseUnaryExpression();\r\n\r\n    stack = [left, token, right];\r\n\r\n    while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\r\n\r\n        // Reduce: make a binary expression from the three topmost entries.\r\n        while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\r\n            right = stack.pop();\r\n            operator = stack.pop().value;\r\n            left = stack.pop();\r\n            expr = delegate.createBinaryExpression(operator, left, right);\r\n            markers.pop();\r\n            marker = markers[markers.length - 1];\r\n            delegate.markEnd(expr, marker);\r\n            stack.push(expr);\r\n        }\r\n\r\n        // Shift.\r\n        token = lex();\r\n        token.prec = prec;\r\n        stack.push(token);\r\n        markers.push(lookahead);\r\n        expr = parseUnaryExpression();\r\n        stack.push(expr);\r\n    }\r\n\r\n    // Final reduce to clean-up the stack.\r\n    i = stack.length - 1;\r\n    expr = stack[i];\r\n    markers.pop();\r\n    while (i > 1) {\r\n        expr = delegate.createBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\r\n        i -= 2;\r\n        marker = markers.pop();\r\n        delegate.markEnd(expr, marker);\r\n    }\r\n\r\n    return expr;\r\n}\r\n\r\n\r\n// 11.12 Conditional Operator\r\n\r\nfunction parseConditionalExpression() {\r\n    var expr, previousAllowIn, consequent, alternate, startToken;\r\n\r\n    startToken = lookahead;\r\n\r\n    expr = parseBinaryExpression();\r\n\r\n    if (match('?')) {\r\n        lex();\r\n        previousAllowIn = state.allowIn;\r\n        state.allowIn = true;\r\n        consequent = parseAssignmentExpression();\r\n        state.allowIn = previousAllowIn;\r\n        expect(':');\r\n        alternate = parseAssignmentExpression();\r\n\r\n        expr = delegate.createConditionalExpression(expr, consequent, alternate);\r\n        delegate.markEnd(expr, startToken);\r\n    }\r\n\r\n    return expr;\r\n}\r\n\r\n// 11.13 Assignment Operators\r\n\r\nfunction parseAssignmentExpression() {\r\n    var token, left, right, node, startToken;\r\n\r\n    token = lookahead;\r\n    startToken = lookahead;\r\n\r\n    node = left = parseConditionalExpression();\r\n\r\n    if (matchAssign()) {\r\n        // LeftHandSideExpression\r\n        if (!isLeftHandSide(left)) {\r\n            throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\r\n        }\r\n\r\n        // 11.13.1\r\n        if (strict && left.type === Syntax.Identifier && isRestrictedWord(left.name)) {\r\n            throwErrorTolerant(token, Messages.StrictLHSAssignment);\r\n        }\r\n\r\n        token = lex();\r\n        right = parseAssignmentExpression();\r\n        node = delegate.markEnd(delegate.createAssignmentExpression(token.value, left, right), startToken);\r\n    }\r\n\r\n    return node;\r\n}\r\n\r\n// 11.14 Comma Operator\r\n\r\nfunction parseExpression() {\r\n    var expr, startToken = lookahead;\r\n\r\n    expr = parseAssignmentExpression();\r\n\r\n    if (match(',')) {\r\n        expr = delegate.createSequenceExpression([ expr ]);\r\n\r\n        while (index < length) {\r\n            if (!match(',')) {\r\n                break;\r\n            }\r\n            lex();\r\n            expr.expressions.push(parseAssignmentExpression());\r\n        }\r\n\r\n        delegate.markEnd(expr, startToken);\r\n    }\r\n\r\n    return expr;\r\n}\r\n\r\n// 12.1 Block\r\n\r\nfunction parseStatementList() {\r\n    var list = [],\r\n        statement;\r\n\r\n    while (index < length) {\r\n        if (match('}')) {\r\n            break;\r\n        }\r\n        statement = parseSourceElement();\r\n        if (typeof statement === 'undefined') {\r\n            break;\r\n        }\r\n        list.push(statement);\r\n    }\r\n\r\n    return list;\r\n}\r\n\r\nfunction parseBlock() {\r\n    var block, startToken;\r\n\r\n    startToken = lookahead;\r\n    expect('{');\r\n\r\n    block = parseStatementList();\r\n\r\n    expect('}');\r\n\r\n    return delegate.markEnd(delegate.createBlockStatement(block), startToken);\r\n}\r\n\r\n// 12.2 Variable Statement\r\n\r\nfunction parseVariableIdentifier() {\r\n    var token, startToken;\r\n\r\n    startToken = lookahead;\r\n    token = lex();\r\n\r\n    if (token.type !== Token.Identifier) {\r\n        throwUnexpected(token);\r\n    }\r\n\r\n    return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\r\n}\r\n\r\nfunction parseVariableDeclaration(kind) {\r\n    var init = null, id, startToken;\r\n\r\n    startToken = lookahead;\r\n    id = parseVariableIdentifier();\r\n\r\n    // 12.2.1\r\n    if (strict && isRestrictedWord(id.name)) {\r\n        throwErrorTolerant({}, Messages.StrictVarName);\r\n    }\r\n\r\n    if (kind === 'const') {\r\n        expect('=');\r\n        init = parseAssignmentExpression();\r\n    } else if (match('=')) {\r\n        lex();\r\n        init = parseAssignmentExpression();\r\n    }\r\n\r\n    return delegate.markEnd(delegate.createVariableDeclarator(id, init), startToken);\r\n}\r\n\r\nfunction parseVariableDeclarationList(kind?) {\r\n    var list = [];\r\n\r\n    do {\r\n        list.push(parseVariableDeclaration(kind));\r\n        if (!match(',')) {\r\n            break;\r\n        }\r\n        lex();\r\n    } while (index < length);\r\n\r\n    return list;\r\n}\r\n\r\nfunction parseVariableStatement() {\r\n    var declarations;\r\n\r\n    expectKeyword('var');\r\n\r\n    declarations = parseVariableDeclarationList();\r\n\r\n    consumeSemicolon();\r\n\r\n    return delegate.createVariableDeclaration(declarations, 'var');\r\n}\r\n\r\n// kind may be `const` or `let`\r\n// Both are experimental and not in the specification yet.\r\n// see http://wiki.ecmascript.org/doku.php?id=harmony:const\r\n// and http://wiki.ecmascript.org/doku.php?id=harmony:let\r\nfunction parseConstLetDeclaration(kind) {\r\n    var declarations, startToken;\r\n\r\n    startToken = lookahead;\r\n\r\n    expectKeyword(kind);\r\n\r\n    declarations = parseVariableDeclarationList(kind);\r\n\r\n    consumeSemicolon();\r\n\r\n    return delegate.markEnd(delegate.createVariableDeclaration(declarations, kind), startToken);\r\n}\r\n\r\n// 12.3 Empty Statement\r\n\r\nfunction parseEmptyStatement() {\r\n    expect(';');\r\n    return delegate.createEmptyStatement();\r\n}\r\n\r\n// 12.4 Expression Statement\r\n\r\nfunction parseExpressionStatement() {\r\n    var expr = parseExpression();\r\n    consumeSemicolon();\r\n    return delegate.createExpressionStatement(expr);\r\n}\r\n\r\n// 12.5 If statement\r\n\r\nfunction parseIfStatement() {\r\n    var test, consequent, alternate;\r\n\r\n    expectKeyword('if');\r\n\r\n    expect('(');\r\n\r\n    test = parseExpression();\r\n\r\n    expect(')');\r\n\r\n    consequent = parseStatement();\r\n\r\n    if (matchKeyword('else')) {\r\n        lex();\r\n        alternate = parseStatement();\r\n    } else {\r\n        alternate = null;\r\n    }\r\n\r\n    return delegate.createIfStatement(test, consequent, alternate);\r\n}\r\n\r\n// 12.6 Iteration Statements\r\n\r\nfunction parseDoWhileStatement() {\r\n    var body, test, oldInIteration;\r\n\r\n    expectKeyword('do');\r\n\r\n    oldInIteration = state.inIteration;\r\n    state.inIteration = true;\r\n\r\n    body = parseStatement();\r\n\r\n    state.inIteration = oldInIteration;\r\n\r\n    expectKeyword('while');\r\n\r\n    expect('(');\r\n\r\n    test = parseExpression();\r\n\r\n    expect(')');\r\n\r\n    if (match(';')) {\r\n        lex();\r\n    }\r\n\r\n    return delegate.createDoWhileStatement(body, test);\r\n}\r\n\r\nfunction parseWhileStatement() {\r\n    var test, body, oldInIteration;\r\n\r\n    expectKeyword('while');\r\n\r\n    expect('(');\r\n\r\n    test = parseExpression();\r\n\r\n    expect(')');\r\n\r\n    oldInIteration = state.inIteration;\r\n    state.inIteration = true;\r\n\r\n    body = parseStatement();\r\n\r\n    state.inIteration = oldInIteration;\r\n\r\n    return delegate.createWhileStatement(test, body);\r\n}\r\n\r\nfunction parseForVariableDeclaration() {\r\n    var token, declarations, startToken;\r\n\r\n    startToken = lookahead;\r\n    token = lex();\r\n    declarations = parseVariableDeclarationList();\r\n\r\n    return delegate.markEnd(delegate.createVariableDeclaration(declarations, token.value), startToken);\r\n}\r\n\r\nfunction parseForStatement() {\r\n    var init, test, update, left, right, body, oldInIteration;\r\n\r\n    init = test = update = null;\r\n\r\n    expectKeyword('for');\r\n\r\n    expect('(');\r\n\r\n    if (match(';')) {\r\n        lex();\r\n    } else {\r\n        if (matchKeyword('var') || matchKeyword('let')) {\r\n            state.allowIn = false;\r\n            init = parseForVariableDeclaration();\r\n            state.allowIn = true;\r\n\r\n            if (init.declarations.length === 1 && matchKeyword('in')) {\r\n                lex();\r\n                left = init;\r\n                right = parseExpression();\r\n                init = null;\r\n            }\r\n        } else {\r\n            state.allowIn = false;\r\n            init = parseExpression();\r\n            state.allowIn = true;\r\n\r\n            if (matchKeyword('in')) {\r\n                // LeftHandSideExpression\r\n                if (!isLeftHandSide(init)) {\r\n                    throwErrorTolerant({}, Messages.InvalidLHSInForIn);\r\n                }\r\n\r\n                lex();\r\n                left = init;\r\n                right = parseExpression();\r\n                init = null;\r\n            }\r\n        }\r\n\r\n        if (typeof left === 'undefined') {\r\n            expect(';');\r\n        }\r\n    }\r\n\r\n    if (typeof left === 'undefined') {\r\n\r\n        if (!match(';')) {\r\n            test = parseExpression();\r\n        }\r\n        expect(';');\r\n\r\n        if (!match(')')) {\r\n            update = parseExpression();\r\n        }\r\n    }\r\n\r\n    expect(')');\r\n\r\n    oldInIteration = state.inIteration;\r\n    state.inIteration = true;\r\n\r\n    body = parseStatement();\r\n\r\n    state.inIteration = oldInIteration;\r\n\r\n    return (typeof left === 'undefined') ?\r\n            delegate.createForStatement(init, test, update, body) :\r\n            delegate.createForInStatement(left, right, body);\r\n}\r\n\r\n// 12.7 The continue statement\r\n\r\nfunction parseContinueStatement() {\r\n    var label = null, key;\r\n\r\n    expectKeyword('continue');\r\n\r\n    // Optimize the most common form: 'continue;'.\r\n    if (source.charCodeAt(index) === 0x3B) {\r\n        lex();\r\n\r\n        if (!state.inIteration) {\r\n            throwError({}, Messages.IllegalContinue);\r\n        }\r\n\r\n        return delegate.createContinueStatement(null);\r\n    }\r\n\r\n    if (peekLineTerminator()) {\r\n        if (!state.inIteration) {\r\n            throwError({}, Messages.IllegalContinue);\r\n        }\r\n\r\n        return delegate.createContinueStatement(null);\r\n    }\r\n\r\n    if (lookahead.type === Token.Identifier) {\r\n        label = parseVariableIdentifier();\r\n\r\n        key = '$' + label.name;\r\n        if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\r\n            throwError({}, Messages.UnknownLabel, label.name);\r\n        }\r\n    }\r\n\r\n    consumeSemicolon();\r\n\r\n    if (label === null && !state.inIteration) {\r\n        throwError({}, Messages.IllegalContinue);\r\n    }\r\n\r\n    return delegate.createContinueStatement(label);\r\n}\r\n\r\n// 12.8 The break statement\r\n\r\nfunction parseBreakStatement() {\r\n    var label = null, key;\r\n\r\n    expectKeyword('break');\r\n\r\n    // Catch the very common case first: immediately a semicolon (U+003B).\r\n    if (source.charCodeAt(index) === 0x3B) {\r\n        lex();\r\n\r\n        if (!(state.inIteration || state.inSwitch)) {\r\n            throwError({}, Messages.IllegalBreak);\r\n        }\r\n\r\n        return delegate.createBreakStatement(null);\r\n    }\r\n\r\n    if (peekLineTerminator()) {\r\n        if (!(state.inIteration || state.inSwitch)) {\r\n            throwError({}, Messages.IllegalBreak);\r\n        }\r\n\r\n        return delegate.createBreakStatement(null);\r\n    }\r\n\r\n    if (lookahead.type === Token.Identifier) {\r\n        label = parseVariableIdentifier();\r\n\r\n        key = '$' + label.name;\r\n        if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\r\n            throwError({}, Messages.UnknownLabel, label.name);\r\n        }\r\n    }\r\n\r\n    consumeSemicolon();\r\n\r\n    if (label === null && !(state.inIteration || state.inSwitch)) {\r\n        throwError({}, Messages.IllegalBreak);\r\n    }\r\n\r\n    return delegate.createBreakStatement(label);\r\n}\r\n\r\n// 12.9 The return statement\r\n\r\nfunction parseReturnStatement() {\r\n    var argument = null;\r\n\r\n    expectKeyword('return');\r\n\r\n    if (!state.inFunctionBody) {\r\n        throwErrorTolerant({}, Messages.IllegalReturn);\r\n    }\r\n\r\n    // 'return' followed by a space and an identifier is very common.\r\n    if (source.charCodeAt(index) === 0x20) {\r\n        if (isIdentifierStart(source.charCodeAt(index + 1))) {\r\n            argument = parseExpression();\r\n            consumeSemicolon();\r\n            return delegate.createReturnStatement(argument);\r\n        }\r\n    }\r\n\r\n    if (peekLineTerminator()) {\r\n        return delegate.createReturnStatement(null);\r\n    }\r\n\r\n    if (!match(';')) {\r\n        if (!match('}') && lookahead.type !== Token.EOF) {\r\n            argument = parseExpression();\r\n        }\r\n    }\r\n\r\n    consumeSemicolon();\r\n\r\n    return delegate.createReturnStatement(argument);\r\n}\r\n\r\n// 12.10 The with statement\r\n\r\nfunction parseWithStatement() {\r\n    var object, body;\r\n\r\n    if (strict) {\r\n        // TODO(ikarienator): Should we update the test cases instead?\r\n        skipComment();\r\n        throwErrorTolerant({}, Messages.StrictModeWith);\r\n    }\r\n\r\n    expectKeyword('with');\r\n\r\n    expect('(');\r\n\r\n    object = parseExpression();\r\n\r\n    expect(')');\r\n\r\n    body = parseStatement();\r\n\r\n    return delegate.createWithStatement(object, body);\r\n}\r\n\r\n// 12.10 The swith statement\r\n\r\nfunction parseSwitchCase() {\r\n    var test, consequent = [], statement, startToken;\r\n\r\n    startToken = lookahead;\r\n    if (matchKeyword('default')) {\r\n        lex();\r\n        test = null;\r\n    } else {\r\n        expectKeyword('case');\r\n        test = parseExpression();\r\n    }\r\n    expect(':');\r\n\r\n    while (index < length) {\r\n        if (match('}') || matchKeyword('default') || matchKeyword('case')) {\r\n            break;\r\n        }\r\n        statement = parseStatement();\r\n        consequent.push(statement);\r\n    }\r\n\r\n    return delegate.markEnd(delegate.createSwitchCase(test, consequent), startToken);\r\n}\r\n\r\nfunction parseSwitchStatement() {\r\n    var discriminant, cases, clause, oldInSwitch, defaultFound;\r\n\r\n    expectKeyword('switch');\r\n\r\n    expect('(');\r\n\r\n    discriminant = parseExpression();\r\n\r\n    expect(')');\r\n\r\n    expect('{');\r\n\r\n    cases = [];\r\n\r\n    if (match('}')) {\r\n        lex();\r\n        return delegate.createSwitchStatement(discriminant, cases);\r\n    }\r\n\r\n    oldInSwitch = state.inSwitch;\r\n    state.inSwitch = true;\r\n    defaultFound = false;\r\n\r\n    while (index < length) {\r\n        if (match('}')) {\r\n            break;\r\n        }\r\n        clause = parseSwitchCase();\r\n        if (clause.test === null) {\r\n            if (defaultFound) {\r\n                throwError({}, Messages.MultipleDefaultsInSwitch);\r\n            }\r\n            defaultFound = true;\r\n        }\r\n        cases.push(clause);\r\n    }\r\n\r\n    state.inSwitch = oldInSwitch;\r\n\r\n    expect('}');\r\n\r\n    return delegate.createSwitchStatement(discriminant, cases);\r\n}\r\n\r\n// 12.13 The throw statement\r\n\r\nfunction parseThrowStatement() {\r\n    var argument;\r\n\r\n    expectKeyword('throw');\r\n\r\n    if (peekLineTerminator()) {\r\n        throwError({}, Messages.NewlineAfterThrow);\r\n    }\r\n\r\n    argument = parseExpression();\r\n\r\n    consumeSemicolon();\r\n\r\n    return delegate.createThrowStatement(argument);\r\n}\r\n\r\n// 12.14 The try statement\r\n\r\nfunction parseCatchClause() {\r\n    var param, body, startToken;\r\n\r\n    startToken = lookahead;\r\n    expectKeyword('catch');\r\n\r\n    expect('(');\r\n    if (match(')')) {\r\n        throwUnexpected(lookahead);\r\n    }\r\n\r\n    param = parseVariableIdentifier();\r\n    // 12.14.1\r\n    if (strict && isRestrictedWord(param.name)) {\r\n        throwErrorTolerant({}, Messages.StrictCatchVariable);\r\n    }\r\n\r\n    expect(')');\r\n    body = parseBlock();\r\n    return delegate.markEnd(delegate.createCatchClause(param, body), startToken);\r\n}\r\n\r\nfunction parseTryStatement() {\r\n    var block, handlers = [], finalizer = null;\r\n\r\n    expectKeyword('try');\r\n\r\n    block = parseBlock();\r\n\r\n    if (matchKeyword('catch')) {\r\n        handlers.push(parseCatchClause());\r\n    }\r\n\r\n    if (matchKeyword('finally')) {\r\n        lex();\r\n        finalizer = parseBlock();\r\n    }\r\n\r\n    if (handlers.length === 0 && !finalizer) {\r\n        throwError({}, Messages.NoCatchOrFinally);\r\n    }\r\n\r\n    return delegate.createTryStatement(block, [], handlers, finalizer);\r\n}\r\n\r\n// 12.15 The debugger statement\r\n\r\nfunction parseDebuggerStatement() {\r\n    expectKeyword('debugger');\r\n\r\n    consumeSemicolon();\r\n\r\n    return delegate.createDebuggerStatement();\r\n}\r\n\r\n// 12 Statements\r\n\r\nfunction parseStatement() {\r\n    var type = lookahead.type,\r\n        expr,\r\n        labeledBody,\r\n        key,\r\n        startToken;\r\n\r\n    if (type === Token.EOF) {\r\n        throwUnexpected(lookahead);\r\n    }\r\n\r\n    if (type === Token.Punctuator && lookahead.value === '{') {\r\n        return parseBlock();\r\n    }\r\n\r\n    startToken = lookahead;\r\n\r\n    if (type === Token.Punctuator) {\r\n        switch (lookahead.value) {\r\n        case ';':\r\n            return delegate.markEnd(parseEmptyStatement(), startToken);\r\n        case '(':\r\n            return delegate.markEnd(parseExpressionStatement(), startToken);\r\n        default:\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (type === Token.Keyword) {\r\n        switch (lookahead.value) {\r\n        case 'break':\r\n            return delegate.markEnd(parseBreakStatement(), startToken);\r\n        case 'continue':\r\n            return delegate.markEnd(parseContinueStatement(), startToken);\r\n        case 'debugger':\r\n            return delegate.markEnd(parseDebuggerStatement(), startToken);\r\n        case 'do':\r\n            return delegate.markEnd(parseDoWhileStatement(), startToken);\r\n        case 'for':\r\n            return delegate.markEnd(parseForStatement(), startToken);\r\n        case 'function':\r\n            return delegate.markEnd(parseFunctionDeclaration(), startToken);\r\n        case 'if':\r\n            return delegate.markEnd(parseIfStatement(), startToken);\r\n        case 'return':\r\n            return delegate.markEnd(parseReturnStatement(), startToken);\r\n        case 'switch':\r\n            return delegate.markEnd(parseSwitchStatement(), startToken);\r\n        case 'throw':\r\n            return delegate.markEnd(parseThrowStatement(), startToken);\r\n        case 'try':\r\n            return delegate.markEnd(parseTryStatement(), startToken);\r\n        case 'var':\r\n            return delegate.markEnd(parseVariableStatement(), startToken);\r\n        case 'while':\r\n            return delegate.markEnd(parseWhileStatement(), startToken);\r\n        case 'with':\r\n            return delegate.markEnd(parseWithStatement(), startToken);\r\n        default:\r\n            break;\r\n        }\r\n    }\r\n\r\n    expr = parseExpression();\r\n\r\n    // 12.12 Labelled Statements\r\n    if ((expr.type === Syntax.Identifier) && match(':')) {\r\n        lex();\r\n\r\n        key = '$' + expr.name;\r\n        if (Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\r\n            throwError({}, Messages.Redeclaration, 'Label', expr.name);\r\n        }\r\n\r\n        state.labelSet[key] = true;\r\n        labeledBody = parseStatement();\r\n        delete state.labelSet[key];\r\n        return delegate.markEnd(delegate.createLabeledStatement(expr, labeledBody), startToken);\r\n    }\r\n\r\n    consumeSemicolon();\r\n\r\n    return delegate.markEnd(delegate.createExpressionStatement(expr), startToken);\r\n}\r\n\r\n// 13 Function Definition\r\n\r\nfunction parseFunctionSourceElements() {\r\n    var sourceElement, sourceElements = [], token, directive, firstRestricted,\r\n        oldLabelSet, oldInIteration, oldInSwitch, oldInFunctionBody, startToken;\r\n\r\n    startToken = lookahead;\r\n    expect('{');\r\n\r\n    while (index < length) {\r\n        if (lookahead.type !== Token.StringLiteral) {\r\n            break;\r\n        }\r\n        token = lookahead;\r\n\r\n        sourceElement = parseSourceElement();\r\n        sourceElements.push(sourceElement);\r\n        if (sourceElement.expression.type !== Syntax.Literal) {\r\n            // this is not directive\r\n            break;\r\n        }\r\n        directive = source.slice(token.start + 1, token.end - 1);\r\n        if (directive === 'use strict') {\r\n            strict = true;\r\n            if (firstRestricted) {\r\n                throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\r\n            }\r\n        } else {\r\n            if (!firstRestricted && token.octal) {\r\n                firstRestricted = token;\r\n            }\r\n        }\r\n    }\r\n\r\n    oldLabelSet = state.labelSet;\r\n    oldInIteration = state.inIteration;\r\n    oldInSwitch = state.inSwitch;\r\n    oldInFunctionBody = state.inFunctionBody;\r\n\r\n    state.labelSet = {};\r\n    state.inIteration = false;\r\n    state.inSwitch = false;\r\n    state.inFunctionBody = true;\r\n\r\n    while (index < length) {\r\n        if (match('}')) {\r\n            break;\r\n        }\r\n        sourceElement = parseSourceElement();\r\n        if (typeof sourceElement === 'undefined') {\r\n            break;\r\n        }\r\n        sourceElements.push(sourceElement);\r\n    }\r\n\r\n    expect('}');\r\n\r\n    state.labelSet = oldLabelSet;\r\n    state.inIteration = oldInIteration;\r\n    state.inSwitch = oldInSwitch;\r\n    state.inFunctionBody = oldInFunctionBody;\r\n\r\n    return delegate.markEnd(delegate.createBlockStatement(sourceElements), startToken);\r\n}\r\n\r\nfunction parseParams(firstRestricted) {\r\n    var param, params = [], token, stricted, paramSet, key, message;\r\n    expect('(');\r\n\r\n    if (!match(')')) {\r\n        paramSet = {};\r\n        while (index < length) {\r\n            token = lookahead;\r\n            param = parseVariableIdentifier();\r\n            key = '$' + token.value;\r\n            if (strict) {\r\n                if (isRestrictedWord(token.value)) {\r\n                    stricted = token;\r\n                    message = Messages.StrictParamName;\r\n                }\r\n                if (Object.prototype.hasOwnProperty.call(paramSet, key)) {\r\n                    stricted = token;\r\n                    message = Messages.StrictParamDupe;\r\n                }\r\n            } else if (!firstRestricted) {\r\n                if (isRestrictedWord(token.value)) {\r\n                    firstRestricted = token;\r\n                    message = Messages.StrictParamName;\r\n                } else if (isStrictModeReservedWord(token.value)) {\r\n                    firstRestricted = token;\r\n                    message = Messages.StrictReservedWord;\r\n                } else if (Object.prototype.hasOwnProperty.call(paramSet, key)) {\r\n                    firstRestricted = token;\r\n                    message = Messages.StrictParamDupe;\r\n                }\r\n            }\r\n            params.push(param);\r\n            paramSet[key] = true;\r\n            if (match(')')) {\r\n                break;\r\n            }\r\n            expect(',');\r\n        }\r\n    }\r\n\r\n    expect(')');\r\n\r\n    return {\r\n        params: params,\r\n        stricted: stricted,\r\n        firstRestricted: firstRestricted,\r\n        message: message\r\n    };\r\n}\r\n\r\nfunction parseFunctionDeclaration() {\r\n    var id, params = [], body, token, stricted, tmp, firstRestricted, message, previousStrict, startToken;\r\n\r\n    startToken = lookahead;\r\n\r\n    expectKeyword('function');\r\n    token = lookahead;\r\n    id = parseVariableIdentifier();\r\n    if (strict) {\r\n        if (isRestrictedWord(token.value)) {\r\n            throwErrorTolerant(token, Messages.StrictFunctionName);\r\n        }\r\n    } else {\r\n        if (isRestrictedWord(token.value)) {\r\n            firstRestricted = token;\r\n            message = Messages.StrictFunctionName;\r\n        } else if (isStrictModeReservedWord(token.value)) {\r\n            firstRestricted = token;\r\n            message = Messages.StrictReservedWord;\r\n        }\r\n    }\r\n\r\n    tmp = parseParams(firstRestricted);\r\n    params = tmp.params;\r\n    stricted = tmp.stricted;\r\n    firstRestricted = tmp.firstRestricted;\r\n    if (tmp.message) {\r\n        message = tmp.message;\r\n    }\r\n\r\n    previousStrict = strict;\r\n    body = parseFunctionSourceElements();\r\n    if (strict && firstRestricted) {\r\n        throwError(firstRestricted, message);\r\n    }\r\n    if (strict && stricted) {\r\n        throwErrorTolerant(stricted, message);\r\n    }\r\n    strict = previousStrict;\r\n\r\n    return delegate.markEnd(delegate.createFunctionDeclaration(id, params, [], body), startToken);\r\n}\r\n\r\nfunction parseFunctionExpression() {\r\n    var token, id = null, stricted, firstRestricted, message, tmp, params = [], body, previousStrict, startToken;\r\n\r\n    startToken = lookahead;\r\n    expectKeyword('function');\r\n\r\n    if (!match('(')) {\r\n        token = lookahead;\r\n        id = parseVariableIdentifier();\r\n        if (strict) {\r\n            if (isRestrictedWord(token.value)) {\r\n                throwErrorTolerant(token, Messages.StrictFunctionName);\r\n            }\r\n        } else {\r\n            if (isRestrictedWord(token.value)) {\r\n                firstRestricted = token;\r\n                message = Messages.StrictFunctionName;\r\n            } else if (isStrictModeReservedWord(token.value)) {\r\n                firstRestricted = token;\r\n                message = Messages.StrictReservedWord;\r\n            }\r\n        }\r\n    }\r\n\r\n    tmp = parseParams(firstRestricted);\r\n    params = tmp.params;\r\n    stricted = tmp.stricted;\r\n    firstRestricted = tmp.firstRestricted;\r\n    if (tmp.message) {\r\n        message = tmp.message;\r\n    }\r\n\r\n    previousStrict = strict;\r\n    body = parseFunctionSourceElements();\r\n    if (strict && firstRestricted) {\r\n        throwError(firstRestricted, message);\r\n    }\r\n    if (strict && stricted) {\r\n        throwErrorTolerant(stricted, message);\r\n    }\r\n    strict = previousStrict;\r\n\r\n    return delegate.markEnd(delegate.createFunctionExpression(id, params, [], body), startToken);\r\n}\r\n\r\n// 14 Program\r\n\r\nfunction parseSourceElement() {\r\n    if (lookahead.type === Token.Keyword) {\r\n        switch (lookahead.value) {\r\n        case 'const':\r\n        case 'let':\r\n            return parseConstLetDeclaration(lookahead.value);\r\n        case 'function':\r\n            return parseFunctionDeclaration();\r\n        default:\r\n            return parseStatement();\r\n        }\r\n    }\r\n\r\n    if (lookahead.type !== Token.EOF) {\r\n        return parseStatement();\r\n    }\r\n}\r\n\r\nfunction parseSourceElements() {\r\n    var sourceElement, sourceElements = [], token, directive, firstRestricted;\r\n\r\n    while (index < length) {\r\n        token = lookahead;\r\n        if (token.type !== Token.StringLiteral) {\r\n            break;\r\n        }\r\n\r\n        sourceElement = parseSourceElement();\r\n        sourceElements.push(sourceElement);\r\n        if (sourceElement.expression.type !== Syntax.Literal) {\r\n            // this is not directive\r\n            break;\r\n        }\r\n        directive = source.slice(token.start + 1, token.end - 1);\r\n        if (directive === 'use strict') {\r\n            strict = true;\r\n            if (firstRestricted) {\r\n                throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\r\n            }\r\n        } else {\r\n            if (!firstRestricted && token.octal) {\r\n                firstRestricted = token;\r\n            }\r\n        }\r\n    }\r\n\r\n    while (index < length) {\r\n        sourceElement = parseSourceElement();\r\n        /* istanbul ignore if */\r\n        if (typeof sourceElement === 'undefined') {\r\n            break;\r\n        }\r\n        sourceElements.push(sourceElement);\r\n    }\r\n    return sourceElements;\r\n}\r\n\r\nfunction parseProgram() {\r\n    var body, startToken;\r\n\r\n    skipComment();\r\n    peek();\r\n    startToken = lookahead;\r\n    strict = false;\r\n\r\n    body = parseSourceElements();\r\n    return delegate.markEnd(delegate.createProgram(body), startToken);\r\n}\r\n\r\nfunction filterTokenLocation() {\r\n    var i, entry, token, tokens = [];\r\n\r\n    for (i = 0; i < extra.tokens.length; ++i) {\r\n        entry = extra.tokens[i];\r\n        token = {\r\n            type: entry.type,\r\n            value: entry.value\r\n        };\r\n        if (extra.range) {\r\n            token.range = entry.range;\r\n        }\r\n        if (extra.loc) {\r\n            token.loc = entry.loc;\r\n        }\r\n        tokens.push(token);\r\n    }\r\n\r\n    extra.tokens = tokens;\r\n}\r\n\r\nexport function tokenize(code, options) {\r\n    var toString,\r\n        token,\r\n        tokens;\r\n\r\n    toString = String;\r\n    if (typeof code !== 'string' && !(code instanceof String)) {\r\n        code = toString(code);\r\n    }\r\n\r\n    delegate = SyntaxTreeDelegate;\r\n    source = code;\r\n    index = 0;\r\n    lineNumber = (source.length > 0) ? 1 : 0;\r\n    lineStart = 0;\r\n    length = source.length;\r\n    lookahead = null;\r\n    state = {\r\n        allowIn: true,\r\n        labelSet: {},\r\n        inFunctionBody: false,\r\n        inIteration: false,\r\n        inSwitch: false,\r\n        lastCommentStart: -1\r\n    };\r\n\r\n    extra = {};\r\n\r\n    // Options matching.\r\n    options = options || {};\r\n\r\n    // Of course we collect tokens here.\r\n    options.tokens = true;\r\n    extra.tokens = [];\r\n    extra.tokenize = true;\r\n    // The following two fields are necessary to compute the Regex tokens.\r\n    extra.openParenToken = -1;\r\n    extra.openCurlyToken = -1;\r\n\r\n    extra.range = (typeof options.range === 'boolean') && options.range;\r\n    extra.loc = (typeof options.loc === 'boolean') && options.loc;\r\n\r\n    if (typeof options.comment === 'boolean' && options.comment) {\r\n        extra.comments = [];\r\n    }\r\n    if (typeof options.tolerant === 'boolean' && options.tolerant) {\r\n        extra.errors = [];\r\n    }\r\n\r\n    try {\r\n        peek();\r\n        if (lookahead.type === Token.EOF) {\r\n            return extra.tokens;\r\n        }\r\n\r\n        token = lex();\r\n        while (lookahead.type !== Token.EOF) {\r\n            try {\r\n                token = lex();\r\n            } catch (lexError) {\r\n                token = lookahead;\r\n                if (extra.errors) {\r\n                    extra.errors.push(lexError);\r\n                    // We have to break on the first error\r\n                    // to avoid infinite loops.\r\n                    break;\r\n                } else {\r\n                    throw lexError;\r\n                }\r\n            }\r\n        }\r\n\r\n        filterTokenLocation();\r\n        tokens = extra.tokens;\r\n        if (typeof extra.comments !== 'undefined') {\r\n            tokens.comments = extra.comments;\r\n        }\r\n        if (typeof extra.errors !== 'undefined') {\r\n            tokens.errors = extra.errors;\r\n        }\r\n    } catch (e) {\r\n        throw e;\r\n    } finally {\r\n        extra = {};\r\n    }\r\n    return tokens;\r\n}\r\n\r\nexport function parse(code, options?) {\r\n    var program, toString;\r\n\r\n    toString = String;\r\n    if (typeof code !== 'string' && !(code instanceof String)) {\r\n        code = toString(code);\r\n    }\r\n\r\n    delegate = SyntaxTreeDelegate;\r\n    source = code;\r\n    index = 0;\r\n    lineNumber = (source.length > 0) ? 1 : 0;\r\n    lineStart = 0;\r\n    length = source.length;\r\n    lookahead = null;\r\n    state = {\r\n        allowIn: true,\r\n        labelSet: {},\r\n        inFunctionBody: false,\r\n        inIteration: false,\r\n        inSwitch: false,\r\n        lastCommentStart: -1\r\n    };\r\n\r\n    extra = {};\r\n    if (typeof options !== 'undefined') {\r\n        extra.range = (typeof options.range === 'boolean') && options.range;\r\n        extra.loc = (typeof options.loc === 'boolean') && options.loc;\r\n        extra.attachComment = (typeof options.attachComment === 'boolean') && options.attachComment;\r\n\r\n        if (extra.loc && options.source !== null && options.source !== undefined) {\r\n            extra.source = toString(options.source);\r\n        }\r\n\r\n        if (typeof options.tokens === 'boolean' && options.tokens) {\r\n            extra.tokens = [];\r\n        }\r\n        if (typeof options.comment === 'boolean' && options.comment) {\r\n            extra.comments = [];\r\n        }\r\n        if (typeof options.tolerant === 'boolean' && options.tolerant) {\r\n            extra.errors = [];\r\n        }\r\n        if (extra.attachComment) {\r\n            extra.range = true;\r\n            extra.comments = [];\r\n            extra.bottomRightStack = [];\r\n            extra.trailingComments = [];\r\n            extra.leadingComments = [];\r\n        }\r\n    }\r\n\r\n    try {\r\n        program = parseProgram();\r\n        if (typeof extra.comments !== 'undefined') {\r\n            program.comments = extra.comments;\r\n        }\r\n        if (typeof extra.tokens !== 'undefined') {\r\n            filterTokenLocation();\r\n            program.tokens = extra.tokens;\r\n        }\r\n        if (typeof extra.errors !== 'undefined') {\r\n            program.errors = extra.errors;\r\n        }\r\n    } catch (e) {\r\n        throw e;\r\n    } finally {\r\n        extra = {};\r\n    }\r\n\r\n    return program;\r\n}\r\n\r\n// Sync with *.json manifests.\r\nexport const version = '1.2.2';\r\n\r\n/* vim: set sw=4 ts=4 et tw=80 : */\r\n", "\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nexport function slice(arr : any[], start? : number, end? : number, step? : number) {\r\n  function integer(val) {\r\n    return String(val).match(/^[0-9]+$/) ? parseInt(val) :\r\n      Number.isFinite(val) ? parseInt(val, 10) : 0;\r\n  }\r\n  \r\n  if (typeof start == 'string') throw new Error(\"start cannot be a string\");\r\n  if (typeof end == 'string') throw new Error(\"end cannot be a string\");\r\n  if (typeof step == 'string') throw new Error(\"step cannot be a string\");\r\n\r\n  var len = arr.length;\r\n\r\n  if (step === 0) throw new Error(\"step cannot be zero\");\r\n  step = step ? integer(step) : 1;\r\n\r\n  // normalize negative values\r\n  start = start < 0 ? len + start : start;\r\n  end = end < 0 ? len + end : end;\r\n\r\n  // default extents to extents\r\n  start = integer(start === 0 ? 0 : !start ? (step > 0 ? 0 : len - 1) : start);\r\n  end = integer(end === 0 ? 0 : !end ? (step > 0 ? len : -1) : end);\r\n\r\n  // clamp extents\r\n  start = step > 0 ? Math.max(0, start) : Math.min(len, start);\r\n  end = step > 0 ? Math.min(end, len) : Math.max(-1, end);\r\n\r\n  // return empty if extents are backwards\r\n  if (step > 0 && end <= start) return [];\r\n  if (step < 0 && start <= end) return [];\r\n\r\n  var result = [];\r\n\r\n  for (var i = start; i != end; i += step) {\r\n    if ((step < 0 && i <= end) || (step > 0 && i >= end)) break;\r\n    result.push(arr[i]);\r\n  }\r\n\r\n  return result;\r\n}\r\n", "import * as aesprim from './esprima';\r\nimport type * as ESTree from 'estree';\r\n\r\nimport { slice } from './slice';\r\nimport { JSONPath } from '.';\r\nimport _evaluate from 'static-eval';\r\n\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction traverser(recurse?) {\r\n  return function(partial, ref, passable, count) {\r\n\r\n    var value = partial.value;\r\n    var path = partial.path;\r\n\r\n    var results = [];\r\n\r\n    var descend = function(value, path) {\r\n\r\n      if (is_array(value)) {\r\n        value.forEach(function(element, index) {\r\n          if (results.length >= count) { return }\r\n          if (passable(index, element, ref)) {\r\n            results.push({ path: path.concat(index), value: element });\r\n          }\r\n        });\r\n        value.forEach(function(element, index) {\r\n          if (results.length >= count) { return }\r\n          if (recurse) {\r\n            descend(element, path.concat(index));\r\n          }\r\n        });\r\n      } else if (is_object(value)) {\r\n        Object.keys(value).forEach(function(k) {\r\n          if (results.length >= count) { return }\r\n          if (passable(k, value[k], ref)) {\r\n            results.push({ path: path.concat(k), value: value[k] });\r\n          }\r\n        })\r\n        Object.keys(value).forEach(function(k) {\r\n          if (results.length >= count) { return }\r\n          if (recurse) {\r\n            descend(value[k], path.concat(k));\r\n          }\r\n        });\r\n      }\r\n    }.bind(this);\r\n    descend(value, path);\r\n    return results;\r\n  }\r\n}\r\n\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction evaluate(ast: ESTree.Expression, vars: Record<string,any>) {\r\n  try { \r\n    return _evaluate(ast, vars);\r\n  } catch (e) {\r\n  }\r\n}\r\n\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction _descend(passable) {\r\n  return function(component, partial, count) {\r\n    return this.descend(partial, component.expression.value, passable, count);\r\n  }\r\n}\r\n\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction _traverse(passable) {\r\n  return function(component, partial, count) {\r\n    return this.traverse(partial, component.expression.value, passable, count);\r\n  }\r\n}\r\n\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction unique(results : any[]) {\r\n  results = results.filter(d => d);\r\n\r\n  return uniq(\r\n    results,\r\n    r => r.path.map(function(c) { return String(c).replace('-', '--') }).join('-')\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction _parse_nullable_int(val) {\r\n  var sval = String(val);\r\n  return sval.match(/^-?[0-9]+$/) ? parseInt(sval) : null;\r\n}\r\n\r\n\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction is_array(val) {\r\n  return Array.isArray(val);\r\n}\r\n\r\n\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction is_object(val) {\r\n  // is this a non-array, non-null object?\r\n  return val && !(val instanceof Array) && val instanceof Object;\r\n}\r\n\r\n\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction eval_recurse(partial, src, template) {\r\n\r\n  var ast = aesprim.parse(src).body[0].expression;\r\n  var value = evaluate(ast, { '@': partial.value });\r\n  var path = template.replace(/\\{\\{\\s*value\\s*\\}\\}/g, value);\r\n\r\n  var results = JSONPath.nodes(partial.value, path);\r\n  results.forEach(function(r) {\r\n    r.path = partial.path.concat(r.path.slice(1));\r\n  });\r\n\r\n  return results;\r\n}\r\n\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nexport class Handlers {\r\n  constructor() {\r\n    this.initialize();\r\n  }\r\n\r\n  traverse;\r\n  descend;\r\n\r\n  private _fns = {\r\n    'member-child-identifier': (component, partial) => {\r\n      var key = component.expression.value;\r\n      var value = partial.value;\r\n      if (value instanceof Object && key in value) {\r\n        return [ { value: value[key], path: partial.path.concat(key) } ]\r\n      }\r\n    },\r\n  \r\n    'member-descendant-identifier':\r\n      _traverse(function(key, value, ref) { return key == ref }),\r\n  \r\n    'subscript-child-numeric_literal':\r\n      _descend(function(key, value, ref) { return key === ref }),\r\n  \r\n    'member-child-numeric_literal':\r\n      _descend(function(key, value, ref) { return String(key) === String(ref) }),\r\n  \r\n    'subscript-descendant-numeric_literal':\r\n      _traverse(function(key, value, ref) { return key === ref }),\r\n  \r\n    'member-child-wildcard':\r\n      _descend(function() { return true }),\r\n  \r\n    'member-descendant-wildcard':\r\n      _traverse(function() { return true }),\r\n  \r\n    'subscript-descendant-wildcard':\r\n      _traverse(function() { return true }),\r\n  \r\n    'subscript-child-wildcard':\r\n      _descend(function() { return true }),\r\n  \r\n    'subscript-child-slice': function(component, partial) {\r\n      if (is_array(partial.value)) {\r\n        var args = component.expression.value.split(':').map(_parse_nullable_int);\r\n        var values = partial.value.map(function(v, i) { return { value: v, path: partial.path.concat(i) } });\r\n        return slice.apply(null, [values].concat(args));\r\n      }\r\n    },\r\n  \r\n    'subscript-child-union': function(component, partial) {\r\n      var results = [];\r\n      component.expression.value.forEach(function(component) {\r\n        var _component = { operation: 'subscript', scope: 'child', expression: component.expression };\r\n        var handler = this.resolve(_component);\r\n        var _results = handler(_component, partial);\r\n        if (_results) {\r\n          results = results.concat(_results);\r\n        }\r\n      }, this);\r\n  \r\n      return unique(results);\r\n    },\r\n  \r\n    'subscript-descendant-union': function(component, partial, count) {\r\n      var self = this;\r\n  \r\n      var results = [];\r\n      var nodes = JSONPath.nodes(partial, '$..*').slice(1);\r\n  \r\n      nodes.forEach(function(node) {\r\n        if (results.length >= count) return;\r\n        component.expression.value.forEach(function(component) {\r\n          var _component = { operation: 'subscript', scope: 'child', expression: component.expression };\r\n          var handler = self.resolve(_component);\r\n          var _results = handler(_component, node);\r\n          results = results.concat(_results);\r\n        });\r\n      });\r\n  \r\n      return unique(results);\r\n    },\r\n  \r\n    'subscript-child-filter_expression': function(component, partial, count) {\r\n  \r\n      // slice out the expression from ?(expression)\r\n      var src = component.expression.value.slice(2, -1);\r\n      var ast = aesprim.parse(src).body[0].expression;\r\n  \r\n      var passable = function(key, value) {\r\n        return evaluate(ast, { '@': value });\r\n      }\r\n  \r\n      return this.descend(partial, null, passable, count);\r\n  \r\n    },\r\n  \r\n    'subscript-descendant-filter_expression': function(component, partial, count) {\r\n  \r\n      // slice out the expression from ?(expression)\r\n      var src = component.expression.value.slice(2, -1);\r\n      var ast = aesprim.parse(src).body[0].expression;\r\n  \r\n      var passable = function(key, value) {\r\n        return evaluate(ast, { '@': value });\r\n      }\r\n  \r\n      return this.traverse(partial, null, passable, count);\r\n    },\r\n  \r\n    'subscript-child-script_expression': function(component, partial) {\r\n      var exp = component.expression.value.slice(1, -1);\r\n      return eval_recurse(partial, exp, '$[{{value}}]');\r\n    },\r\n  \r\n    'member-child-script_expression': function(component, partial) {\r\n      var exp = component.expression.value.slice(1, -1);\r\n      return eval_recurse(partial, exp, '$.{{value}}');\r\n    },\r\n  \r\n    'member-descendant-script_expression': function(component, partial) {\r\n      var exp = component.expression.value.slice(1, -1);\r\n      return eval_recurse(partial, exp, '$..value');\r\n    }\r\n  };\r\n\r\n  private initialize() {\r\n    this.traverse = traverser(true);\r\n    this.descend = traverser();\r\n\r\n    this._fns['subscript-child-string_literal'] =\r\n      this._fns['member-child-identifier'];\r\n    \r\n    this._fns['member-descendant-numeric_literal'] =\r\n      this._fns['subscript-descendant-string_literal'] =\r\n      this._fns['member-descendant-identifier'];\r\n\r\n  }\r\n\r\n  resolve(component) {\r\n    var key = [ component.operation, component.scope, component.expression.type ].join('-');\r\n    var method = this._fns[key];\r\n  \r\n    if (!method) throw new Error(\"couldn't resolve key: \" + key);\r\n    return method.bind(this);\r\n  }\r\n\r\n  register(key, handler) {\r\n    if (!(handler instanceof Function)) {\r\n      throw new Error(\"handler must be a function\");\r\n    }\r\n  \r\n    this._fns[key] = handler;\r\n  }\r\n}\r\n\r\nfunction uniq<T>(array: T[], iteratee: (t: T, i: number) => any) {\r\n  var result = [];\r\n  var seen = [];\r\n  for (var i = 0, length = array?.length; i < length; i++) {\r\n    var value = array[i],\r\n        computed = iteratee ? iteratee(value, i) : value;\r\n    \r\n    if (!seen.includes(computed)) {\r\n      seen.push(computed);\r\n      result.push(value);\r\n    }\r\n  }\r\n  return result;\r\n}", "/**\r\n * Defines the token types of JSONPath by regular expression.\r\n * @internal\r\n * @hidden\r\n */\r\nexport const TOKENS = {\r\n  identifier: \"[a-zA-Z_]+[a-zA-Z0-9_]*\",\r\n  integer: \"-?(?:0|[1-9][0-9]*)\",\r\n  qq_string: \"\\\"(?:\\\\\\\\[\\\"bfnrt/\\\\\\\\]|\\\\\\\\u[a-fA-F0-9]{4}|[^\\\"\\\\\\\\])*\\\"\",\r\n  q_string: \"'(?:\\\\\\\\[\\'bfnrt/\\\\\\\\]|\\\\\\\\u[a-fA-F0-9]{4}|[^\\'\\\\\\\\])*'\"\r\n};\r\n", "import * as gparser from '../generated/parser';\r\n\r\n/**\r\n * @hidden\r\n * @internal\r\n */\r\nexport function Parser(): void {\r\n  let parser = new gparser.Parser();\r\n  let _parseError = parser.parseError;\r\n\r\n  parser.yy.parseError = function() {\r\n    if (parser.yy.ast) {\r\n      parser.yy.ast.initialize();\r\n    }\r\n    _parseError.apply(parser, arguments);\r\n  }\r\n\r\n  return parser;\r\n}", "export class assert {\r\n    static ok(predicate : boolean, message : string) {\r\n        if (!predicate)\r\n            throw new Error(message);\r\n    }\r\n\r\n    static equal(value : any, expected : any, message : string) {\r\n        if (value !== expected)\r\n            throw new Error(message);\r\n    }\r\n}", "import { Handlers } from \"./handlers\";\r\nimport { TOKENS } from './tokens';\r\nimport { Parser } from './parser';\r\n\r\nimport { assert } from './assert';\r\n\r\nexport class JSONPath {\r\n  static parse(string : string) {\r\n    assert.ok(typeof string === 'string', \"we need a path\");\r\n    return new Parser().parse(string);\r\n  }\r\n\r\n  static parent(obj, string) {\r\n    assert.ok(obj instanceof Object, \"obj needs to be an object\");\r\n    assert.ok(string, \"we need a path\");\r\n  \r\n    let node = this.nodes(obj, string)[0];\r\n    let key = node.path.pop(); /* jshint unused:false */\r\n    return this.value(obj, node.path);\r\n  }\r\n  \r\n  static apply(obj, string, fn) {\r\n\r\n    assert.ok(obj instanceof Object, \"obj needs to be an object\");\r\n    assert.ok(string, \"we need a path\");\r\n    assert.equal(typeof fn, \"function\", \"fn needs to be function\")\r\n\r\n    var nodes = this.nodes(obj, string).sort(function(a, b) {\r\n      // sort nodes so we apply from the bottom up\r\n      return b.path.length - a.path.length;\r\n    });\r\n\r\n    nodes.forEach(function(node) {\r\n      var key = node.path.pop();\r\n      var parent = this.value(obj, this.stringify(node.path));\r\n      var val = node.value = fn.call(obj, parent[key]);\r\n      parent[key] = val;\r\n    }, this);\r\n\r\n    return nodes;\r\n  }\r\n\r\n  static value(obj, path, value?) {\r\n\r\n    assert.ok(obj instanceof Object, \"obj needs to be an object\");\r\n    assert.ok(path, \"we need a path\");\r\n  \r\n    if (value !== undefined) {\r\n      var node = this.nodes(obj, path).shift();\r\n      if (!node) return this._vivify(obj, path, value);\r\n      var key = node.path.slice(-1).shift();\r\n      var parent = this.parent(obj, this.stringify(node.path));\r\n      parent[key] = value;\r\n    }\r\n    return this.query(obj, this.stringify(path), 1).shift();\r\n  }\r\n  \r\n  private static _vivify(obj, string, value) {\r\n    var self = this;\r\n\r\n    assert.ok(obj instanceof Object, \"obj needs to be an object\");\r\n    assert.ok(string, \"we need a path\");\r\n\r\n    var path = new Parser().parse(string)\r\n      .map(component => component.expression.value);\r\n\r\n    var setValue = function(path, value) {\r\n      var key = path.pop();\r\n      var node = self.value(obj, path);\r\n      if (!node) {\r\n        setValue(path.concat(), typeof key === 'string' ? {} : []);\r\n        node = self.value(obj, path);\r\n      }\r\n      node[key] = value;\r\n    }\r\n    setValue(path, value);\r\n    return this.query(obj, string)[0];\r\n  }\r\n\r\n  static query(obj : Object, string, count?) {\r\n    assert.ok(obj instanceof Object, \"obj needs to be an object\");\r\n    assert.ok(typeof string === 'string', \"we need a path\");\r\n  \r\n    var results = this.nodes(obj, string, count)\r\n      .map(function(r) { return r.value });\r\n  \r\n    return results;\r\n  }\r\n  \r\n  static paths(obj, string, count) {\r\n\r\n    assert.ok(obj instanceof Object, \"obj needs to be an object\");\r\n    assert.ok(string, \"we need a path\");\r\n\r\n    var results = this.nodes(obj, string, count)\r\n      .map(function(r) { return r.path });\r\n\r\n    return results;\r\n  }\r\n  \r\n  static nodes(obj, string, count?) {\r\n    assert.ok(obj instanceof Object, \"obj needs to be an object\");\r\n    assert.ok(string, \"we need a path\");\r\n\r\n    if (count === 0) return [];\r\n\r\n    let path = new Parser().parse(string);\r\n    let handlers = new Handlers();\r\n    let partials = [ { path: ['$'], value: obj } ];\r\n    let matches = [];\r\n\r\n    if (path.length && path[0].expression.type == 'root') path.shift();\r\n\r\n    if (!path.length) return partials;\r\n\r\n    path.forEach(function(component, index) {\r\n\r\n      if (matches.length >= count) return;\r\n      var handler = handlers.resolve(component);\r\n      var _partials = [];\r\n\r\n      partials.forEach(function(p) {\r\n\r\n        if (matches.length >= count) return;\r\n        var results = handler(component, p, count);\r\n\r\n        if (index == path.length - 1) {\r\n          // if we're through the components we're done\r\n          matches = matches.concat(results || []);\r\n        } else {\r\n          // otherwise accumulate and carry on through\r\n          _partials = _partials.concat(results || []);\r\n        }\r\n      });\r\n\r\n      partials = _partials;\r\n\r\n    });\r\n\r\n    return count ? matches.slice(0, count) : matches;\r\n  }\r\n\r\n  static stringify(path) {\r\n    assert.ok(path, \"we need a path\");\r\n\r\n    var string = '$';\r\n\r\n    var templates = {\r\n      'descendant-member': '..{{value}}',\r\n      'child-member': '.{{value}}',\r\n      'descendant-subscript': '..[{{value}}]',\r\n      'child-subscript': '[{{value}}]'\r\n    };\r\n\r\n    path = this._normalize(path);\r\n\r\n    path.forEach(function(component) {\r\n\r\n      if (component.expression.type == 'root') return;\r\n\r\n      var key = [component.scope, component.operation].join('-');\r\n      var template = templates[key];\r\n      var value;\r\n\r\n      if (component.expression.type == 'string_literal') {\r\n        value = JSON.stringify(component.expression.value)\r\n      } else {\r\n        value = component.expression.value;\r\n      }\r\n\r\n      if (!template) throw new Error(\"couldn't find template \" + key);\r\n\r\n      string += template.replace(/{{value}}/, value);\r\n    });\r\n\r\n    return string;\r\n  }\r\n  \r\n  private static _normalize(path) {\r\n    assert.ok(path, \"we need a path\");\r\n\r\n    if (typeof path == \"string\") {\r\n\r\n      return new Parser().parse(path);\r\n\r\n    } else if (Array.isArray(path) && typeof path[0] == \"string\") {\r\n\r\n      var _path : any[] = [ { expression: { type: \"root\", value: \"$\" } } ];\r\n\r\n      path.forEach(function(component, index) {\r\n\r\n        if (component == '$' && index === 0) return;\r\n\r\n        if (typeof component == \"string\" && component.match(\"^\" + TOKENS.identifier + \"$\")) {\r\n\r\n          _path.push({\r\n            operation: 'member',\r\n            scope: 'child',\r\n            expression: { value: component, type: 'identifier' }\r\n          });\r\n\r\n        } else {\r\n\r\n          var type = typeof component == \"number\" ?\r\n            'numeric_literal' : 'string_literal';\r\n\r\n          _path.push({\r\n            operation: 'subscript',\r\n            scope: 'child',\r\n            expression: { value: component, type: type }\r\n          });\r\n        }\r\n      });\r\n\r\n      return _path;\r\n\r\n    } else if (Array.isArray(path) && typeof path[0] == \"object\") {\r\n\r\n      return path\r\n    }\r\n\r\n    throw new Error(\"couldn't understand path \" + path);\r\n  }\r\n}"],
  "mappings": "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AAE,GAAE,GAAE,CAAC,GAAE,CAAC,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,GAAE,CAAC,CAAC,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,CAAC,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,EAAC,GAAE,CAAC,GAAE,CAAC,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,GAAE,CAAC,GAAE,CAAC,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,EAAE,KAAI,CAAC,GAAE,CAAC,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,CAAC,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,CAAC,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,CAAC,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,GAAE,CAAC,GAAE,CAAC,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,EAAE,KAAI,CAAC,GAAE,CAAC,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,CAAC;AAAA,QAC9kC,gBAAgB,EAAC,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,CAAC,GA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",
  "names": ["exports", "Syntax", "replace", "result", "path", "traverse", "element", "key", "comment", "isDecimalDigit", "ch", "isHexDigit", "isOctalDigit", "isWhiteSpace", "isLineTerminator", "strict", "isRestrictedWord", "match", "index", "length", "source", "sourceFile", "index", "index", "source", "length", "needle", "section", "source", "length", "require_package", "Syntax", "extra", "parse", "target", "match", "indent", "fragment", "length", "i", "iz", "key", "o", "parser", "parse", "lexer", "lex", "state", "match", "index", "Parser", "index", "value", "path", "index", "_evaluate", "Handlers", "component", "length", "Parser", "assert", "JSONPath", "assert", "Parser", "path", "value", "index"]
}
